<?xml version="1.0" encoding="UTF-8"?>

<package schemaVersion="1.7.15" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
  <vendor>Keil</vendor>
  <name>STM32H5xx_DFP</name>
  <description>STMicroelectronics STM32H5 Series Device Support</description>
  <url>https://www.keil.com/pack/</url>

  <releases>
    <release version="1.2.0" date="2023-09-01">
      Devices Support:
      - Updated to STM32Cube_FW_H5 Firmware Package version V1.1.0
      STM32CubeMX integration:
      - Added support for MEMORYMAP initialization (FrameworkCubeMX_gpdsc.ftl)
      CMSIS-Driver:
      - USB Device:
      -- Updated PowerControl function (added check if Instance is valid)
      -- Updated GetFrameNumber function (use LL function)
    </release>
    <release version="1.1.0" date="2023-07-10">
      CMSIS Driver:
      - Added Ethernet driver
      - Added I2C driver
      - Added SPI driver
      - Added USART/UART driver
      - Added USB Device driver
      Device Support:
      - Corrected TZ feature for STM32H503 devices
      - Added CubeMX support
      - Added datasheets and reference manuals
    </release>
    <release version="1.0.0" date="2023-03-13">
      Initial public release.
      Devices Support:
      - Updated STM32Cube_FW_H5 Firmware Package version to V1.0.0 (HAL v1.0.0)
    </release>
      <!-- non-public release notes:
      version: 0.0.5
      - Fix NS flashloader programming
      version: 0.0.4
      - Updated SVD files and CMSIS device
      version: 0.0.3
      - Third Alpha Release of STM32Cube_FW_H5_V0.3.0: CMSIS Device support
        - Updated SVD files rev0.2: a complete support
        - Updated Documentations.
      version: 0.0.2
      - First Alpha Release of STM32Cube_FW_H5_V0.1.0: CMSIS Device support
        - Initial release STM32H503 lines with 128 kB: Internal Flash programming
        - Updated SVD files based on IPXACT.
      version 0.0.1
      - adding support to the STM32H573/STM32H563/STM32H562 lines with 2MB: Internal Non-secure/Secure Flash programming
    -->
  </releases>

  <keywords>
    <keyword>ST</keyword>
    <keyword>Device Support</keyword>
    <keyword>Device Family Package STMicroelectronics</keyword>
    <keyword>STM32H5</keyword>
    <keyword>STM32H5xx</keyword>
  </keywords>

  <devices>
    <family Dfamily="STM32H5 Series" Dvendor="STMicroelectronics:13">
      <processor Dcore="Cortex-M33" DcoreVersion="r0p0" Dfpu="SP_FPU" Dmpu="MPU" Ddsp="DSP" Dendian="Little-endian" Dclock="240000000"/>
      <description>
The ARM Cortex-M33 based Microcontroller with FPU(Floating-Point Unit)is the most configurable of all Cortex-M processors.
It is a full featured microcontroller class processor based on the ARMv8-M mainline architecture with ARM TrustZone security.
      </description>

      <book name="Documentation/arm_cortex_m33_dgug_100235_0004_00_en.pdf"  title="Arm Cortex-M33 Devices"/>

      <sequences>
        <!-- Override for Pre-Defined Sequences -->
        <sequence name="DebugDeviceUnlock">
          <block>
            __var traceSWO    = (__traceout &amp; 0x1) != 0;                        // SWO enabled?
            __var traceTPIU   = (__traceout &amp; 0x2) != 0;                        // Synchronous trace port enabled?

            Sequence("CheckID");
          </block>

          <control if="traceSWO">
            <block>
              Sequence("ConfigureTraceSWOClock");
            </block>
          </control>

          <control if="traceTPIU">
            <block>
              Sequence("ConfigureTraceTPIUClock");
            </block>
          </control>

        </sequence>

        <sequence name="DebugCoreStart">
          <block>
            __var ap = __ap;                                                        // Save current AP

            // Replication of Standard Functionality
            Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR

            // Device Specific Debug Setup
            __ap = 0;                                                               // Select System debug access port (AP0)
            Write32(0xE0044004, DbgMCU_CR | (Read32(0xE0044004) &amp; 0xF0));       // DBGMCU_CR: Configure MCU Debug
            Write32(0xE0044008, DbgMCU_APB1L_Fz);                                   // DBGMCU_APB1_FZ: Configure APB1L Peripheral Freeze Behavior
            Write32(0xE004400C, DbgMCU_APB1H_Fz);                                   // DBGMCU_APB1_FZ: Configure APB1H Peripheral Freeze Behavior
            Write32(0xE0044010, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
            Write32(0xE0044014, DbgMCU_APB3_Fz);                                    // DBGMCU_APB3FZR: Configure APB3 Peripheral Freeze Behavior
            Write32(0xE0044020, DbgMCU_AHB1_Fz);                                    // DBGMCU_AHB1FZR: Configure AHB1 Peripheral Freeze Behavior
            __ap = ap;                                                              // Restore AP
          </block>
        </sequence>

        <!-- Override for Pre-Defined TraceStart Sequence -->
        <sequence name="TraceStart">
          <block>
            __var traceSWO    = (__traceout &amp; 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
            __var traceTPIU   = (__traceout &amp; 0x2) != 0;                        // Synchronous trace port enabled?
          </block>

          <control if="traceSWO">
            <block>
              Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
            </block>
          </control>

          <control if="traceTPIU">
            <block>
              Sequence("EnableTraceTPIU");                                          // Call TPIU Trace Setup
            </block>
          </control>

        </sequence>

        <sequence name="TraceStop">
          <block>
            __var traceSWO    = (__traceout &amp; 0x1) != 0;                        // SWO enabled?
            __var traceTPIU   = (__traceout &amp; 0x2) != 0;                        // Synchronous trace port enabled?
          </block>

          <control if="traceSWO">
            <block>
              Sequence("DisableTraceSWO");
            </block>
          </control>

          <control if="traceTPIU">
            <block>
              Sequence("DisableTraceTPIU");
            </block>
          </control>
        </sequence>

        <!-- User-Defined Sequences -->
        <sequence name="CheckID">
          <block>
            __var pidr1 = 0;
            __var pidr2 = 0;
            __var jep106id = 0;
            __var ROMTableBase = 0;

            __ap = 0;      // AHB-AP

            ROMTableBase = ReadAP(0xF8) &amp; ~0x3;

            pidr1 = Read32(ROMTableBase + 0x0FE4);
            pidr2 = Read32(ROMTableBase + 0x0FE8);
            jep106id = ((pidr2 &amp; 0x7) &lt;&lt; 4 ) | ((pidr1 &gt;&gt; 4) &amp; 0xF);
          </block>

          <control if="jep106id != 0x20">
            <block>
              Query(0, "Not a genuine ST Device! Abort connection", 1);
              Message(2, "Not a genuine ST Device! Abort connection.");
            </block>
          </control>
        </sequence>

        <sequence name="EnableTraceSWO">
          <block>
            Sequence("ConfigureTraceSWOPin");
            Sequence("ConfigureTraceSWOClock");
          </block>
        </sequence>

        <sequence name="DisableTraceSWO">
          <block>
            __var ap = __ap;                                                        // Save current AP
            __var dbgmcu_val       = 0;                                             // DBGMCU_CR Value
          </block>

          <block info="unconfigure Trace Port and Clock Enable + Trace I/O Enable + Trace Mode Asynchronous">
            __ap = 0;                                                               // Select System debug access port (AP0)
            dbgmcu_val = Read32(0xE0044004) &amp; (~0xF0);                          // Read DBGMCU_CR and clear trace setup
            Write32(0xE0044004, dbgmcu_val);                                        // Write DBGMCU_CR: Trace Settings
            __ap = ap;                                                              // Restore AP
          </block>
        </sequence>

        <sequence name="EnableTraceTPIU">
          <block>
            Sequence("ConfigureTraceTPIUPins");
            Sequence("ConfigureTraceTPIUClock");
          </block>
        </sequence>

        <sequence name="DisableTraceTPIU">
          <block>
            __var ap = __ap;                                                        // Save current AP
            __var dbgmcu_val       = 0;                                             // DBGMCU_CR Value
          </block>

          <block info="unconfigure Trace I/O Enable + Trace Mode Synchronous">
            __ap = 0;                                                               // Select System debug access port (AP0)
            dbgmcu_val = Read32(0xE0044004) &amp; (~0xF0);                          // Read DBGMCU_CR and clear trace setup
            Write32(0xE0044004, dbgmcu_val);                                        // Write DBGMCU_CR: Trace Settings
            __ap = ap;                                                              // Restore AP
          </block>
        </sequence>

        <sequence name="ConfigureTraceSWOClock">
          <block>
            __var ap = __ap;                                                        // Save current AP
            __var dbgmcu_val       = 0;                                             // DBGMCU_CR Value
            __var dbgmcu_trace_val = 0;                                             // DBGMCU_CR Value

            __ap = 0;                                                               // Select System debug access port (AP0)
            dbgmcu_val        = Read32(0xE0044004) &amp; (~0xF0);                   // Read DBGMCU_CR and clear trace setup
            dbgmcu_trace_val  = (1 &lt;&lt; 5) | (1 &lt;&lt; 4);                    // Trace Port and Clock Enable + Trace I/O Enable + Trace Mode Asynchronous
            __ap = ap;                                                              // Restore AP
          </block>

          <block info="configure Trace I/O Enable + Trace Mode Asynchronous">
            __ap = 0;                                                               // Select System debug access port (AP0)
            Write32(0xE0044004, dbgmcu_val | dbgmcu_trace_val);                     // Write DBGMCU_CR: Trace Settings
            __ap = ap;                                                              // Restore AP
          </block>
        </sequence>

        <sequence name="ConfigureTraceTPIUClock">
          <block>
            __var ap = __ap;                                                        // Save current AP
            __var dbgmcu_val       = 0;                                             // DBGMCU_CR Value
            __var dbgmcu_trace_val = 0;                                             // DBGMCU_CR Value
            __var width            = (__traceout &amp; 0x003F0000) &gt;&gt; 16;

            __ap = 0;                                                               // Select System debug access port (AP0)
            dbgmcu_val = Read32(0xE0044004) &amp; (~0xF0);                          // Read DBGMCU_CR and clear trace setup
            __ap = ap;                                                              // Restore AP
          </block>

          <control if="width &gt;= 1" info="TPIU port width 1">
            <block info="configure Trace Port and Clock Enable + Trace I/O Enable + Trace Mode Synchronous 1 bit">
              dbgmcu_trace_val  = (3 &lt;&lt; 5) | (1 &lt;&lt; 4);
            </block>
          </control>

          <control if="width &gt;= 2" info="TPIU port width 2">
            <block info="configure Trace Port and Clock Enable + Trace I/O Enable + Trace Mode Synchronous 2 bit">
              dbgmcu_trace_val  = (5 &lt;&lt; 5) | (1 &lt;&lt; 4);
            </block>
          </control>

          <control if="width &gt;= 4" info="TPIU port width 4">
            <block info="configure Trace Port and Clock Enable + Trace I/O Enable + Trace Mode Synchronous 4 bit">
              dbgmcu_trace_val  = (7 &lt;&lt; 5) | (1 &lt;&lt; 4);
            </block>
          </control>

          <block info="configure Trace I/O Enable + Trace Mode Asynchronous">
            __ap = 0;                                                               // Select System debug access port (AP0)
            Write32(0xE0044004, dbgmcu_val | dbgmcu_trace_val);                     // Write DBGMCU_CR: Trace Settings
            __ap = ap;                                                              // Restore AP
          </block>
        </sequence>

        <sequence name="ConfigureTraceSWOPin">
          <block>
            __var pin     = 0;
            __var port    = 0;
            __var portAdr = 0;
            __var pos     = 0;
            __var secOffs = 0x00000000;

            __var SWO_Pin = 0x00010003;                                             // PB3
          </block>

          <control if="(Read32(0xE000EFB8) &amp; 0x000000F0) == 0x000000F0" info="Secure debug enabled?">
            <block>
              secOffs = 0x10000000;
            </block>
          </control>

          <!-- configure SWO -->
          <block info="configure SWO">
            pin     = ((SWO_Pin            ) &amp; 0x0000FFFF);
            port    = ((SWO_Pin &gt;&gt; 16) &amp; 0x0000FFFF);
            portAdr = 0x42020000 + secOffs + (port * 0x400);

            pos = pin * 2;
            Write32(0x44020C8C + secOffs, ((Read32(0x44020C8C + secOffs)             ) | (1 &lt;&lt; port)) );  // RCC_AHB2ENR:  IO port clock enable

            Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
            Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
            Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
          </block>
          <control if="pin &lt;  8">
            <block>
            pos = ((pin    ) &amp; 7) * 4;
            Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
            </block>
          </control>
          <control if="pin &gt;= 8">
            <block>
            pos = ((pin - 8) &amp; 7) * 4;
            Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
            </block>
          </control>
        </sequence>

        <sequence name="ConfigureTraceTPIUPins">
          <block>
            __var pin     = 8;
            __var port    = 0;
            __var portAdr = 0;
            __var pos     = 0;
            __var secOffs = 0x00000000;
            __var width   = (__traceout &amp; 0x003F0000) &gt;&gt; 16;
          </block>

          <control if="(Read32(0xE000EFB8) &amp; 0x000000F0) == 0x000000F0" info="Secure debug enabled?">
            <block>
              secOffs = 0x10000000;
            </block>
          </control>

            <!-- configure TRACECLK -->
            <block info="configure TRACECLK">
              pin     = (TraceClk_Pin            ) &amp; 0x0000FFFF;
              port    = (TraceClk_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x42020000 + secOffs + (port * 0x400);

              pos = pin * 2;
              Write32(0x44020C8C + secOffs, ((Read32(0x44020C8C + secOffs)             ) | (1 &lt;&lt; port)) );  // RCC_AHB2ENR1:  IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>

          <control if="width &gt;= 1" info="TPIU port width 1">
            <!-- configure TRACED0 -->
            <block info="configure TRACED0">
              pin     = (TraceD0_Pin            ) &amp; 0x0000FFFF;
              port    = (TraceD0_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x42020000 + secOffs + (port * 0x400);

              pos = pin * 2;
              Write32(0x44020C8C + secOffs, ((Read32(0x44020C8C + secOffs)             ) | (1 &lt;&lt; port)) );  // RCC_AHB2ENR1:  IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
          </control>

          <control if="width &gt;= 2" info="TPIU port width 2">
            <!-- configure TRACED1 -->
            <block info="configure TRACED1">
              pin     = (TraceD1_Pin            ) &amp; 0x0000FFFF;
              port    = (TraceD1_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x42020000 + secOffs + (port * 0x400);

              pos = pin * 2;
              Write32(0x44020C8C + secOffs, ((Read32(0x44020C8C + secOffs)             ) | (1 &lt;&lt; port)) );  // RCC_AHB2ENR1:  IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
          </control>

          <control if="width &gt;= 4" info="TPIU port width 4">
            <!-- configure TRACED2 -->
            <block info="configure TRACED2">
              pin     = (TraceD2_Pin            ) &amp; 0x0000FFFF;
              port    = (TraceD2_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x42020000 + secOffs + (port * 0x400);

              pos = pin * 2;
              Write32(0x44020C8C + secOffs, ((Read32(0x44020C8C + secOffs)             ) | (1 &lt;&lt; port)) );  // RCC_AHB2ENR1:  IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>

            <!-- configure TRACED3 -->
            <block info="configure TRACED3">
              pin     = (TraceD3_Pin            ) &amp; 0x0000FFFF;
              port    = (TraceD3_Pin &gt;&gt; 16) &amp; 0x0000FFFF;
              portAdr = 0x42020000 + secOffs + (port * 0x400);

              pos = pin * 2;
              Write32(0x44020C8C + secOffs, ((Read32(0x44020C8C + secOffs)             ) | (1 &lt;&lt; port)) );  // RCC_AHB2ENR1:  IO port clock enable
              Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) &amp; ~( 3 &lt;&lt; pos)) | (2 &lt;&lt; pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
              Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 &lt;&lt; pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
              Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) &amp; ~( 3 &lt;&lt; pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
            </block>
            <control if="pin &lt;  8">
              <block>
              pos = ((pin    ) &amp; 7) * 4;
              Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
              </block>
            </control>
            <control if="pin &gt;= 8">
              <block>
              pos = ((pin - 8) &amp; 7) * 4;
              Write32(portAdr + 0x24, ((Read32(portAdr + 0x24) &amp; ~(15 &lt;&lt; pos))                    ) );  // GPIOx_AFRH:    Alternate Function to AF0
              </block>
            </control>
          </control>
        </sequence>
      </sequences>


      <!-- ************************  Subfamily 'STM32H562'  *************************** -->
      <subFamily DsubFamily="STM32H562">
        <processor Dtz="TZ"/>
        <compile header="Drivers/CMSIS/Device/ST/STM32H5xx/Include/stm32h5xx.h"  define="STM32H562xx"/>
        <debug __ap="1" svd="CMSIS/SVD/STM32H562.svd"/>

        <book name="Documentation/RM0481.pdf" title="STM32H563/H573 and STM32H562 Reference Manual"/>

        <debugvars configfile="CMSIS/Debug/STM32H562xx_H563xx_H573xx.dbgconf" version="1.0.0">
          __var DbgMCU_CR       = 0x00000006;   // DBGMCU_CR: DBG_STOP, DBG_STANDBY
          __var DbgMCU_APB1L_Fz = 0x00000000;   // DGBMCU_APB1LFZR: All Peripherals Operate as in Normal Mode
          __var DbgMCU_APB1H_Fz = 0x00000000;   // DGBMCU_APB1HFZR: All Peripherals Operate as in Normal Mode
          __var DbgMCU_APB2_Fz  = 0x00000000;   // DGBMCU_APB2FZR : All Peripherals Operate as in Normal Mode
          __var DbgMCU_APB3_Fz  = 0x00000000;   // DBGMCU_APB3FZR : All Peripherals Operate as in Normal Mode
          __var DbgMCU_AHB1_Fz  = 0x00000000;   // DBGMCU_AHB1FZR : All Peripherals Operate as in Normal Mode
          __var TraceClk_Pin    = 0x00040002;   // PE2
          __var TraceD0_Pin     = 0x00040003;   // PE3
          __var TraceD1_Pin     = 0x00040004;   // PE4
          __var TraceD2_Pin     = 0x00040005;   // PE5
          __var TraceD3_Pin     = 0x00040006;   // PE6
        </debugvars>

        <algorithm name="CMSIS/Flash/STM32H5xx_2M_0800.FLM" start="0x08000000" size="0x00200000" default="1" RAMstart="0x20000000" RAMsize="0x8000" />
        <algorithm name="CMSIS/Flash/STM32H5xx_2M_0C00.FLM" start="0x0C000000" size="0x00200000" default="1" RAMstart="0x20000000" RAMsize="0x8000" />

        <memory name="Flash"   access="rx"                  start="0x08000000" size="0x00200000" default="1" startup="1" />
        <memory name="SRAM1_2" access="rwx"                 start="0x20000000" size="0x00050000" default="1" init="0" />
        <memory name="SRAM3"   access="rwx"                 start="0x20050000" size="0x00050000" default="0" init="0" />

        <!-- ################################### 2MB ################################## -->
        <!-- *************************  Device 'STM32H562RI'   ************************ -->
        <device Dname="STM32H562RITx">
          <feature type="QFP" n="64"/>
        </device>
        <device Dname="STM32H562RIVx">
          <feature type="QFN" n="68"/>
        </device>

        <!-- *************************  Device 'STM32H562VI'  ************************* -->
        <device Dname="STM32H562VITx">
          <feature type="QFP" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H562ZI'   ************************ -->
        <device Dname="STM32H562ZITx">
          <feature type="QFP" n="144"/>
        </device>

        <!-- *************************  Device 'STM32H562II'   ************************ -->
        <device Dname="STM32H562IITx">
          <feature type="QFP" n="176"/>
        </device>
        <device Dname="STM32H562IIKx">
          <feature type="BGA" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H562AI'   ************************ -->
        <device Dname="STM32H562AIIx">
          <feature type="BGA" n="169"/>
        </device>

      </subFamily>

      <!-- ************************  Subfamily 'STM32H563'  *************************** -->
      <subFamily DsubFamily="STM32H563">
        <processor Dtz="TZ"/>
        <compile header="Drivers/CMSIS/Device/ST/STM32H5xx/Include/stm32h5xx.h"  define="STM32H563xx"/>
        <debug __ap="1" svd="CMSIS/SVD/STM32H563.svd"/>

        <book name="Documentation/RM0481.pdf"  title="STM32H563/H573 and STM32H562 Reference Manual"/>
        <book name="Documentation/DS14258.pdf" title="STM32H562xx and STM32H563xx Data Sheet"/>

        <debugvars configfile="CMSIS/Debug/STM32H562xx_H563xx_H573xx.dbgconf" version="1.0.0">
          __var DbgMCU_CR       = 0x00000006;   // DBGMCU_CR: DBG_STOP, DBG_STANDBY
          __var DbgMCU_APB1L_Fz = 0x00000000;   // DGBMCU_APB1LFZR: All Peripherals Operate as in Normal Mode
          __var DbgMCU_APB1H_Fz = 0x00000000;   // DGBMCU_APB1HFZR: All Peripherals Operate as in Normal Mode
          __var DbgMCU_APB2_Fz  = 0x00000000;   // DGBMCU_APB2FZR : All Peripherals Operate as in Normal Mode
          __var DbgMCU_APB3_Fz  = 0x00000000;   // DBGMCU_APB3FZR : All Peripherals Operate as in Normal Mode
          __var DbgMCU_AHB1_Fz  = 0x00000000;   // DBGMCU_AHB1FZR : All Peripherals Operate as in Normal Mode
          __var TraceClk_Pin    = 0x00040002;   // PE2
          __var TraceD0_Pin     = 0x00040003;   // PE3
          __var TraceD1_Pin     = 0x00040004;   // PE4
          __var TraceD2_Pin     = 0x00040005;   // PE5
          __var TraceD3_Pin     = 0x00040006;   // PE6
        </debugvars>

        <algorithm name="CMSIS/Flash/STM32H5xx_2M_0800.FLM" start="0x08000000" size="0x00200000" default="1" RAMstart="0x20000000" RAMsize="0x8000" />
        <algorithm name="CMSIS/Flash/STM32H5xx_2M_0C00.FLM" start="0x0C000000" size="0x00200000" default="1" RAMstart="0x20000000" RAMsize="0x8000" />

        <memory name="Flash"   access="rx"                  start="0x08000000" size="0x00200000" default="1" startup="1" />
        <memory name="SRAM1_2" access="rwx"                 start="0x20000000" size="0x00050000" default="1" init="0" />
        <memory name="SRAM3"   access="rwx"                 start="0x20050000" size="0x00050000" default="0" init="0" />

        <!-- ################################### 2MB ################################## -->
        <!-- *************************  Device 'STM32H563RI'   ************************ -->
        <device Dname="STM32H563RITx">
          <feature type="QFP" n="64"/>
        </device>
        <device Dname="STM32H563RIVx">
          <feature type="QFN" n="68"/>
        </device>

        <!-- *************************  Device 'STM32H563VI'  ************************* -->
        <device Dname="STM32H563VITx">
          <feature type="QFP" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H563ZI'   ************************ -->
        <device Dname="STM32H563ZITx">
          <feature type="QFP" n="144"/>
        </device>

        <!-- *************************  Device 'STM32H563II'   ************************ -->
        <device Dname="STM32H563IITx">
          <feature type="QFP" n="176"/>
        </device>
        <device Dname="STM32H563IIKx">
          <feature type="BGA" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H563AI'   ************************ -->
        <device Dname="STM32H563AIIx">
          <feature type="BGA" n="169"/>
        </device>

        <!-- *************************  Device 'STM32H563MI'   ************************ -->
        <device Dname="STM32H563MIYxQ">
          <feature type="CSP" n="80"/>
        </device>

      </subFamily>

      <!-- ************************  Subfamily 'STM32H573'  *************************** -->
      <subFamily DsubFamily="STM32H573">
        <processor Dtz="TZ"/>
        <compile header="Drivers/CMSIS/Device/ST/STM32H5xx/Include/stm32h5xx.h"  define="STM32H573xx"/>
        <debug __ap="1" svd="CMSIS/SVD/STM32H573.svd"/>

        <book name="Documentation/RM0481.pdf"  title="STM32H563/H573 and STM32H562 Reference Manual"/>
        <book name="Documentation/DS14121.pdf" title="STM32H573xx Data Sheet"/>

        <debugvars configfile="CMSIS/Debug/STM32H562xx_H563xx_H573xx.dbgconf" version="1.0.0">
          __var DbgMCU_CR       = 0x00000006;   // DBGMCU_CR: DBG_STOP, DBG_STANDBY
          __var DbgMCU_APB1L_Fz = 0x00000000;   // DGBMCU_APB1LFZR: All Peripherals Operate as in Normal Mode
          __var DbgMCU_APB1H_Fz = 0x00000000;   // DGBMCU_APB1HFZR: All Peripherals Operate as in Normal Mode
          __var DbgMCU_APB2_Fz  = 0x00000000;   // DGBMCU_APB2FZR : All Peripherals Operate as in Normal Mode
          __var DbgMCU_APB3_Fz  = 0x00000000;   // DBGMCU_APB3FZR : All Peripherals Operate as in Normal Mode
          __var DbgMCU_AHB1_Fz  = 0x00000000;   // DBGMCU_AHB1FZR : All Peripherals Operate as in Normal Mode
          __var TraceClk_Pin    = 0x00040002;   // PE2
          __var TraceD0_Pin     = 0x00040003;   // PE3
          __var TraceD1_Pin     = 0x00040004;   // PE4
          __var TraceD2_Pin     = 0x00040005;   // PE5
          __var TraceD3_Pin     = 0x00040006;   // PE6
        </debugvars>

        <algorithm name="CMSIS/Flash/STM32H5xx_2M_0800.FLM" start="0x08000000" size="0x00200000" default="1" RAMstart="0x20000000" RAMsize="0x8000" />
        <algorithm name="CMSIS/Flash/STM32H5xx_2M_0C00.FLM" start="0x0C000000" size="0x00200000" default="1" RAMstart="0x20000000" RAMsize="0x8000" />

        <memory name="Flash"   access="rx"                  start="0x08000000" size="0x00200000" default="1" startup="1" />
        <memory name="SRAM1_2" access="rwx"                 start="0x20000000" size="0x00050000" default="1" init="0" />
        <memory name="SRAM3"   access="rwx"                 start="0x20050000" size="0x00050000" default="0" init="0" />

        <!-- ################################### 2MB ################################## -->
        <!-- *************************  Device 'STM32H573RI'   ***************************** -->

        <device Dname="STM32H573RITx">
          <feature type="QFP" n="64"/>
        </device>
        <device Dname="STM32H573RIVx">
          <feature type="QFN" n="68"/>
        </device>

        <!-- *************************  Device 'STM32H573VI'  ***************************** -->
        <device Dname="STM32H573VITx">
          <feature type="QFP" n="100"/>
        </device>

        <!-- *************************  Device 'STM32H573ZI'   ***************************** -->
        <device Dname="STM32H573ZITx">
          <feature type="QFP" n="144"/>
        </device>

        <!-- *************************  Device 'STM32H573II'   ***************************** -->
        <device Dname="STM32H573IITx">
          <feature type="QFP" n="176"/>
        </device>
        <device Dname="STM32H573IIKx">
          <feature type="BGA" n="176"/>
        </device>

        <!-- *************************  Device 'STM32H573AI'   ***************************** -->
        <device Dname="STM32H573AIIx">
          <feature type="BGA" n="169"/>
        </device>

        <!-- *************************  Device 'STM32H573MI'   ***************************** -->
        <device Dname="STM32H573MIYxQ">
          <feature type="CSP" n="80"/>
        </device>

      </subFamily>

      <!-- ************************  Subfamily 'STM32H503'  *************************** -->
      <subFamily DsubFamily="STM32H503">
        <processor Dtz="NO_TZ"/>
        <compile header="Drivers/CMSIS/Device/ST/STM32H5xx/Include/stm32h5xx.h"  define="STM32H503xx"/>
        <debug __ap="1" svd="CMSIS/SVD/STM32H503.svd"/>

        <book name="Documentation/RM0492.pdf"  title="STM32H503xx Reference Manual"/>
        <book name="Documentation/DS14053.pdf" title="STM32H503xx Data Sheet"/>

        <debugvars configfile="CMSIS/Debug/STM32H503xx.dbgconf" version="1.0.0">
          __var DbgMCU_CR       = 0x00000006;   // DBGMCU_CR: DBG_STOP, DBG_STANDBY
          __var DbgMCU_APB1L_Fz = 0x00000000;   // DGBMCU_APB1LFZR: All Peripherals Operate as in Normal Mode
          __var DbgMCU_APB1H_Fz = 0x00000000;   // DGBMCU_APB1HFZR: All Peripherals Operate as in Normal Mode
          __var DbgMCU_APB2_Fz  = 0x00000000;   // DGBMCU_APB2FZR : All Peripherals Operate as in Normal Mode
          __var DbgMCU_APB3_Fz  = 0x00000000;   // DBGMCU_APB3FZR : All Peripherals Operate as in Normal Mode
          __var DbgMCU_AHB1_Fz  = 0x00000000;   // DBGMCU_AHB1FZR : All Peripherals Operate as in Normal Mode
          __var TraceClk_Pin    = 0x00010005;   // PB5
          __var TraceD0_Pin     = 0x00010006;   // PB6
          __var TraceD1_Pin     = 0x00010007;   // PB7
          __var TraceD2_Pin     = 0x00010008;   // PB8
          __var TraceD3_Pin     = 0x0002000C;   // PC12
        </debugvars>

        <algorithm name="CMSIS/Flash/STM32H503_128k_0800.FLM" start="0x08000000" size="0x00020000" default="1" RAMstart="0x20000000" RAMsize="0x8000" />

        <memory name="Flash"   access="rx"                    start="0x08000000" size="0x00020000" default="1" startup="1" />
        <memory name="SRAM1"   access="rwx"                   start="0x20000000" size="0x00004000" default="1" init="0" />
        <memory name="SRAM2"   access="rwx"                   start="0x20004000" size="0x00004000" default="0" init="0" />

        <!-- ################################### 128kB ################################ -->
        <!-- *************************  Device 'STM32H503EB'   ************************ -->
        <device Dname="STM32H503EBYx">
          <feature type="CSP" n="25"/>
        </device>

        <!-- *************************  Device 'STM32H503KB'   ************************ -->
        <device Dname="STM32H503KBUx">
          <feature type="QFP" n="32"/>
        </device>

        <!-- *************************  Device 'STM32H503CB'   ************************ -->
        <device Dname="STM32H503CBUx">
          <feature type="QFP" n="48"/>
        </device>
        <device Dname="STM32H503CBTx">
          <feature type="QFP" n="48"/>
        </device>

        <!-- *************************  Device 'STM32H503RB'   ************************ -->
        <device Dname="STM32H503RBTx">
          <feature type="QFP" n="64"/>
        </device>

      </subFamily>

    </family>
  </devices>

  <conditions>
    <!-- Compiler Conditions -->
    <condition id="Compiler ARMCC">
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="Compiler GCC">
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="Compiler IAR">
      <require Tcompiler="IAR"/>
    </condition>

    <!-- Security Conditions -->
    <condition id="isSecure">
      <description>TZ enabled secure app</description>
      <require Dsecure="Secure"/>
    </condition>
    <condition id="isNonSecure">
      <description>TZ enabled non-secure app </description>
      <require Dsecure="Non-secure"/>
    </condition>
    <condition id="noTZ">
      <description>Not TZ enabled app</description>
      <require Dsecure="TZ-disabled"/>
    </condition>


    <!-- Device Conditions -->
    <condition id="STM32H5">
      <description>STMicroelectronics STM32H5 Devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32H5*"/>
    </condition>

    <condition id="STM32H503">
      <description>STMicroelectronics STM32H503 Devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32H503*"/>
    </condition>
    <condition id="STM32H562">
      <description>STMicroelectronics STM32H562 Devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32H562*"/>
    </condition>
    <condition id="STM32H563">
      <description>STMicroelectronics STM32H563 Devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32H563*"/>
    </condition>
    <condition id="STM32H573">
      <description>STMicroelectronics STM32H573 Devices</description>
      <require Dvendor="STMicroelectronics:13" Dname="STM32H573*"/>
    </condition>

    <condition id="STM32H562_S">
      <description>STMicroelectronics STM32H562 Devices Secure Model</description>
      <require condition="STM32H562"/>
      <require Dsecure="Secure"/>
    </condition>
    <condition id="STM32H563_S">
      <description>STMicroelectronics STM32H563 Devices Secure Model</description>
      <require condition="STM32H563"/>
      <require Dsecure="Secure"/>
    </condition>
    <condition id="STM32H573_S">
      <description>STMicroelectronics STM32H573 Devices Secure Model</description>
      <require condition="STM32H573"/>
      <require Dsecure="Secure"/>
    </condition>

    <!-- Device + Security Conditions -->
    <condition id="STM32H5 noTZ">
      <description>STMicroelectronics STM32H5 Device and Not TZ enabled app</description>
      <require condition="STM32H5"/>
      <accept Dsecure="TZ-disabled"/>
      <accept Dtz="NO_TZ"/>
    </condition>
    <condition id="STM32H5 isSecure">
      <description>STMicroelectronics STM32H5 Device and TZ enabled secure app</description>
      <require condition="STM32H5"/>
      <require Dsecure="Secure"/>
      <deny Dtz="NO_TZ"/>
    </condition>
    <condition id="STM32H5 isNonSecure">
      <description>STMicroelectronics STM32H5 Device and TZ enabled non-secure app </description>
      <require condition="STM32H5"/>
      <require Dsecure="Non-secure"/>
      <deny Dtz="NO_TZ"/>
    </condition>

    <!-- Device + CMSIS Conditions -->
    <condition id="STM32H5 CMSIS">
      <description>STMicroelectronics STM32H5 Device and CMSIS-CORE</description>
      <require condition="STM32H5"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <!-- Device + Compiler Conditions (ARMCC) -->
    <condition id="STM32H503 ARMCC" >
      <description>STMicroelectronics STM32H503 Devices and ARMCC Compiler</description>
      <require condition="STM32H503"/>
      <require condition="Compiler ARMCC"/>
    </condition>
    <condition id="STM32H562 ARMCC" >
      <description>STMicroelectronics STM32H562 Devices and ARMCC Compiler</description>
      <require condition="STM32H562"/>
      <require condition="Compiler ARMCC"/>
    </condition>
    <condition id="STM32H563 ARMCC" >
      <description>STMicroelectronics STM32H563 Devices and ARMCC Compiler</description>
      <require condition="STM32H563"/>
      <require condition="Compiler ARMCC"/>
    </condition>
    <condition id="STM32H573 ARMCC" >
      <description>STMicroelectronics STM32H573 Devices and ARMCC Compiler</description>
      <require condition="STM32H573"/>
      <require condition="Compiler ARMCC"/>
    </condition>

    <!-- Device + Security + Compiler Conditions (ARMCC) -->
    <condition id="STM32H562 noTZ ARMCC" >
      <require condition="STM32H562"/>
      <require condition="noTZ"/>
      <require condition="Compiler ARMCC"/>
    </condition>
    <condition id="STM32H562 isSecure ARMCC" >
      <require condition="STM32H562"/>
      <require condition="isSecure"/>
      <require condition="Compiler ARMCC"/>
    </condition>
    <condition id="STM32H562 isNonSecure ARMCC" >
      <require condition="STM32H562"/>
      <require condition="isNonSecure"/>
      <require condition="Compiler ARMCC"/>
    </condition>

    <condition id="STM32H563 noTZ ARMCC" >
      <require condition="STM32H563"/>
      <require condition="noTZ"/>
      <require condition="Compiler ARMCC"/>
    </condition>
    <condition id="STM32H563 isSecure ARMCC" >
      <require condition="STM32H563"/>
      <require condition="isSecure"/>
      <require condition="Compiler ARMCC"/>
    </condition>
    <condition id="STM32H563 isNonSecure ARMCC" >
      <require condition="STM32H563"/>
      <require condition="isNonSecure"/>
      <require condition="Compiler ARMCC"/>
    </condition>

    <condition id="STM32H573 noTZ ARMCC" >
      <require condition="STM32H573"/>
      <require condition="noTZ"/>
      <require condition="Compiler ARMCC"/>
    </condition>
    <condition id="STM32H573 isSecure ARMCC" >
      <require condition="STM32H573"/>
      <require condition="isSecure"/>
      <require condition="Compiler ARMCC"/>
    </condition>
    <condition id="STM32H573 isNonSecure ARMCC" >
      <require condition="STM32H573"/>
      <require condition="isNonSecure"/>
      <require condition="Compiler ARMCC"/>
    </condition>

    <!-- Device + Compiler Conditions (GCC) -->
    <condition id="STM32H503 GCC" >
      <description>STMicroelectronics STM32H503 Devices and GCC Compiler</description>
      <require condition="STM32H503"/>
      <require condition="Compiler GCC"/>
    </condition>
    <condition id="STM32H562 GCC" >
      <description>STMicroelectronics STM32H562 Devices and GCC Compiler</description>
      <require condition="STM32H562"/>
      <require condition="Compiler GCC"/>
    </condition>
    <condition id="STM32H563 GCC" >
      <description>STMicroelectronics STM32H563 Devices and GCC Compiler</description>
      <require condition="STM32H563"/>
      <require condition="Compiler GCC"/>
    </condition>
    <condition id="STM32H573 GCC" >
      <description>STMicroelectronics STM32H573 Devices and GCC Compiler</description>
      <require condition="STM32H573"/>
      <require condition="Compiler GCC"/>
    </condition>

    <!-- Device + Security + Compiler Conditions (GCC) -->
    <condition id="STM32H562 noTZ GCC" >
      <require condition="STM32H562"/>
      <require condition="noTZ"/>
      <require condition="Compiler GCC"/>
    </condition>
    <condition id="STM32H562 isSecure GCC" >
      <require condition="STM32H562"/>
      <require condition="isSecure"/>
      <require condition="Compiler GCC"/>
    </condition>
    <condition id="STM32H562 isNonSecure GCC" >
      <require condition="STM32H562"/>
      <require condition="isNonSecure"/>
      <require condition="Compiler GCC"/>
    </condition>

    <condition id="STM32H563 noTZ GCC" >
      <require condition="STM32H563"/>
      <require condition="noTZ"/>
      <require condition="Compiler GCC"/>
    </condition>
    <condition id="STM32H563 isSecure GCC" >
      <require condition="STM32H563"/>
      <require condition="isSecure"/>
      <require condition="Compiler GCC"/>
    </condition>
    <condition id="STM32H563 isNonSecure GCC" >
      <require condition="STM32H563"/>
      <require condition="isNonSecure"/>
      <require condition="Compiler GCC"/>
    </condition>

    <condition id="STM32H573 noTZ GCC" >
      <require condition="STM32H573"/>
      <require condition="noTZ"/>
      <require condition="Compiler GCC"/>
    </condition>
    <condition id="STM32H573 isSecure GCC" >
      <require condition="STM32H573"/>
      <require condition="isSecure"/>
      <require condition="Compiler GCC"/>
    </condition>
    <condition id="STM32H573 isNonSecure GCC" >
      <require condition="STM32H573"/>
      <require condition="isNonSecure"/>
      <require condition="Compiler GCC"/>
    </condition>

    <!-- Device + Compiler Conditions (IAR) -->
    <condition id="STM32H503 IAR" >
      <description>STMicroelectronics STM32H503 Devices and IAR Compiler</description>
      <require condition="STM32H503"/>
      <require condition="Compiler IAR"/>
    </condition>
    <condition id="STM32H562 IAR" >
      <description>STMicroelectronics STM32H562 Devices and IAR Compiler</description>
      <require condition="STM32H562"/>
      <require condition="Compiler IAR"/>
    </condition>
    <condition id="STM32H563 IAR" >
      <description>STMicroelectronics STM32H563 Devices and IAR Compiler</description>
      <require condition="STM32H563"/>
      <require condition="Compiler IAR"/>
    </condition>
    <condition id="STM32H573 IAR" >
      <description>STMicroelectronics STM32H573 Devices and IAR Compiler</description>
      <require condition="STM32H573"/>
      <require condition="Compiler IAR"/>
    </condition>

    <!-- Device + Security + Compiler Conditions (IAR) -->
    <condition id="STM32H562 noTZ IAR" >
      <require condition="STM32H562"/>
      <require condition="noTZ"/>
      <require condition="Compiler IAR"/>
    </condition>
    <condition id="STM32H562 isSecure IAR" >
      <require condition="STM32H562"/>
      <require condition="isSecure"/>
      <require condition="Compiler IAR"/>
    </condition>
    <condition id="STM32H562 isNonSecure IAR" >
      <require condition="STM32H562"/>
      <require condition="isNonSecure"/>
      <require condition="Compiler IAR"/>
    </condition>

    <condition id="STM32H563 noTZ IAR" >
      <require condition="STM32H563"/>
      <require condition="noTZ"/>
      <require condition="Compiler IAR"/>
    </condition>
    <condition id="STM32H563 isSecure IAR" >
      <require condition="STM32H563"/>
      <require condition="isSecure"/>
      <require condition="Compiler IAR"/>
    </condition>
    <condition id="STM32H563 isNonSecure IAR" >
      <require condition="STM32H563"/>
      <require condition="isNonSecure"/>
      <require condition="Compiler IAR"/>
    </condition>

    <condition id="STM32H573 noTZ IAR" >
      <require condition="STM32H573"/>
      <require condition="noTZ"/>
      <require condition="Compiler IAR"/>
    </condition>
    <condition id="STM32H573 isSecure IAR" >
      <require condition="STM32H573"/>
      <require condition="isSecure"/>
      <require condition="Compiler IAR"/>
    </condition>
    <condition id="STM32H573 isNonSecure IAR" >
      <require condition="STM32H573"/>
      <require condition="isNonSecure"/>
      <require condition="Compiler IAR"/>
    </condition>

    <!-- HAL Conditions -->
    <condition id="STM32H5 HAL">
      <description>STMicroelectronics STM32H5 Device and HAL</description>
      <require condition="STM32H5"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
    </condition>
    <condition id="STM32H5 HAL Common">
      <description>STMicroelectronics STM32H5 Device and HAL Common</description>
      <require condition="STM32H5"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube Framework"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Cortex"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="PWR"/>
    </condition>
    <condition id="STM32H5 HAL GPIO Flash">
      <description>STMicroelectronics STM32H5 Device and HAL with GPIO</description>
      <require condition="STM32H5"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Flash"/>
    </condition>
    <condition id="STM32H5 HAL DMA">
      <description>STMicroelectronics STM32H5 Device and HAL with DMA</description>
      <require condition="STM32H5"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
    </condition>
    <condition id="STM32H5 HAL DMA DLYB">
      <description>STMicroelectronics STM32H5 Device and HAL with DMA, DLYB</description>
      <require condition="STM32H5"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
      <require Cclass="Device" Cgroup="STM32Cube LL"  Csub="DLYB"/>
    </condition>
    <condition id="STM32H5 HAL DMA MMC">
      <description>STMicroelectronics STM32H5 Device and HAL with DMA, MMC</description>
      <require condition="STM32H5"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="MMC"/>
    </condition>

    <!-- LL driver Conditions -->
    <condition id="STM32H5 LL">
      <description>STMicroelectronics STM32H5 Device and LL</description>
      <require condition="STM32H5"/>
      <require Cclass="Device" Cgroup="STM32Cube LL" Csub="Common"/>
    </condition>
    <condition id="STM32H5 LL Common">
      <description>STMicroelectronics STM32H5 Device and LL</description>
      <require condition="STM32H5"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <!--require Cclass="Device" Cgroup="STM32Cube Framework"/-->
      <require Cclass="Device" Cgroup="STM32Cube LL" Csub="UTILS"/>
      <require Cclass="Device" Cgroup="STM32Cube LL" Csub="RCC"/>
      <require Cclass="Device" Cgroup="STM32Cube LL" Csub="PWR"/>
    </condition>
    <condition id="STM32H5 LL UTIL_I3C">
      <description>STMicroelectronics STM32H5 Device and LL UTIL_I3C</description>
      <require condition="STM32H5"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <!--require Cclass="Device" Cgroup="STM32Cube Framework"/-->
      <require Cclass="Device" Cgroup="STM32Cube LL" Csub="UTIL_I3C"/>
    </condition>

    <!-- CMSIS Driver Conditions -->
    <condition id="STM32H5 CMSIS_Driver ETH">
      <description>Requirement for CMSIS EMAC Driver</description>
      <require condition="STM32H5"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="ETH"/>
    </condition>
    <condition id="STM32H5 CMSIS_Driver I2C">
      <description>Requirement for CMSIS I2C Driver</description>
      <require condition="STM32H5"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="I2C"/>
    </condition>
    <condition id="STM32H5 CMSIS_Driver SPI">
      <description>Requirement for CMSIS SPI Driver</description>
      <require condition="STM32H5"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="SPI"/>
    </condition>
    <condition id="STM32H5 CMSIS_Driver USART">
      <description>Requirement for CMSIS USART Driver</description>
      <require condition="STM32H5"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="USART"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="UART"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="IRDA"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="Smartcard"/>
    </condition>
    <condition id="STM32H5 CMSIS_Driver USB">
      <description>Requirement for CMSIS USB Driver</description>
      <require condition="STM32H5"/>
      <require Cclass="CMSIS"  Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="STM32Cube HAL" Csub="PCD"/>
    </condition>
  </conditions>

  <generators>
    <generator id="STM32CubeMX">
      <gpdsc name="FrameworkCubeMX.gpdsc"/>                         <!-- path is either absolute or relative to working directory -->
      <workingDir>$PBoard/$B/STM32CubeMX</workingDir>               <!-- path is specified either absolute or relative to PDSC or GPDSC file -->
      <exe>
        <command>$SMDK/CubeMX/STM32CubeMxLauncher.exe</command>
        <argument>$D</argument>                                     <!-- D = Device (Dname/Dvariant as configured by environment) -->
        <argument>#P</argument>                                     <!-- Project path and project name (as configured by environment) -->
        <argument>$SMDK/CubeMX/noTZ</argument>                      <!-- absolute or relative to ftl templates. $S = Device Family Pack base folder -->
        <argument>$B</argument>                                     <!-- B = Board name -->
      </exe>
    </generator>
    <generator id="STM32CubeMX_S">
      <gpdsc name="Secure/FrameworkCubeMX.gpdsc"/>                  <!-- path is either absolute or relative to working directory -->
      <workingDir>$P../Board/$B/STM32CubeMX</workingDir>            <!-- path is specified either absolute or relative to PDSC or GPDSC file -->
      <exe>
        <command>$SMDK/CubeMX/STM32CubeMxLauncher.exe</command>
        <argument>$D</argument>                                     <!-- D = Device (Dname/Dvariant as configured by environment) -->
        <argument>#P</argument>                                     <!-- Project path and project name (as configured by environment) -->
        <argument>$SMDK/CubeMX/TZ</argument>                        <!-- absolute or relative to ftl templates. $S = Device Family Pack base folder -->
        <argument>$B</argument>                                     <!-- B = Board name -->
      </exe>
    </generator>
    <generator id="STM32CubeMX_NS">
      <gpdsc name="NonSecure/FrameworkCubeMX.gpdsc"/>               <!-- path is either absolute or relative to working directory -->
      <workingDir>$P../Board/$B/STM32CubeMX</workingDir>            <!-- path is specified either absolute or relative to PDSC or GPDSC file -->
      <exe>
        <command>$SMDK/CubeMX/STM32CubeMxLauncher.exe</command>
        <argument>$D</argument>                                     <!-- D = Device (Dname/Dvariant as configured by environment) -->
        <argument>#P</argument>                                     <!-- Project path and project name (as configured by environment) -->
        <argument>$SMDK/CubeMX/TZ</argument>                        <!-- absolute or relative to ftl templates. $S = Device Family Pack base folder -->
        <argument>$B</argument>                                     <!-- B = Board name -->
      </exe>
    </generator>
  </generators>

  <taxonomy>
    <description Cclass="Device" Cgroup="STM32Cube HAL" doc="Drivers/STM32H5xx_HAL_Driver/STM32H573xx_User_Manual.chm"
                 condition="STM32H5">STM32H5xx Hardware Abstraction Layer (HAL) Drivers</description>
  </taxonomy>

  <apis>
    <api Cclass="Device" Cgroup="STM32Cube Framework" Capiversion="1.1.0" exclusive="1" condition="STM32H5">
      <description>STM32Cube Framework</description>
      <files>
        <file category="doc" name="MDK/CubeMX/Documentation/index.html"/>
      </files>
    </api>
  </apis>

  <components>
    <component Cclass="Device" Cgroup="Startup" Cversion="1.1.0" condition="STM32H5 CMSIS">
      <description>System Startup for STMicroelectronics STM32H5 Series</description>
      <RTE_Components_h>
        #define RTE_DEVICE_STARTUP_STM32H5XX    /* Device Startup for STM32H5 */
      </RTE_Components_h>

      <files>
        <!--  include folder -->
        <file category="include" name="Drivers/CMSIS/Device/ST/STM32H5xx/Include/"/>

        <!-- common device header file -->
        <file category="header" name="Drivers/CMSIS/Device/ST/STM32H5xx/Include/stm32h5xx.h"/>

        <!-- startup files -->
        <!-- ARM Compiler Toolchain -->
        <file category="source"       condition="STM32H503 ARMCC"             name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/arm/startup_stm32h503xx.s"           attr="config" version="1.0.1"/>
        <file category="source"       condition="STM32H562 ARMCC"             name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/arm/startup_stm32h562xx.s"           attr="config" version="1.0.0"/>
        <file category="source"       condition="STM32H563 ARMCC"             name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/arm/startup_stm32h563xx.s"           attr="config" version="1.0.0"/>
        <file category="source"       condition="STM32H573 ARMCC"             name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/arm/startup_stm32h573xx.s"           attr="config" version="1.0.0"/>

        <file category="linkerScript" condition="STM32H503 ARMCC"             name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/arm/linker/stm32h503xx_flash.sct"    attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H562 noTZ ARMCC"        name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/arm/linker/stm32h562xx_flash.sct"    attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H562 isSecure ARMCC"    name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/arm/linker/stm32h562xx_flash_s.sct"  attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H562 isNonSecure ARMCC" name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/arm/linker/stm32h562xx_flash_ns.sct" attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H563 noTZ ARMCC"        name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/arm/linker/stm32h563xx_flash.sct"    attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H563 isSecure ARMCC"    name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/arm/linker/stm32h563xx_flash_s.sct"  attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H563 isNonSecure ARMCC" name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/arm/linker/stm32h563xx_flash_ns.sct" attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H573 noTZ ARMCC"        name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/arm/linker/stm32h573xx_flash.sct"    attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H573 isSecure ARMCC"    name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/arm/linker/stm32h573xx_flash_s.sct"  attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H573 isNonSecure ARMCC" name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/arm/linker/stm32h573xx_flash_ns.sct" attr="config" version="1.0.0"/>

        <!-- GCC Toolchain -->
        <file category="source"       condition="STM32H503 GCC"               name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/gcc/startup_stm32h503xx.S"           attr="config" version="1.0.0"/>
        <file category="source"       condition="STM32H562 GCC"               name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/gcc/startup_stm32h562xx.S"           attr="config" version="1.0.0"/>
        <file category="source"       condition="STM32H563 GCC"               name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/gcc/startup_stm32h563xx.S"           attr="config" version="1.0.0"/>
        <file category="source"       condition="STM32H573 GCC"               name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/gcc/startup_stm32h573xx.S"           attr="config" version="1.0.0"/>

        <file category="linkerScript" condition="STM32H503 GCC"               name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/gcc/linker/STM32H503xx_FLASH.ld"     attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H562 noTZ GCC"          name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/gcc/linker/STM32H562xx_FLASH.ld"     attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H562 isSecure GCC"      name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/gcc/linker/STM32H562xx_FLASH_s.ld"   attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H562 isNonSecure GCC"   name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/gcc/linker/STM32H562xx_FLASH_ns.ld"  attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H563 noTZ GCC"          name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/gcc/linker/STM32H563xx_FLASH.ld"     attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H563 isSecure GCC"      name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/gcc/linker/STM32H563xx_FLASH_s.ld"   attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H563 isNonSecure GCC"   name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/gcc/linker/STM32H563xx_FLASH_ns.ld"  attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H573 noTZ GCC"          name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/gcc/linker/STM32H573xx_FLASH.ld"     attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H573 isSecure GCC"      name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/gcc/linker/STM32H573xx_FLASH_s.ld"   attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H573 isNonSecure GCC"   name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/gcc/linker/STM32H573xx_FLASH_ns.ld"  attr="config" version="1.0.0"/>

        <!-- IAR Toolchain -->
        <file category="source"       condition="STM32H503 IAR"               name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/iar/startup_stm32h503xx.s"           attr="config" version="1.0.0"/>
        <file category="source"       condition="STM32H562 IAR"               name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/iar/startup_stm32h562xx.s"           attr="config" version="1.0.0"/>
        <file category="source"       condition="STM32H563 IAR"               name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/iar/startup_stm32h563xx.s"           attr="config" version="1.0.0"/>
        <file category="source"       condition="STM32H573 IAR"               name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/iar/startup_stm32h573xx.s"           attr="config" version="1.0.0"/>

        <file category="linkerScript" condition="STM32H503 IAR"               name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/iar/linker/stm32h503xx_flash.icf"    attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H562 noTZ IAR"          name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/iar/linker/stm32h562xx_flash.icf"    attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H562 isSecure IAR"      name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/iar/linker/stm32h562xx_flash_s.icf"  attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H562 isNonSecure IAR"   name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/iar/linker/stm32h562xx_flash_ns.icf" attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H563 noTZ IAR"          name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/iar/linker/stm32h563xx_flash.icf"    attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H563 isSecure IAR"      name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/iar/linker/stm32h563xx_flash_s.icf"  attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H563 isNonSecure IAR"   name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/iar/linker/stm32h563xx_flash_ns.icf" attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H573 noTZ IAR"          name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/iar/linker/stm32h573xx_flash.icf"    attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H573 isSecure IAR"      name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/iar/linker/stm32h573xx_flash_s.icf"  attr="config" version="1.0.0"/>
        <file category="linkerScript" condition="STM32H573 isNonSecure IAR"   name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/iar/linker/stm32h573xx_flash_ns.icf" attr="config" version="1.0.0"/>

        <!-- system file -->
        <file category="source"       condition="STM32H5 noTZ"                name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/system_stm32h5xx.c"                  attr="config" version="1.0.0"/>
        <file category="source"       condition="STM32H5 isSecure"            name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/system_stm32h5xx_s.c"                attr="config" version="1.0.0"/>
        <file category="source"       condition="STM32H5 isNonSecure"         name="Drivers/CMSIS/Device/ST/STM32H5xx/Source/Templates/system_stm32h5xx_ns.c"               attr="config" version="1.0.0"/>

        <!-- SAU configuration -->
        <file category="header"                                               name="Drivers/CMSIS/Device/ST/STM32H5xx/Include/partition_stm32h5xx.h"                                      version="1.0.0"/>
        <file category="header"       condition="STM32H562_S"                 name="CMSIS/Zone/stm32h562xx/partition_stm32h562xx.h"                                         attr="config" version="1.0.0"/>
        <file category="header"       condition="STM32H563_S"                 name="CMSIS/Zone/stm32h563xx/partition_stm32h563xx.h"                                         attr="config" version="1.0.0"/>
        <file category="header"       condition="STM32H573_S"                 name="CMSIS/Zone/stm32h573xx/partition_stm32h573xx.h"                                         attr="config" version="1.0.0"/>
        <file category="header"       condition="STM32H562_S"                 name="CMSIS/Zone/stm32h562xx/partition_gen.h"                                                 attr="config" version="1.0.0"/>
        <file category="header"       condition="STM32H563_S"                 name="CMSIS/Zone/stm32h563xx/partition_gen.h"                                                 attr="config" version="1.0.0"/>
        <file category="header"       condition="STM32H573_S"                 name="CMSIS/Zone/stm32h573xx/partition_gen.h"                                                 attr="config" version="1.0.0"/>
      </files>
    </component>

    <component generator="STM32CubeMX"    Cclass="Device" Cgroup="STM32Cube Framework" Csub="STM32CubeMX" Cversion="2.0.0" Capiversion="1.1.0" condition="STM32H5 noTZ">
      <description>Configuration via STM32CubeMX</description>
      <RTE_Components_h>
        #define RTE_DEVICE_FRAMEWORK_CUBE_MX
      </RTE_Components_h>
      <files>
        <file category="doc"     name="MDK/CubeMX/Documentation/cubemx.html"/>
        <file category="source"  name="MDK/CubeMX/run_STM32CubeMX.c" version="1.0.0"/>
        <file category="other"   name="MDK/CubeMX/noTZ/STM32CubeMX/FrameworkCubeMX_gpdsc.ftl" version="1.0.0"/>
        <file category="other"   name="MDK/CubeMX/noTZ/STM32CubeMX/MX_Device_h.ftl" version ="1.0.2"/>
      </files>
    </component>
    <component generator="STM32CubeMX_S"  Cclass="Device" Cgroup="STM32Cube Framework" Csub="STM32CubeMX" Cversion="2.0.0" Capiversion="1.1.0" condition="STM32H5 isSecure">
      <description>Configuration via STM32CubeMX</description>
      <RTE_Components_h>
        #define RTE_DEVICE_FRAMEWORK_CUBE_MX
      </RTE_Components_h>
      <files>
        <file category="doc"     name="MDK/CubeMX/Documentation/cubemx.html"/>
        <file category="source"  name="MDK/CubeMX/run_STM32CubeMX.c" version="1.0.0"/>
        <file category="other"   name="MDK/CubeMX/TZ/STM32CubeMX/Secure/FrameworkCubeMX_gpdsc.ftl" version="1.0.0"/>
        <file category="other"   name="MDK/CubeMX/TZ/STM32CubeMX/Secure/MX_Device_h.ftl" version ="1.0.2"/>
      </files>
    </component>
    <component generator="STM32CubeMX_NS" Cclass="Device" Cgroup="STM32Cube Framework" Csub="STM32CubeMX" Cversion="2.0.0" Capiversion="1.1.0" condition="STM32H5 isNonSecure">
      <description>Configuration via STM32CubeMX</description>
      <RTE_Components_h>
        #define RTE_DEVICE_FRAMEWORK_CUBE_MX
      </RTE_Components_h>
      <files>
        <file category="doc"     name="MDK/CubeMX/Documentation/cubemx.html"/>
        <file category="source"  name="MDK/CubeMX/run_STM32CubeMX.c" version="1.0.0"/>
        <file category="other"   name="MDK/CubeMX/TZ/STM32CubeMX/NonSecure/FrameworkCubeMX_gpdsc.ftl" version="1.0.0"/>
        <file category="other"   name="MDK/CubeMX/TZ/STM32CubeMX/NonSecure/MX_Device_h.ftl" version ="1.0.2"/>
      </files>
    </component>

    <!-- START: STMicroelectronics STM32Cube HAL -->
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common"    Cversion="1.1.0" condition="STM32H5 HAL Common">
      <description>Common HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_COMMON
      </RTE_Components_h>
      <Pre_Include_Global_h>
        #define USE_HAL_DRIVER
      </Pre_Include_Global_h>
      <files>
        <file category="include" name="Drivers/STM32H5xx_HAL_Driver/Inc/"/>
        <file category="include" name="Drivers/STM32H5xx_HAL_Driver/Inc/Legacy/"/>
        <file category="header"  name="Drivers/STM32H5xx_HAL_Driver/Inc/stm32h5xx_hal.h"/>
        <file category="source"  name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="ADC"       Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>Analog-to-digital converter (ADC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_ADC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_adc_ex.c"/>
        <!--file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_adc.c"/-->
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="CEC"       Cversion="1.1.0" condition="STM32H5 HAL">
      <description>Consumer Electronics Control (CEC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CEC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_cec.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="COMP"      Cversion="1.1.0" condition="STM32H5 HAL">
      <description>Analog Comparator (CRC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_COMP
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_comp.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="CORDIC"    Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>CORDIC co-processor (CORDIC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CORDIC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_cordic.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Cortex"    Cversion="1.1.0" condition="STM32H5 HAL">
      <description>Cortex HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CORTEX
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_cortex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="CRC"       Cversion="1.1.0" condition="STM32H5 HAL">
      <description>CRC calculation unit (CRC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CRC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_crc.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_crc_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="CRYP"      Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>Cryptographic processor (CRYP) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_CRYP
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_cryp.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_cryp_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="DAC"       Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>Digital-to-analog converter (DAC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DAC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_dac.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_dac_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="DCACHE"    Cversion="1.1.0" condition="STM32H5 HAL">
      <description>Data cache (DCACHE) interface HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DCACHE
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_dcache.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="DCMI"      Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>Digital camera interface (DCMI) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DCMI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_dcmi.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA"       Cversion="1.1.0" condition="STM32H5 HAL">
      <description>DMA controller (DMA) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DMA
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_dma.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_dma_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="DTS"       Cversion="1.1.0" condition="STM32H5 HAL">
      <description>Digital temperature sensor (DTS) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_DTS
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_dts.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="ETH"       Cversion="1.1.0" condition="STM32H5 HAL">
      <description>Ethernet MAC (ETH) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_ETH
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_eth.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_eth_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="EXTI"      Cversion="1.1.0" condition="STM32H5 HAL">
      <description>EXTI HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_EXTI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_exti.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="FDCAN"     Cversion="1.1.0" condition="STM32H5 HAL">
      <description>Controller area network (FDCAN) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_FDCAN
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_fdcan.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Flash"     Cversion="1.1.0" condition="STM32H5 HAL">
      <description>Embedded Flash memory HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_FLASH
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_flash.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_flash_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="FMAC"      Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>Filter mathematical accelerator (FMAC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_FMAC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_fmac.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO"      Cversion="1.1.0" condition="STM32H5 HAL">
      <description>General-purpose I/O (GPIO) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_GPIO
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_gpio.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="GTZC"      Cversion="1.1.0" condition="STM32H5 HAL">
      <description>Global TrustZone controller (GTZC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_GTZC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_gtzc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="HASH"      Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>Hash processor (HASH) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_HASH
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_hash.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="HCD"       Cversion="1.1.0" condition="STM32H5 HAL">
      <description>USB Host controller (HCD) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_HCD
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_hcd.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_usb.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="I2C"       Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>Inter-integrated circuit (I2C) interface HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_I2C
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_i2c.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_i2c_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="I2S"       Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>I2S HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_I2S
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_i2s.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_i2s_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="I3C"       Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>Improved inter-integrated circuit (I3C) interface HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_I3C
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_i3c.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="ICACHE"    Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>Instruction cache (ICACHE) interface HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_ICACHE
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_icache.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="IRDA"      Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>IrDA HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_IRDA
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_irda.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="IWDG"      Cversion="1.1.0" condition="STM32H5 HAL">
      <description>Independent watchdog (IWDG) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_IWDG
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_iwdg.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="LPTIM"     Cversion="1.1.0" condition="STM32H5 HAL">
      <description>Low-power timer (LPTIM) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_LPTIM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_lptim.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="MMC"       Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>MMC card HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_MMC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_mmc.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_mmc_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="NAND"      Cversion="1.1.0" condition="STM32H5 HAL">
      <description>NAND Flash controller HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_NAND
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_nand.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_fmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="NOR"       Cversion="1.1.0" condition="STM32H5 HAL">
      <description>NOR Flash controller HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_NOR
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_nor.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_fmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="OPAMP"     Cversion="1.1.0" condition="STM32H5 HAL">
      <description>Operational amplifier peripheral HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_OPAMP
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_opamp.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_opamp_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="OTFDEC"    Cversion="1.1.0" condition="STM32H5 HAL">
      <description>On-the-fly decryption engine (OTFDEC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_OTFDEC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_otfdec.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="PCD"       Cversion="1.1.0" condition="STM32H5 HAL">
      <description>USB Peripheral controller (PCD) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PCD
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pcd.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pcd_ex.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_usb.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="PKA"       Cversion="1.1.0" condition="STM32H5 HAL">
      <description>Public key accelerator (PKA) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PKA
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pka.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="PSSI"      Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>Parallel Synchronous Slave Interface (PSSI) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PSSI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pssi.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="PWR"       Cversion="1.1.0" condition="STM32H5 HAL">
      <description>Power controller (PWR) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_PWR
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_pwr_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="RAMCFG"    Cversion="1.1.0" condition="STM32H5 HAL">
      <description>RAM Configuration (RAMCFG) HAL module driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_RAMCFG
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_ramcfg.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC"       Cversion="1.1.0" condition="STM32H5 HAL GPIO Flash">
      <description>Reset and clock control (RCC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_RCC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_rcc.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_rcc_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="RNG"       Cversion="1.1.0" condition="STM32H5 HAL">
      <description>Random number generator (RNG) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_RNG
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_rng.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_rng_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="RTC"       Cversion="1.1.0" condition="STM32H5 HAL">
      <description>Real-time clock (RTC) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_RTC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_rtc.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_rtc_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="SAI"       Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>Serial audio interface (SAI) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SAI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_sai.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_sai_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="SD"        Cversion="1.1.0" condition="STM32H5 HAL DMA MMC">
      <description>Secure digital (SD) interface HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SD
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_sd.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_sd_ex.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_sdmmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="SDRAM"     Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>SDRAM controller (SDRAM) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SDRAM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_sdram.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_fmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Smartcard" Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>Smartcard HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SMARTCARD
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_smartcard.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_smartcard_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="SMBUS"     Cversion="1.1.0" condition="STM32H5 HAL">
      <description>System Management Bus (SMBus) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SMBUS
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_smbus.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_smbus_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="SPI"       Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>Serial peripheral interface (SPI) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SPI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_spi.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_spi_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="SRAM"      Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>SRAM controller (SRAM) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_SRAM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_sram.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_fmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="TIM"       Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>Timers (TIM) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_TIM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_tim.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_tim_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="UART"      Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>Universal asynchronous receiver transmitter (UART) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_UART
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_uart.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_uart_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="USART"     Cversion="1.1.0" condition="STM32H5 HAL DMA">
      <description>Universal synchronous asynchronous receiver transmitter (USART) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_USART
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_usart.c"/>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_usart_ex.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="WWDG"      Cversion="1.1.0" condition="STM32H5 HAL">
      <description>Window watchdog (WWDG) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_WWDG
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_wwdg.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="XSPI"      Cversion="1.1.0" condition="STM32H5 HAL DMA DLYB">
      <description>Octo Serial peripheral interface (SPI) HAL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_HAL_XSPI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_hal_xspi.c"/>
      </files>
    </component>
    <!-- END: STMicroelectronics STM32Cube HAL -->

    <!-- START: STMicroelectronics STM32Cube LL -->
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="Common" Cversion="1.1.0" condition="STM32H5 LL Common">
      <description>Common LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_COMMON
      </RTE_Components_h>
      <Pre_Include_Global_h>
        #define USE_FULL_LL_DRIVER
      </Pre_Include_Global_h>
      <files>
        <file category="include" name="Drivers/STM32H5xx_HAL_Driver/Inc/"/>
        <file category="include" name="Drivers/STM32H5xx_HAL_Driver/Inc/Legacy/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="ADC"    Cversion="1.1.0" condition="STM32H5 LL">
      <description>Analog-to-digital converter (ADC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_ADC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_adc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="COMP"   Cversion="1.1.0" condition="STM32H5 LL">
      <description>Analog Comparator (CRC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_COMP
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_comp.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="CORDIC" Cversion="1.1.0" condition="STM32H5 LL">
      <description>CORDIC co-processor (CORDIC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_CORDIC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_cordic.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="CRC"    Cversion="1.1.0" condition="STM32H5 LL">
      <description>CRC calculation unit (CRC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_CRC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_crc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="CRS"    Cversion="1.1.0" condition="STM32H5 LL">
      <description>Clock recovery system (CRS) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_CRS
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_crs.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="DAC"    Cversion="1.1.0" condition="STM32H5 LL">
      <description>Digital-to-analog converter (DAC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_DAC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_dac.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="DLYB"   Cversion="1.1.0" condition="STM32H5 LL">
      <description>Delay Block (DLYB) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_DLYB
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_dlyb.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="DMA"    Cversion="1.1.0" condition="STM32H5 LL">
      <description>DMA controller (DMA) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_DMA
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_dma.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="EXTI"   Cversion="1.1.0" condition="STM32H5 LL">
      <description>Extended interrupts and events controller (EXTI) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_EXTI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_exti.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="FMAC"   Cversion="1.1.0" condition="STM32H5 LL">
      <description>Filter mathematical accelerator (FMAC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_FMAC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_fmac.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="FMC"    Cversion="1.1.0" condition="STM32H5 LL">
      <description>Flexible memory controller (FMC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_FMC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_fmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="GPIO"   Cversion="1.1.0" condition="STM32H5 LL">
      <description>General-purpose I/O (GPIO) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_GPIO
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_gpio.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="I2C"    Cversion="1.1.0" condition="STM32H5 LL">
      <description>Inter-integrated circuit (I2C) interface LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_I2C
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_i2c.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="I3C"    Cversion="1.1.0" condition="STM32H5 LL UTIL_I3C">
      <description>Improved Inter-integrated circuit (I3C) interface LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_I3C
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_i3c.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="ICACHE" Cversion="1.1.0" condition="STM32H5 LL">
      <description>Instruction cache (ICACHE) interface LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_ICACHE
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_icache.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="LPTIM"  Cversion="1.1.0" condition="STM32H5 LL">
      <description>Low-power timer (LPTIM) interface LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_LPTIM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_lptim.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="LPUART" Cversion="1.1.0" condition="STM32H5 LL">
      <description>Low-power universal asynchronous receiver transmitter (LPUART) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_LPUART
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_lpuart.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="OPAMP"  Cversion="1.1.0" condition="STM32H5 LL">
      <description>Operational amplifier (OPAMP) peripheral LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_OPAMP
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_opamp.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="PKA"    Cversion="1.1.0" condition="STM32H5 LL">
      <description>Public key accelerator (PKA) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_PKA
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_pka.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="PWR"    Cversion="1.1.0" condition="STM32H5 LL">
      <description>Power controller (PWR) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_PWR
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_pwr.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="RCC"    Cversion="1.1.0" condition="STM32H5 LL">
      <description>Reset and clock control (RCC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_RCC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_rcc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="RNG"    Cversion="1.1.0" condition="STM32H5 LL">
      <description>Random number generator (RNG) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_RNG
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_rng.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="RTC"    Cversion="1.1.0" condition="STM32H5 LL">
      <description>Real-time clock (RTC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_RTC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_rtc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="SDMMC"  Cversion="1.1.0" condition="STM32H5 LL">
      <description>SD/SDIO/MMC card host interface (SDMMC) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_SDMMC
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_sdmmc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="SPI"    Cversion="1.1.0" condition="STM32H5 LL">
      <description>Serial peripheral interface (SPI) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_SPI
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_spi.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="TIM"    Cversion="1.1.0" condition="STM32H5 LL">
      <description>Timers (TIM) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_TIM
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_tim.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="UCPD"   Cversion="1.1.0" condition="STM32H5 LL">
      <description>USB Type-C / USB Power Delivery interface (UCPD) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_UCPD
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_ucpd.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="USART"  Cversion="1.1.0" condition="STM32H5 LL">
      <description>Universal synchronous asynchronous receiver transmitter (USART) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_USART
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_usart.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="USB"    Cversion="1.1.0" condition="STM32H5 LL">
      <description>Universal serial bus full-speed device interface (USB) LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_USB
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_usb.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="UTILS"  Cversion="1.1.0" condition="STM32H5">
      <description>UTILS LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_UTILS
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_ll_utils.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="STM32Cube LL" Csub="UTIL_I3C"  Cversion="1.1.0" condition="STM32H5">
      <description>I3C UTILS LL driver</description>
      <RTE_Components_h>
        #define RTE_DEVICE_LL_UTIL_I3C
      </RTE_Components_h>
      <files>
        <file category="source" name="Drivers/STM32H5xx_HAL_Driver/Src/stm32h5xx_util_i3c.c"/>
      </files>
    </component>
    <!-- END: STMicroelectronics STM32Cube LL -->

    <!-- CMSIS drivers -->
    <component Cclass="CMSIS Driver" Cgroup="Ethernet MAC" Capiversion="2.1.0" Cversion="1.0.0" condition="STM32H5 CMSIS_Driver ETH">
      <description>Ethernet MAC Driver for STM32H5 Series</description>
      <RTE_Components_h>
        #define RTE_Drivers_ETH_MAC0            /* Driver ETH_MAC0 */
      </RTE_Components_h>
      <files>
        <file category="doc"    name="MDK/CubeMX/Documentation/stm32h5_emac.html"/>
        <file category="source" name="CMSIS/Driver/EMAC_STM32H5xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="I2C" Capiversion="2.2.0" Cversion="1.0.0" condition="STM32H5 CMSIS_Driver I2C">
      <description>I2C Driver for STM32H5 Series</description>
      <RTE_Components_h>
        #define RTE_Drivers_I2C1                /* Driver I2C1 */
        #define RTE_Drivers_I2C2                /* Driver I2C2 */
        #define RTE_Drivers_I2C3                /* Driver I2C3 */
        #define RTE_Drivers_I2C4                /* Driver I2C4 */
      </RTE_Components_h>
      <files>
        <file category="doc"    name="MDK/CubeMX/Documentation/stm32h5_i2c.html"/>
        <file category="source" name="CMSIS/Driver/I2C_STM32H5xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="SPI" Capiversion="2.1.0" Cversion="1.0.0" condition="STM32H5 CMSIS_Driver SPI">
      <description>SPI Driver for STM32H5 Series</description>
      <RTE_Components_h>
        #define RTE_Drivers_SPI1                /* Driver SPI1 */
        #define RTE_Drivers_SPI2                /* Driver SPI2 */
        #define RTE_Drivers_SPI3                /* Driver SPI3 */
        #define RTE_Drivers_SPI4                /* Driver SPI4 */
        #define RTE_Drivers_SPI5                /* Driver SPI5 */
        #define RTE_Drivers_SPI6                /* Driver SPI6 */
      </RTE_Components_h>
      <files>
        <file category="doc"    name="MDK/CubeMX/Documentation/stm32h5_spi.html"/>
        <file category="source" name="CMSIS/Driver/SPI_STM32H5xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="USART" Capiversion="2.1.0" Cversion="1.0.0" condition="STM32H5 CMSIS_Driver USART">
      <description>USART Driver for STM32H5 Series</description>
      <RTE_Components_h>
        #define RTE_Drivers_USART1              /* Driver USART1  */
        #define RTE_Drivers_USART2              /* Driver USART2  */
        #define RTE_Drivers_USART3              /* Driver USART3  */
        #define RTE_Drivers_USART4              /* Driver USART4  */
        #define RTE_Drivers_USART5              /* Driver USART5  */
        #define RTE_Drivers_USART6              /* Driver USART6  */
        #define RTE_Drivers_USART7              /* Driver USART7  */
        #define RTE_Drivers_USART8              /* Driver USART8  */
        #define RTE_Drivers_USART9              /* Driver USART9  */
        #define RTE_Drivers_USART10             /* Driver USART10 */
        #define RTE_Drivers_USART11             /* Driver USART11 */
        #define RTE_Drivers_USART12             /* Driver USART12 */
        #define RTE_Drivers_USART13             /* Driver USART13 */
      </RTE_Components_h>
      <files>
        <file category="doc"    name="MDK/CubeMX/Documentation/stm32h5_uart.html"/>
        <file category="source" name="CMSIS/Driver/UART_STM32H5xx.c"/>
        <file category="source" name="CMSIS/Driver/USART_STM32H5xx.c"/>
        <file category="source" name="CMSIS/Driver/IrDA_STM32H5xx.c"/>
        <file category="source" name="CMSIS/Driver/SmartCard_STM32H5xx.c"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="USB Device" Csub="Full-speed" Capiversion="2.1.0" Cversion="1.1.0" condition="STM32H5 CMSIS_Driver USB">
      <description>USB Device Full-Speed Driver for STM32H5 Series</description>
      <RTE_Components_h>
        #define RTE_Drivers_USBD0               /* Driver USBD0 */
      </RTE_Components_h>
      <files>
        <file category="doc"    name="MDK/CubeMX/Documentation/stm32h5_usbd.html"/>
        <file category="source" name="CMSIS/Driver/USBD_STM32H5xx.c"/>
      </files>
    </component>

  </components>
</package>
