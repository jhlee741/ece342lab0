<?xml version="1.0" encoding="UTF-8"?>
<package xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd" schemaVersion="1.4">
  <name>LPC865_DFP</name>
  <vendor>NXP</vendor>
  <description>Device Family Pack for LPC865</description>
  <url>https://mcuxpresso.nxp.com/cmsis_pack/repo/</url>
  <license>Licenses.txt</license>
  <releases>
    <release version="16.0.0" date="2023-07-27">NXP CMSIS Packs based on MCUXpresso SDK 2.13.1</release>
  </releases>
  <keywords>
    <keyword>Device Family Pack</keyword>
  </keywords>
  <taxonomy>
    <description Cclass="Board Support" Cgroup="SDK Project Template">NXP MCUXpresso SDK Project Template</description>
    <description Cclass="Device" Cgroup="SDK Drivers">NXP MCUXpresso SDK Peripheral Drivers</description>
    <description Cclass="Device" Cgroup="Startup">NXP MCUXpresso SDK Start up</description>
    <description Cclass="Device" Cgroup="SDK Utilities">NXP MCUXpresso SDK Utilities</description>
  </taxonomy>
  <requirements>
    <packages>
      <package name="CMSIS" vendor="ARM" version="5.8.0"/>
    </packages>
    <languages>
      <language name="C" version="99"/>
    </languages>
  </requirements>
  <devices>
    <family Dfamily="LPC865" Dvendor="NXP:11">
      <debugvars configfile="arm/LPC86x.dbgconf">
  // Debug Access Variables, can be modified by user via copies of DBGCONF files as created by uVision. Also see sub-family level.
  __var Dbg_CR                = 0x00000000;                            // DBG_CR
</debugvars>
      <sequences>
        <sequence name="DebugDeviceUnlock">
          <block>
      __var value = 0;

      value  = Read32(0x40048080);                                     // Read SYSAHBCLKCTRL0
      value |= (1 &lt;&lt; 26);                                        // Enable MTB Control Register Clock
      Write32(0x40048080, value);                                      // Write modified value to SYSAHBCLKCTRL0
    </block>
        </sequence>
        <sequence name="ResetCatchSet">
          <block>
      __var SCS_Addr   = 0xE000E000;
      __var DHCSR_Addr = SCS_Addr + 0xDF0;
      __var DEMCR_Addr = SCS_Addr + 0xDFC;
      __var value      = 0;
      __var FPB_BKPT_H = 0x80000000;
      __var FPB_BKPT_L = 0x40000000;
      __var FPB_COMP_M = 0x1FFFFFFC;
      __var FPB_KEY    = 0x00000002;
      __var FPB_ENABLE = 0x00000001;
    </block>
          <control if="Dbg_CR == 0x00000000" info="Stop after bootloader disabled">
            <block>
        value = Read32(DEMCR_Addr);
        Write32(DEMCR_Addr, (value | 0x00000001));                     // Enable Reset Vector Catch in DEMCR
      </block>
          </control>
          <control if="Dbg_CR == 0x00000001" info="Stop after bootloader enabled">
            <block>
        value = Read32(DEMCR_Addr);
        Write32(DEMCR_Addr, (value &amp; (~0x00000001)));              // Disable Reset Vector Catch in DEMCR
      </block>
            <control if="value &lt; 0x20000000" info="Set and enable breakpoint">
              <block>
          Write32(0x40048000, 0x00000002);                             // Map Flash to Vectors
          value = Read32 (0x00000004);                                 // Read Reset Vector

          value = ((value &amp; 0x02) ? FPB_BKPT_H : FPB_BKPT_L) | (value &amp; FPB_COMP_M) | FPB_ENABLE ;
          Write32(0xE0002008, value);                                  // Set BP0 to Reset Vector
          Write32(0xE0002000, (FPB_KEY | FPB_ENABLE));                 // Enable FPB
        </block>
            </control>
            <control if="value &gt;= 0x20000000" info="Enable reset vector catch">
              <block>
          value = Read32(DEMCR_Addr);
          Write32(DEMCR_Addr, (value | 0x00000001));                   // Enable Reset Vector Catch in DEMCR
        </block>
            </control>
          </control>
          <block>
      Read32(DHCSR_Addr);                                              // Read DHCSR to clear potentially set DHCSR.S_RESET_ST bit
    </block>
        </sequence>
        <sequence name="ResetCatchClear">
          <block>
      // System Control Space (SCS) offset as defined in ARMv6-M/ARMv7-M.
      // Reimplement this sequence if the SCS is located at a different offset.
      __var SCS_Addr   = 0xE000E000;
      __var DEMCR_Addr = SCS_Addr + 0xDFC;
      __var value      = 0;

      value = Read32(DEMCR_Addr);
      Write32(DEMCR_Addr, (value &amp; (~0x00000001)));                // Disable Reset Vector Catch in DEMCR

      Write32(0xE0002008, 0);                                          // Clear BP0
      Write32(0xE0002000, 0x00000002);                                 // Disable FPB
    </block>
        </sequence>
      </sequences>
      <description>Low-Cost Microcontrollers (MCUs) based on Arm Cortex-M0+ Core</description>
      <device Dname="LPC865">
        <processor Dcore="Cortex-M0+" Dfpu="NO_FPU" Dmpu="NO_MPU" Dendian="Little-endian" Dclock="48000000"/>
        <environment name="iar">
          <file category="linkerfile" name="iar/LPC865_flash.icf"/>
        </environment>
        <memory name="IAP_SRAM" start="0x10001fe0" size="0x20" access="rw"/>
        <memory name="PROGRAM_FLASH" start="0x00000000" size="0x010000" access="rx" default="1" startup="1"/>
        <memory name="SRAM" start="0x10000000" size="0x1fe0" access="rw" default="1"/>
        <algorithm name="arm/LPC860_64.FLM" start="0x00000000" size="0x00010000" RAMstart="0x10000000" RAMsize="0x00001000" default="1"/>
        <debug svd="LPC865.xml">
          <datapatch address="0xf0000000" __dp="0" __ap="0" value="0x6000c002" info="1st entry should be invalid"/>
        </debug>
        <variant Dvariant="LPC865M201JBD64">
          <compile header="fsl_device_registers.h" define="CPU_LPC865M201JBD64"/>
        </variant>
        <variant Dvariant="LPC865M201JHI48">
          <compile header="fsl_device_registers.h" define="CPU_LPC865M201JHI48"/>
        </variant>
        <variant Dvariant="LPC865M201JHI33">
          <compile header="fsl_device_registers.h" define="CPU_LPC865M201JHI33"/>
        </variant>
      </device>
    </family>
  </devices>
  <conditions>
    <condition id="device.LPC865">
      <accept Dname="LPC865" Dvariant="LPC865M201JBD64" Dvendor="NXP:11"/>
      <accept Dname="LPC865M201JBD64" Dvendor="NXP:11"/>
      <accept Dname="LPC865" Dvariant="LPC865M201JHI48" Dvendor="NXP:11"/>
      <accept Dname="LPC865M201JHI48" Dvendor="NXP:11"/>
      <accept Dname="LPC865" Dvariant="LPC865M201JHI33" Dvendor="NXP:11"/>
      <accept Dname="LPC865M201JHI33" Dvendor="NXP:11"/>
    </condition>
    <condition id="device.LPC865_AND_component.miniusart_adapter_AND_device.LPC865_startup_AND_driver.clock_AND_driver.common_AND_driver.lpc_gpio_AND_driver.lpc_iocon_lite_AND_driver.lpc_miniusart_AND_driver.power_no_lib_AND_driver.reset_AND_driver.swm_AND_utility.assert_lite_AND_utility.debug_console_lite">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="miniusart_adapter"/>
      <require Cclass="Device" Cgroup="Startup"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="clock"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="gpio"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="iocon"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="usart"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="power"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="reset"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="swm"/>
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="assert_lite"/>
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="debug_console_lite"/>
    </condition>
    <condition id="device.LPC865_AND_component.lpc_gpio_adapter_AND_component.timer_manager_AND_driver.common">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="timer_manager"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="lpc_gpio_adapter"/>
    </condition>
    <condition id="device.LPC865_AND_component.osa_AND_driver.common">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="osa"/>
    </condition>
    <condition id="device.LPC865_AND_driver.common_AND_driver.ftm">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="ftm"/>
    </condition>
    <condition id="device.LPC865_AND_component.lists_AND_driver.common">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="lists"/>
    </condition>
    <condition id="device.LPC865_AND_component.i3c_bus_AND_driver.i3c">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="i3c"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="i3c_bus"/>
    </condition>
    <condition id="device.LPC865_AND_driver.common">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
    </condition>
    <condition id="device.LPC865_AND_driver.common_AND_driver.lpc_crc">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="lpc_crc"/>
    </condition>
    <condition id="device.LPC865_AND_driver.inputmux_AND_driver.lpc_gpio_AND_driver.pint_AND_driver.syscon">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="syscon"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="gpio"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="inputmux"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="pint"/>
    </condition>
    <condition id="device.LPC865_AND_driver.common_AND_driver.lpc_miniusart">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="usart"/>
    </condition>
    <condition id="device.LPC865_AND_driver.common_AND_driver.mrt">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="mrt"/>
    </condition>
    <condition id="device.LPC865_AND_component.lists_AND_component.osa_interface_AND_driver.common">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="lists"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="osa_interface"/>
    </condition>
    <condition id="component.ftm_adapter_OR_component.mrt_adapter">
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="ftm_adapter"/>
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="mrt_adapter"/>
    </condition>
    <condition id="device.LPC865_AND__component.ftm_adapter_OR_component.mrt_adapter__AND_component.lists_AND_driver.common">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="lists"/>
      <require condition="component.ftm_adapter_OR_component.mrt_adapter"/>
    </condition>
    <condition id="device.LPC865_AND_CMSIS_Include_core_cm">
      <require condition="device.LPC865"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>
    <condition id="armclang_OR_iar">
      <accept Tcompiler="ARMCC"/>
      <accept Tcompiler="IAR"/>
    </condition>
    <condition id="device.LPC865_AND__armclang_OR_iar__AND_device.LPC865_system">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="CMSIS" Csub="LPC865_system"/>
      <require condition="armclang_OR_iar"/>
    </condition>
    <condition id="iar">
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="mdk">
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="device.LPC865_AND_device.LPC865_CMSIS">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="CMSIS" Csub="LPC865_header"/>
    </condition>
    <condition id="device.LPC865_AND_driver.common_AND_driver.power_no_lib">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="power"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
    </condition>
    <condition id="device.LPC865_AND_device.LPC865_CMSIS_AND_driver.clock_AND_driver.reset">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="reset"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="clock"/>
      <require Cclass="Device" Cgroup="CMSIS" Csub="LPC865_header"/>
    </condition>
    <condition id="core_type.cm0p">
      <require Dcore="Cortex-M0+" Dfpu="NO_FPU"/>
    </condition>
    <condition id="device.LPC865_AND_driver.i3c_AND_driver.lpc_dma">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="i3c"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="dma"/>
    </condition>
    <condition id="device.LPC865_AND_driver.common_AND_driver.inputmux_connections">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="inputmux_connections"/>
    </condition>
    <condition id="device.LPC865_AND_driver.lpc_dma_AND_driver.lpc_i2c">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="dma"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="i2c"/>
    </condition>
    <condition id="device.LPC865_AND_driver.common_AND_driver.swm_connections">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="swm_connections"/>
    </condition>
    <condition id="device.LPC865_AND_driver.common_AND_driver.syscon_connections">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="syscon_connections"/>
    </condition>
    <condition id="device.LPC865_AND_component.miniusart_adapter_AND_utility.debug_console_lite">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="miniusart_adapter"/>
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="debug_console_lite"/>
    </condition>
    <condition id="device.LPC865_AND_component.miniusart_adapter_AND_driver.common">
      <require condition="device.LPC865"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="miniusart_adapter"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
    </condition>
  </conditions>
  <components>
    <component Cclass="Board Support" Cgroup="SDK Project Template" Csub="project_template" Cvariant="LPC865" Cversion="1.0.0" condition="device.LPC865_AND_component.miniusart_adapter_AND_device.LPC865_startup_AND_driver.clock_AND_driver.common_AND_driver.lpc_gpio_AND_driver.lpc_iocon_lite_AND_driver.lpc_miniusart_AND_driver.power_no_lib_AND_driver.reset_AND_driver.swm_AND_utility.assert_lite_AND_utility.debug_console_lite" isDefaultVariant="1">
      <description>Devices_project_template LPC865</description>
      <files>
        <file category="header" attr="config" name="project_template/board.h" version="1.0.0"/>
        <file category="sourceC" attr="config" name="project_template/board.c" version="1.0.0"/>
        <file category="header" attr="config" name="project_template/clock_config.h" version="1.0.0"/>
        <file category="sourceC" attr="config" name="project_template/clock_config.c" version="1.0.0"/>
        <file category="header" attr="config" name="project_template/pin_mux.h" version="1.0.0"/>
        <file category="sourceC" attr="config" name="project_template/pin_mux.c" version="1.0.0"/>
        <file category="header" attr="config" name="project_template/peripherals.h" version="1.0.0"/>
        <file category="sourceC" attr="config" name="project_template/peripherals.c" version="1.0.0"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="button" Cversion="1.0.0" condition="device.LPC865_AND_component.lpc_gpio_adapter_AND_component.timer_manager_AND_driver.common">
      <description>Component button</description>
      <files>
        <file category="header" name="components/button/fsl_component_button.h"/>
        <file category="sourceC" name="components/button/fsl_component_button.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="common_task" Cversion="1.0.0" condition="device.LPC865_AND_component.osa_AND_driver.common">
      <description>Component common_task</description>
      <files>
        <file category="header" name="components/common_task/fsl_component_common_task.h"/>
        <file category="sourceC" name="components/common_task/fsl_component_common_task.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="ftm_adapter" Cversion="1.0.0" condition="device.LPC865_AND_driver.common_AND_driver.ftm">
      <description>Component ftm_adapter</description>
      <files>
        <file category="header" name="components/timer/fsl_adapter_timer.h"/>
        <file category="sourceC" name="components/timer/fsl_adapter_ftm.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="i3c_bus" Cversion="1.0.1" condition="device.LPC865_AND_component.lists_AND_driver.common">
      <description>Component i3c_bus</description>
      <files>
        <file category="header" name="components/i3c_bus/fsl_component_i3c.h"/>
        <file category="sourceC" name="components/i3c_bus/fsl_component_i3c.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="i3c_bus_adapter" Cversion="1.0.2" condition="device.LPC865_AND_component.i3c_bus_AND_driver.i3c">
      <description>Component i3c_bus_adapter</description>
      <files>
        <file category="header" name="components/i3c_bus/fsl_component_i3c_adapter.h"/>
        <file category="sourceC" name="components/i3c_bus/fsl_component_i3c_adapter.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="led" Cversion="1.0.0" condition="device.LPC865_AND_component.lpc_gpio_adapter_AND_component.timer_manager_AND_driver.common">
      <description>Component led</description>
      <files>
        <file category="header" name="components/led/fsl_component_led.h"/>
        <file category="sourceC" name="components/led/fsl_component_led.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="lists" Cversion="1.0.0" condition="device.LPC865_AND_driver.common">
      <description>Component lists</description>
      <files>
        <file category="header" name="components/lists/fsl_component_generic_list.h"/>
        <file category="sourceC" name="components/lists/fsl_component_generic_list.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="lpc_crc_adapter" Cversion="1.0.0" condition="device.LPC865_AND_driver.common_AND_driver.lpc_crc">
      <description>Component lpc_crc_adapter</description>
      <files>
        <file category="header" name="components/crc/fsl_adapter_crc.h"/>
        <file category="sourceC" name="components/crc/fsl_adapter_lpc_crc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="lpc_gpio_adapter" Cversion="1.0.0" condition="device.LPC865_AND_driver.inputmux_AND_driver.lpc_gpio_AND_driver.pint_AND_driver.syscon">
      <description>Component lpc_gpio_adapter</description>
      <files>
        <file category="header" name="components/gpio/fsl_adapter_gpio.h"/>
        <file category="sourceC" name="components/gpio/fsl_adapter_lpc_gpio.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="mem_manager" Cversion="1.0.0" condition="device.LPC865_AND_component.lists_AND_driver.common">
      <description>Component mem_manager</description>
      <files>
        <file category="header" name="components/mem_manager/fsl_component_mem_manager.h"/>
        <file category="sourceC" name="components/mem_manager/fsl_component_mem_manager.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="mem_manager_light" Cversion="1.0.0" condition="device.LPC865_AND_component.lists_AND_driver.common">
      <description>Component mem_manager_light</description>
      <files>
        <file category="header" name="components/mem_manager/fsl_component_mem_manager.h"/>
        <file category="sourceC" name="components/mem_manager/fsl_component_mem_manager_light.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="miniusart_adapter" Cversion="1.0.0" condition="device.LPC865_AND_driver.common_AND_driver.lpc_miniusart">
      <description>Component miniusart_adapter</description>
      <files>
        <file category="header" name="components/uart/fsl_adapter_uart.h"/>
        <file category="sourceC" name="components/uart/fsl_adapter_miniusart.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="mrt_adapter" Cversion="1.0.0" condition="device.LPC865_AND_driver.common_AND_driver.mrt">
      <description>Component mrt_adapter</description>
      <files>
        <file category="header" name="components/timer/fsl_adapter_timer.h"/>
        <file category="sourceC" name="components/timer/fsl_adapter_mrt.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="osa" Cversion="1.0.0" condition="device.LPC865_AND_component.lists_AND_driver.common">
      <description>Component osa</description>
      <files>
        <file category="header" name="components/osa/fsl_os_abstraction.h"/>
        <file category="header" name="components/osa/fsl_os_abstraction_config.h"/>
        <file category="header" name="components/osa/fsl_os_abstraction_bm.h"/>
        <file category="sourceC" name="components/osa/fsl_os_abstraction_bm.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="osa_bm" Cversion="1.0.0" condition="device.LPC865_AND_component.lists_AND_component.osa_interface_AND_driver.common">
      <description>Component osa_bm</description>
      <files>
        <file category="header" name="components/osa/fsl_os_abstraction_bm.h"/>
        <file category="sourceC" name="components/osa/fsl_os_abstraction_bm.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="osa_interface" Cversion="1.0.0" condition="device.LPC865_AND_component.lists_AND_driver.common">
      <description>Component osa interface</description>
      <files>
        <file category="header" name="components/osa/fsl_os_abstraction.h"/>
        <file category="header" name="components/osa/fsl_os_abstraction_config.h"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="panic" Cversion="1.0.0" condition="device.LPC865_AND_driver.common">
      <description>Component panic</description>
      <files>
        <file category="header" name="components/panic/fsl_component_panic.h"/>
        <file category="sourceC" name="components/panic/fsl_component_panic.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="pwm_ftm_adapter" Cversion="1.0.0" condition="device.LPC865_AND_driver.common_AND_driver.ftm">
      <description>Component pwm_ftm_adapter</description>
      <files>
        <file category="header" name="components/pwm/fsl_adapter_pwm.h"/>
        <file category="sourceC" name="components/pwm/fsl_adapter_pwm_ftm.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="software_crc_adapter" Cversion="1.0.0" condition="device.LPC865_AND_driver.common">
      <description>Component software_crc_adapter</description>
      <files>
        <file category="header" name="components/crc/fsl_adapter_crc.h"/>
        <file category="sourceC" name="components/crc/fsl_adapter_software_crc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="software_rng_adapter" Cversion="1.0.0" condition="device.LPC865_AND_driver.common">
      <description>Component software_rng_adapter</description>
      <files>
        <file category="header" name="components/rng/fsl_adapter_rng.h"/>
        <file category="sourceC" name="components/rng/fsl_adapter_software_rng.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="timer_manager" Cversion="1.0.0" condition="device.LPC865_AND__component.ftm_adapter_OR_component.mrt_adapter__AND_component.lists_AND_driver.common">
      <description>Component timer_manager</description>
      <files>
        <file category="header" name="components/timer_manager/fsl_component_timer_manager.h"/>
        <file category="sourceC" name="components/timer_manager/fsl_component_timer_manager.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="CMSIS" Csub="LPC865_header" Cversion="1.0.0" condition="device.LPC865_AND_CMSIS_Include_core_cm">
      <description>Device LPC865_cmsis</description>
      <files>
        <file category="header" name="fsl_device_registers.h"/>
        <file category="header" name="LPC865.h"/>
        <file category="header" name="LPC865_features.h"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup" Cversion="1.1.0" condition="device.LPC865_AND__armclang_OR_iar__AND_device.LPC865_system">
      <description>Device LPC865_startup</description>
      <files>
        <file condition="iar" category="sourceAsm" attr="config" name="iar/startup_LPC865.s" version="1.1.0"/>
        <file condition="mdk" category="sourceAsm" attr="config" name="arm/startup_LPC865.S" version="1.1.0"/>
        <file condition="mdk" category="linkerScript" attr="config" name="arm/LPC865_flash.scf" version="1.1.0"/>
        <file condition="mdk" category="linkerScript" attr="config" name="arm/LPC865_ram.scf" version="1.1.0"/>
        <file condition="iar" category="linkerScript" attr="config" name="iar/LPC865_flash.icf" version="1.1.0"/>
        <file condition="iar" category="linkerScript" attr="config" name="iar/LPC865_ram.icf" version="1.1.0"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="CMSIS" Csub="LPC865_system" Cversion="1.0.0" condition="device.LPC865_AND_device.LPC865_CMSIS">
      <description>Device LPC865_system</description>
      <files>
        <file category="sourceC" name="system_LPC865.c"/>
        <file category="header" name="system_LPC865.h"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="clock" Cversion="2.1.0" condition="device.LPC865_AND_driver.common_AND_driver.power_no_lib">
      <description>Clock Driver</description>
      <files>
        <file category="header" name="drivers/fsl_clock.h"/>
        <file category="sourceC" name="drivers/fsl_clock.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="common" Cversion="2.4.0" condition="device.LPC865_AND_device.LPC865_CMSIS_AND_driver.clock_AND_driver.reset">
      <description>COMMON Driver</description>
      <files>
        <file category="header" name="drivers/fsl_common.h"/>
        <file category="sourceC" name="drivers/fsl_common.c"/>
        <file condition="core_type.cm0p" category="sourceC" name="drivers/fsl_common_arm.c"/>
        <file condition="core_type.cm0p" category="header" name="drivers/fsl_common_arm.h"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="ftm" Cversion="2.6.0" condition="device.LPC865_AND_driver.common">
      <description>FTM Driver</description>
      <files>
        <file category="sourceC" name="drivers/fsl_ftm.c"/>
        <file category="header" name="drivers/fsl_ftm.h"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="i3c" Cversion="2.10.1" condition="device.LPC865_AND_driver.common">
      <description>I3C Driver</description>
      <files>
        <file category="header" name="drivers/fsl_i3c.h"/>
        <file category="sourceC" name="drivers/fsl_i3c.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="i3c_dma" Cversion="2.1.1" condition="device.LPC865_AND_driver.i3c_AND_driver.lpc_dma">
      <description>I3C DMA Driver</description>
      <files>
        <file category="sourceC" name="drivers/fsl_i3c_dma.c"/>
        <file category="header" name="drivers/fsl_i3c_dma.h"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="iap" Cversion="2.0.7" condition="device.LPC865_AND_driver.common">
      <description>IAP Driver</description>
      <files>
        <file category="header" name="drivers/fsl_iap.h"/>
        <file category="sourceC" name="drivers/fsl_iap.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="icm42688p" Cversion="1.0.0" condition="device.LPC865">
      <description>Driver icm42688p</description>
      <files>
        <file category="header" name="components/icm42688p/fsl_icm42688p.h"/>
        <file category="sourceC" name="components/icm42688p/fsl_icm42688p.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="inputmux" Cversion="2.0.5" condition="device.LPC865_AND_driver.common_AND_driver.inputmux_connections">
      <description>INPUTMUX Driver</description>
      <files>
        <file category="header" name="drivers/fsl_inputmux.h"/>
        <file category="sourceC" name="drivers/fsl_inputmux.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="inputmux_connections" Cversion="2.0.1" condition="device.LPC865_AND_driver.common">
      <description>Inputmux_connections Driver</description>
      <files>
        <file category="header" name="drivers/fsl_inputmux_connections.h"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="lpc_acomp" Cversion="2.1.0" condition="device.LPC865_AND_driver.common">
      <description>LPC_ACOMP Driver</description>
      <files>
        <file category="header" name="drivers/fsl_acomp.h"/>
        <file category="sourceC" name="drivers/fsl_acomp.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="adc" Cversion="2.5.2" condition="device.LPC865_AND_driver.common">
      <description>ADC Driver</description>
      <files>
        <file category="header" name="drivers/fsl_adc.h"/>
        <file category="sourceC" name="drivers/fsl_adc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="lpc_crc" Cversion="2.1.1" condition="device.LPC865_AND_driver.common">
      <description>CRC Driver</description>
      <files>
        <file category="header" name="drivers/fsl_crc.h"/>
        <file category="sourceC" name="drivers/fsl_crc.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="dma" Cversion="2.5.0" condition="device.LPC865_AND_driver.common">
      <description>DMA Driver</description>
      <files>
        <file category="sourceC" name="drivers/fsl_dma.c"/>
        <file category="header" name="drivers/fsl_dma.h"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="gpio" Cversion="2.1.7" condition="device.LPC865_AND_driver.common">
      <description>GPIO Driver</description>
      <files>
        <file category="header" name="drivers/fsl_gpio.h"/>
        <file category="sourceC" name="drivers/fsl_gpio.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="i2c" Cversion="2.1.0" condition="device.LPC865_AND_driver.common">
      <description>I2C Driver</description>
      <files>
        <file category="header" name="drivers/fsl_i2c.h"/>
        <file category="sourceC" name="drivers/fsl_i2c.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="i2c_dma" Cversion="2.1.0" condition="device.LPC865_AND_driver.lpc_dma_AND_driver.lpc_i2c">
      <description>I2C Driver</description>
      <files>
        <file category="sourceC" name="drivers/fsl_i2c_dma.c"/>
        <file category="header" name="drivers/fsl_i2c_dma.h"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="iocon" Cversion="2.0.1" condition="device.LPC865_AND_driver.common">
      <description>IOCON Driver</description>
      <files>
        <file category="header" name="drivers/fsl_iocon.h"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="spi" Cversion="2.0.5" condition="device.LPC865_AND_driver.common">
      <description>SPI Driver</description>
      <files>
        <file category="header" name="drivers/fsl_spi.h"/>
        <file category="sourceC" name="drivers/fsl_spi.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="usart" Cversion="2.5.0" condition="device.LPC865_AND_driver.common">
      <description>USART Driver</description>
      <files>
        <file category="header" name="drivers/fsl_usart.h"/>
        <file category="sourceC" name="drivers/fsl_usart.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="mrt" Cversion="2.0.4" condition="device.LPC865_AND_driver.common">
      <description>MRT Driver</description>
      <files>
        <file category="header" name="drivers/fsl_mrt.h"/>
        <file category="sourceC" name="drivers/fsl_mrt.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="pint" Cversion="2.1.11" condition="device.LPC865_AND_driver.common">
      <description>PINT Driver</description>
      <files>
        <file category="header" name="drivers/fsl_pint.h"/>
        <file category="sourceC" name="drivers/fsl_pint.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="power" Cversion="2.0.0" condition="device.LPC865_AND_driver.common">
      <description>Power Driver</description>
      <files>
        <file category="header" name="drivers/fsl_power.h"/>
        <file category="sourceC" name="drivers/fsl_power.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="reset" Cversion="2.1.2" condition="device.LPC865_AND_driver.common">
      <description>Reset Driver</description>
      <files>
        <file category="header" name="drivers/fsl_reset.h"/>
        <file category="sourceC" name="drivers/fsl_reset.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="swm" Cversion="2.1.2" condition="device.LPC865_AND_driver.common_AND_driver.swm_connections">
      <description>SWM Driver</description>
      <files>
        <file category="header" name="drivers/fsl_swm.h"/>
        <file category="sourceC" name="drivers/fsl_swm.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="swm_connections" Cversion="2.0.1" condition="device.LPC865_AND_driver.common">
      <description>Swm_connections Driver</description>
      <files>
        <file category="header" name="drivers/fsl_swm_connections.h"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="syscon" Cversion="2.0.1" condition="device.LPC865_AND_driver.common_AND_driver.syscon_connections">
      <description>SYSCON Driver</description>
      <files>
        <file category="sourceC" name="drivers/fsl_syscon.c"/>
        <file category="header" name="drivers/fsl_syscon.h"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="syscon_connections" Cversion="2.0.1" condition="device.LPC865_AND_driver.common">
      <description>Syscon_connections Driver</description>
      <files>
        <file category="header" name="drivers/fsl_syscon_connections.h"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="wkt" Cversion="2.0.2" condition="device.LPC865_AND_driver.common">
      <description>WKT Driver</description>
      <files>
        <file category="header" name="drivers/fsl_wkt.h"/>
        <file category="sourceC" name="drivers/fsl_wkt.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="wwdt" Cversion="2.1.9" condition="device.LPC865_AND_driver.common">
      <description>WWDT Driver</description>
      <files>
        <file category="header" name="drivers/fsl_wwdt.h"/>
        <file category="sourceC" name="drivers/fsl_wwdt.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Utilities" Csub="assert_lite" Cversion="1.0.0" condition="device.LPC865_AND_component.miniusart_adapter_AND_utility.debug_console_lite">
      <description>Utility assert_lite</description>
      <files>
        <file category="sourceC" name="utilities/debug_console_lite/fsl_assert.c"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Utilities" Csub="debug_console_lite" Cversion="1.0.0" condition="device.LPC865_AND_component.miniusart_adapter_AND_driver.common">
      <description>Utility debug_console_lite</description>
      <files>
        <file category="sourceC" name="utilities/str/fsl_str.c"/>
        <file category="header" name="utilities/str/fsl_str.h"/>
        <file category="sourceC" name="utilities/debug_console_lite/fsl_debug_console.c"/>
        <file category="header" name="utilities/debug_console_lite/fsl_debug_console.h"/>
      </files>
    </component>
  </components>
</package>
