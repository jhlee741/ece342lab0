<?xml version="1.0" encoding="UTF-8"?>
<package xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd" schemaVersion="1.4">
  <name>MIMXRT685S_DFP</name>
  <vendor>NXP</vendor>
  <description>Device Family Pack for MIMXRT685S</description>
  <url>https://mcuxpresso.nxp.com/cmsis_pack/repo/</url>
  <license>Licenses.txt</license>
  <releases>
    <release version="17.0.0" date="2023-07-27">NXP CMSIS Packs based on MCUXpresso SDK 2.14.0</release>
    <release version="16.0.0" date="2023-01-16">NXP CMSIS Packs based on MCUXpresso SDK 2.13.0</release>
    <release version="15.1.0" date="2022-09-28">NXP CMSIS Packs based on MCUXpresso SDK 2.12.1</release>
    <release version="15.0.0" date="2022-07-13">NXP CMSIS Packs based on MCUXpresso SDK 2.12.0</release>
    <release version="14.0.0" date="2022-01-05">NXP CMSIS Packs based on MCUXpresso SDK 2.11.0</release>
    <release version="13.1.0" date="2021-07-13">NXP CMSIS Packs based on MCUXpresso SDK 2.10.0</release>
    <release version="13.0.0" date="2021-02-05">NXP CMSIS Packs based on MCUXpresso SDK 2.9.0 with restructured startup component files</release>
    <release version="12.2.0" date="2021-01-14">NXP CMSIS Packs based on MCUXpresso SDK 2.9.0</release>
    <release version="12.1.0" date="2020-07-20">NXP CMSIS Packs based on MCUXpresso SDK 2.8.0</release>
    <release version="12.0.0" date="2020-02-27">NXP CMSIS Packs based on MCUXpresso SDK 2.7.0</release>
  </releases>
  <keywords>
    <keyword>Device Family Pack</keyword>
  </keywords>
  <requirements>
    <packages>
      <package name="CMSIS" vendor="ARM" version="5.8.0"/>
    </packages>
    <languages>
      <language name="C" version="99"/>
    </languages>
  </requirements>
  <devices>
    <family Dfamily="MIMXRT685S" Dvendor="NXP:11">
      <debugconfig default="swd" clock="5000000" swj="true"/>
      <description>i.MX MIMXRT685S 275MHz, 4.5M SRAM Microcontrollers (MCUs) based on ARM Cortex-M33 Core</description>
      <device Dname="MIMXRT685S">
        <processor Pname="cm33" Dcore="Cortex-M33" Dfpu="SP_FPU" Dmpu="MPU" Dtz="TZ" Ddsp="DSP" Dendian="Little-endian" Dclock="300000000"/>
        <environment Pname="cm33" name="iar">
          <file category="linkerfile" name="devices/MIMXRT685S/iar/MIMXRT685Sxxxx_cm33_flash.icf"/>
        </environment>
        <sequences>
          <sequence name="EnableDebugMailbox">
            <block/>
            <control if="!(ReadAP(0x0) &amp; 0x40)">
              <!-- Check AHB-AP CSW DbgStatus to decide if need enable DebugMailbox -->
              <block>
        __var status=0x55aa;
        Message(0, "RT6xx connect srcipt start");

        // Read APIDR
        __dp = 0;
        __ap = 2;
        status = ReadAP(0xFC);
        Message(0, "APIDR: 0x%08X", status);

        // Read DPIDR
        __dp = 0;
        __ap = 2;
        status = ReadDP(0x0);
        Message(0, "DPIDR: 0x%08X", status);

        // Active DebugMailbox
        __dp = 0;
        __ap = 2;
        WriteAP(0x0, 0x00000021);
        DAP_Delay(30000);
        ReadAP(0x0);

        // Enter Debug Session
        __dp = 0;
        __ap = 2;
        WriteAP(0x4, 0x00000007);
        DAP_Delay(30000);
        ReadAP(0x0);

        __dp = 0;
        __ap = 0;

        Message(0, "RT6xx connect srcipt end");
      </block>
            </control>
          </sequence>
          <sequence name="ResetFlash" Pname="cm33">
            <block/>
            <control if="(__connection &amp; 0x01)">
              <block>
        //  Reset external flash if connection for target debug
        Write32(0x40004130, 0x130U);
        Write32(0x40021044, 0x4U);
        Write32(0x40020074, 0x4U);
        Write32(0x40102008, 0x1000U);
        Write32(0x40102288, 0x1000U);
        DAP_Delay(100);
        Write32(0x40102208, 0x1000U);
      </block>
            </control>
          </sequence>
          <sequence name="DebugPortStart" Pname="cm33">
            <block>
      __var SW_DP_ABORT  = 0x0;
      __var DP_CTRL_STAT = 0x4;
      __var DP_SELECT    = 0x8;
      __var powered_down = 0;
      // Switch to DP Register Bank 0
      WriteDP(DP_SELECT, 0x00000000);

      // Read DP CTRL/STAT Register and check if CSYSPWRUPACK and CDBGPWRUPACK bits are set
      powered_down = ((ReadDP(DP_CTRL_STAT) &amp; 0xA0000000) != 0xA0000000);
    </block>
            <control if="powered_down">
              <block>
        // Request Debug/System Power-Up
        WriteDP(DP_CTRL_STAT, 0x50000000);
      </block>
              <!-- Wait for Power-Up Request to be acknowledged -->
              <control while="(ReadDP(DP_CTRL_STAT) &amp; 0xA0000000) != 0xA0000000" timeout="1000000"/>
              <!-- SWD Specific Part of sequence -->
              <control if="(__protocol &amp; 0xFFFF) == 2">
                <block>
          // Init AP Transfer Mode, Transaction Counter, and Lane Mask (Normal Transfer Mode, Include all Byte Lanes)
          WriteDP(DP_CTRL_STAT, 0x50000F00);

          // Clear WDATAERR, STICKYORUN, STICKYCMP, and STICKYERR bits of CTRL/STAT Register by write to ABORT register
          WriteDP(SW_DP_ABORT, 0x0000001E);

          Sequence("EnableDebugMailbox");
        </block>
              </control>
            </control>
          </sequence>
          <sequence name="WaitForStopAfterReset" Pname="cm33">
            <block>
      __var SCS_Addr    = 0xE000E000;
      __var DHCSR_Addr  = SCS_Addr + 0xDF0;
      __var DFSR_Addr  = SCS_Addr + 0xD30;
    </block>
            <!-- Check AHB-AP CSW DbgStatus to decide if the ROM finished preparation. -->
            <control while="(ReadAP(0) &amp; 0x40) == 0" timeout="300000"/>
            <block>
      Sequence("EnableDebugMailbox");
      Write32(DHCSR_Addr, 0xA05F0003);  // Halt the core in case it didn't stop at a breakpiont.
      // Clear watch point
      Write32(0xE0001020, 0x0);
      Write32(0xE0001028, 0x0);
    </block>
          </sequence>
          <sequence name="ResetHardware" Pname="cm33">
            <block>
      __var nReset      = 0x80;
      __var canReadPins = 0;
      __var SCS_Addr    = 0xE000E000;
      __var DHCSR_Addr  = SCS_Addr + 0xDF0;

      // De-assert nRESET line
      canReadPins = (DAP_SWJ_Pins(0x00, nReset, 0) != 0xFFFFFFFF);
    </block>
            <!-- Keep reset active for 50 ms -->
            <control while="1" timeout="50000"/>
            <control if="canReadPins">
              <!-- Assert nRESET line and wait max. 1s for recovery -->
              <control while="(DAP_SWJ_Pins(nReset, nReset, 0) &amp; nReset) == 0" timeout="1000000"/>
            </control>
            <control if="!canReadPins">
              <block>
        // Assert nRESET line
        DAP_SWJ_Pins(nReset, nReset, 0);
      </block>
              <!-- Wait 100ms for recovery if nRESET not readable -->
              <control while="1" timeout="100000"/>
            </control>
            <control if="(__connection &amp; (1 &lt;&lt; 17)) == 0">
              <block>
        Sequence("WaitForStopAfterReset");
      </block>
            </control>
          </sequence>
          <sequence name="TraceStart">
            <control if="__traceout &amp; 0x1" info="SWO Trace output selected">
              <block>
        // Sequence("EnableTraceClk");       // Enable and configure trace clock
      </block>
              <control if="SWO_Pin == 0" info="SWO via PIO2_24">
                <block>
          Write32(0x40004160, 0x00000001); // Configure PIO2_24: FUNC - 1
        </block>
              </control>
              <control if="SWO_Pin == 1" info="SWO via PIO2_31">
                <block>
          Write32(0x4000417C, 0x00000005); // Configure PIO2_31: FUNC - 5
        </block>
              </control>
            </control>
          </sequence>
          <sequence name="ResetSystem" Pname="cm33">
            <block>
      __dp = 0;
      __ap = 0;
       // System Control Space (SCS) offset as defined in Armv6-M/Armv7-M.
       __var SCS_Addr   = 0xE000E000;
       __var AIRCR_Addr = SCS_Addr + 0xD0C;
       __var DHCSR_Addr = SCS_Addr + 0xDF0;
       __var DEMCR_Addr = SCS_Addr + 0xDFC;
       __var tmp;
       //Halt the core
       Write32(DHCSR_Addr, 0xA05F0003);
       //clear VECTOR CATCH and set TRCENA
       tmp = Read32(DEMCR_Addr);
       Write32(DEMCR_Addr, tmp | 0x1000000);
       Sequence("ResetFlash");
       // Set watch point at SYSTEM_STICK_CALIB access
       Write32(0xE0001020, 0x50002034);
       Write32(0xE0001028, 0x00000814);
       __errorcontrol = 1;
       // Execute SYSRESETREQ via AIRCR
       Write32(AIRCR_Addr, 0x05FA0004);
      Sequence("WaitForStopAfterReset");
       __errorcontrol = 0;
    </block>
          </sequence>
        </sequences>
        <debugvars configfile="devices/MIMXRT685S/arm/MIMXRT6xx.dbgconf">
  // Debug Access Variables, can be modified by user via copies of DBGCONF files as created by uVision. Also see sub-family level.
  __var SWO_Pin               = 0;                    // Serial Wire Output pin: 0 = PIO2_24, 1 = PIO2_31
  __var Dbg_CR                = 0x00000000;           // DBG_CR
  __var BootTime              = 10000;                // 10 milliseconds
</debugvars>
        <memory name="BootROM" start="0x03000000" size="0x040000" access="rx"/>
        <memory name="BootROM_alias" start="0x13000000" size="0x040000" access="rx" alias="BootROM"/>
        <memory name="SRAM" start="0x00080000" size="0x180000" access="rw" default="1"/>
        <memory name="SRAM_DSP" start="0x00200000" size="0x280000" access="rw" default="1"/>
        <memory name="SRAM_DSP_alias1" start="0x10200000" size="0x280000" access="rw" alias="SRAM_DSP"/>
        <memory name="SRAM_DSP_alias2" start="0x20200000" size="0x280000" access="rw" alias="SRAM_DSP"/>
        <memory name="SRAM_DSP_alias3" start="0x30200000" size="0x280000" access="rw" alias="SRAM_DSP"/>
        <memory name="SRAM_ROM" start="0x00000000" size="0x020000" access="rw" default="1"/>
        <memory name="SRAM_ROM_alias1" start="0x10000000" size="0x020000" access="rx" alias="SRAM_ROM"/>
        <memory name="SRAM_ROM_alias2" start="0x20000000" size="0x020000" access="rx" alias="SRAM_ROM"/>
        <memory name="SRAM_ROM_alias3" start="0x30000000" size="0x020000" access="rx" alias="SRAM_ROM"/>
        <memory name="SRAM_SHARED" start="0x00020000" size="0x060000" access="rw" default="1"/>
        <memory name="SRAM_SHARED_alias1" start="0x10020000" size="0x060000" access="rw" alias="SRAM_SHARED"/>
        <memory name="SRAM_SHARED_alias2" start="0x20020000" size="0x060000" access="rw" alias="SRAM_SHARED"/>
        <memory name="SRAM_SHARED_alias3" start="0x30020000" size="0x060000" access="rw" alias="SRAM_SHARED"/>
        <memory name="SRAM_alias1" start="0x10080000" size="0x180000" access="rw" alias="SRAM"/>
        <memory name="SRAM_alias2" start="0x20080000" size="0x180000" access="rw" alias="SRAM"/>
        <memory name="SRAM_alias3" start="0x30080000" size="0x180000" access="rw" alias="SRAM"/>
        <memory name="USB_RAM" start="0x40140000" size="0x4000" access="rw" default="1"/>
        <memory name="USB_RAM_alias" start="0x50140000" size="0x4000" access="rw" alias="USB_RAM"/>
        <algorithm name="devices/MIMXRT685S/arm/MIMXRT6XX_EVK_FLEXSPI.FLM" start="0x08000000" size="0x04000000" RAMstart="0x1001c000" RAMsize="0x00001000" default="1"/>
        <algorithm name="devices/MIMXRT685S/arm/MIMXRT6XX_EVK_FLEXSPI_S.FLM" start="0x18000000" size="0x04000000" RAMstart="0x1001c000" RAMsize="0x00001000" default="1"/>
        <algorithm name="devices/MIMXRT685S/arm/MIMXRT6XX_FLEXSPI_B_SFDP_QSPI.FLM" start="0x08000000" size="0x04000000" RAMstart="0x1001c000" RAMsize="0x00001000" default="0"/>
        <algorithm name="devices/MIMXRT685S/arm/MIMXRT6XX_FLEXSPI_B_SFDP_QSPI_S.FLM" start="0x18000000" size="0x04000000" RAMstart="0x1001c000" RAMsize="0x00001000" default="0"/>
        <debug svd="devices/MIMXRT685S/MIMXRT685S_cm33.xml" Pname="cm33" __dp="0" __ap="0"/>
        <variant Dvariant="MIMXRT685SFVKB">
          <compile Pname="cm33" header="devices/MIMXRT685S/fsl_device_registers.h" define="CPU_MIMXRT685SFVKB_cm33"/>
        </variant>
        <variant Dvariant="MIMXRT685SFFOB">
          <compile Pname="cm33" header="devices/MIMXRT685S/fsl_device_registers.h" define="CPU_MIMXRT685SFFOB_cm33"/>
        </variant>
        <variant Dvariant="MIMXRT685SFAWBR">
          <compile Pname="cm33" header="devices/MIMXRT685S/fsl_device_registers.h" define="CPU_MIMXRT685SFAWBR_cm33"/>
        </variant>
      </device>
    </family>
  </devices>
  <conditions>
    <condition id="device.MIMXRT685S.internal_condition">
      <accept Dname="MIMXRT685S" Dvariant="MIMXRT685SFAWBR" Dvendor="NXP:11"/>
      <accept Dname="MIMXRT685SFAWBR" Dvendor="NXP:11"/>
      <accept Dname="MIMXRT685S" Dvariant="MIMXRT685SFFOB" Dvendor="NXP:11"/>
      <accept Dname="MIMXRT685SFFOB" Dvendor="NXP:11"/>
      <accept Dname="MIMXRT685S" Dvariant="MIMXRT685SFVKB" Dvendor="NXP:11"/>
      <accept Dname="MIMXRT685SFVKB" Dvendor="NXP:11"/>
    </condition>
    <condition id="device.MIMXRT685S_startup.condition_id">
      <require condition="allOf.device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.device=MIMXRT685S.internal_condition">
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.toolchains=iar.condition_id">
      <require condition="toolchains.iar.internal_condition"/>
    </condition>
    <condition id="toolchains.iar.internal_condition">
      <accept Tcompiler="IAR"/>
    </condition>
    <condition id="allOf.toolchains=armgcc.condition_id">
      <require condition="toolchains.armgcc.internal_condition"/>
    </condition>
    <condition id="toolchains.armgcc.internal_condition">
      <accept Tcompiler="GCC"/>
    </condition>
    <condition id="allOf.toolchains=mdk.condition_id">
      <require condition="toolchains.mdk.internal_condition"/>
    </condition>
    <condition id="toolchains.mdk.internal_condition">
      <accept Tcompiler="ARMCC"/>
    </condition>
    <condition id="middleware.baremetal.condition_id">
      <require condition="allOf.device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="cmake_toolchain.condition_id">
      <require condition="allOf.device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="RTE_Device.condition_id">
      <require condition="allOf.device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="utilities.misc_utilities.condition_id">
      <require condition="allOf.device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.toolchains=armgcc, cores=cm33.condition_id">
      <require condition="toolchains.armgcc.internal_condition"/>
      <require condition="cores.cm33.internal_condition"/>
    </condition>
    <condition id="cores.cm33.internal_condition">
      <accept Dcore="Cortex-M33"/>
    </condition>
    <condition id="component.power_manager_docs.condition_id">
      <require condition="allOf.device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.icm42688p.condition_id">
      <require condition="allOf.device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.mflash.common.condition_id">
      <require condition="allOf.device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.wifi_bt_module.tx_pwr_limits.condition_id">
      <require condition="allOf.device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.flash_config.mimxrt685audevk.condition_id">
      <require condition="allOf.board=mimxrt685audevk, driver.common, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.board=mimxrt685audevk, driver.common, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="device_id.MIMXRT685S.internal_condition">
      <accept Dname="MIMXRT685S" Dvariant="MIMXRT685SFAWBR" Dvendor="NXP:11"/>
      <accept Dname="MIMXRT685SFAWBR" Dvendor="NXP:11"/>
      <accept Dname="MIMXRT685S" Dvariant="MIMXRT685SFFOB" Dvendor="NXP:11"/>
      <accept Dname="MIMXRT685SFFOB" Dvendor="NXP:11"/>
      <accept Dname="MIMXRT685S" Dvariant="MIMXRT685SFVKB" Dvendor="NXP:11"/>
      <accept Dname="MIMXRT685SFVKB" Dvendor="NXP:11"/>
    </condition>
    <condition id="DEVICES_Project_Template.MIMXRT685S.condition_id">
      <require condition="allOf.component.usart_adapter, device_id=MIMXRT685S, device.MIMXRT685S_startup, driver.cache_cache64, driver.clock, driver.common, driver.flexcomm_usart, driver.flexspi, driver.lpc_gpio, driver.lpc_iopctl, driver.power, driver.reset, anyOf=allOf=component.serial_manager, utility.assert, utility.debug_console, allOf=utility.assert_lite, utility.debug_console_lite.internal_condition"/>
    </condition>
    <condition id="allOf.component.usart_adapter, device_id=MIMXRT685S, device.MIMXRT685S_startup, driver.cache_cache64, driver.clock, driver.common, driver.flexcomm_usart, driver.flexspi, driver.lpc_gpio, driver.lpc_iopctl, driver.power, driver.reset, anyOf=allOf=component.serial_manager, utility.assert, utility.debug_console, allOf=utility.assert_lite, utility.debug_console_lite.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="usart_adapter"/>
      <require condition="device_id.MIMXRT685S.internal_condition"/>
      <require Cclass="Device" Cgroup="Startup" Csub="MIMXRT685S_startup"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="cache"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="clock"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="usart"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="flexspi"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="gpio"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="iopctl"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="power"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="reset"/>
      <require condition="anyOf.allOf=component.serial_manager, utility.assert, utility.debug_console, allOf=utility.assert_lite, utility.debug_console_lite.internal_condition"/>
    </condition>
    <condition id="anyOf.allOf=component.serial_manager, utility.assert, utility.debug_console, allOf=utility.assert_lite, utility.debug_console_lite.internal_condition">
      <accept condition="allOf.component.serial_manager, utility.assert, utility.debug_console.internal_condition"/>
      <accept condition="allOf.utility.assert_lite, utility.debug_console_lite.internal_condition"/>
    </condition>
    <condition id="allOf.component.serial_manager, utility.assert, utility.debug_console.internal_condition">
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="serial_manager"/>
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="assert"/>
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="debug_console"/>
    </condition>
    <condition id="allOf.utility.assert_lite, utility.debug_console_lite.internal_condition">
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="assert_lite"/>
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="debug_console_lite"/>
    </condition>
    <condition id="device.MIMXRT685S_linker.condition_id">
      <require condition="allOf.device_id=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.device_id=MIMXRT685S.internal_condition">
      <require condition="device_id.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="device_ids.MIMXRT685S.internal_condition">
      <accept Dname="MIMXRT685S" Dvariant="MIMXRT685SFAWBR" Dvendor="NXP:11"/>
      <accept Dname="MIMXRT685SFAWBR" Dvendor="NXP:11"/>
      <accept Dname="MIMXRT685S" Dvariant="MIMXRT685SFFOB" Dvendor="NXP:11"/>
      <accept Dname="MIMXRT685SFFOB" Dvendor="NXP:11"/>
      <accept Dname="MIMXRT685S" Dvariant="MIMXRT685SFVKB" Dvendor="NXP:11"/>
      <accept Dname="MIMXRT685SFVKB" Dvendor="NXP:11"/>
    </condition>
    <condition id="allOf.toolchains=mdk, cores=cm33, device_ids=MIMXRT685S.condition_id">
      <require condition="toolchains.mdk.internal_condition"/>
      <require condition="cores.cm33.internal_condition"/>
      <require condition="device_ids.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.toolchains=armgcc, cores=cm33, device_ids=MIMXRT685S.condition_id">
      <require condition="toolchains.armgcc.internal_condition"/>
      <require condition="cores.cm33.internal_condition"/>
      <require condition="device_ids.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.toolchains=iar, cores=cm33, device_ids=MIMXRT685S.condition_id">
      <require condition="toolchains.iar.internal_condition"/>
      <require condition="cores.cm33.internal_condition"/>
      <require condition="device_ids.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.iap.condition_id">
      <require condition="allOf.driver.common, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="device.MIMXRT685S_CMSIS.condition_id">
      <require condition="allOf.CMSIS_Include_core_cm, device_id=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.CMSIS_Include_core_cm, device_id=MIMXRT685S.internal_condition">
      <require Cclass="CMSIS" Cgroup="CORE"/>
      <require condition="device_id.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.cores=cm33, core_ids=cm33.condition_id">
      <require condition="cores.cm33.internal_condition"/>
      <require condition="core_ids.cm33.internal_condition"/>
    </condition>
    <condition id="core_ids.cm33.internal_condition">
      <accept Pname="cm33" Dname="*"/>
    </condition>
    <condition id="allOf.cores=cm33.condition_id">
      <require condition="cores.cm33.internal_condition"/>
    </condition>
    <condition id="driver.pca9420.condition_id">
      <require condition="allOf.driver.power, driver.common, anyOf=driver.flexcomm_i2c, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.power, driver.common, anyOf=driver.flexcomm_i2c, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="power"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require condition="anyOf.driver.flexcomm_i2c.internal_condition"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="anyOf.driver.flexcomm_i2c.internal_condition">
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="i2c"/>
    </condition>
    <condition id="driver.power.condition_id">
      <require condition="allOf.driver.common, device_id=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, device_id=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require condition="device_id.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.utick.condition_id">
      <require condition="allOf.driver.power, device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="allOf.driver.power, device_id=MIMXRT685S, driver.common.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="power"/>
      <require condition="device_id.MIMXRT685S.internal_condition"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
    </condition>
    <condition id="driver.dsp.condition_id">
      <require condition="allOf.driver.power, driver.common, device_id=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.power, driver.common, device_id=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="power"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require condition="device_id.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.clock.condition_id">
      <require condition="allOf.driver.common, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.serial_manager_uart.condition_id">
      <require condition="allOf.component.usart_adapter, component.serial_manager, anyOf=driver.flexcomm_usart, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.component.usart_adapter, component.serial_manager, anyOf=driver.flexcomm_usart, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="usart_adapter"/>
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="serial_manager"/>
      <require condition="anyOf.driver.flexcomm_usart.internal_condition"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="anyOf.driver.flexcomm_usart.internal_condition">
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="usart"/>
    </condition>
    <condition id="utility.debug_console_lite.condition_id">
      <require condition="allOf.component.usart_adapter, device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="allOf.component.usart_adapter, device_id=MIMXRT685S, driver.common.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="usart_adapter"/>
      <require condition="device_id.MIMXRT685S.internal_condition"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
    </condition>
    <condition id="driver.dmic_dma.condition_id">
      <require condition="allOf.driver.lpc_dma, driver.dmic, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.lpc_dma, driver.dmic, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="dma"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="dmic"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.flexspi_dma.condition_id">
      <require condition="allOf.driver.lpc_dma, driver.flexspi, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.lpc_dma, driver.flexspi, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="dma"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="flexspi"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.flexcomm_i2c_dma.condition_id">
      <require condition="allOf.driver.lpc_dma, driver.flexcomm, driver.common, driver.flexcomm_i2c, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.lpc_dma, driver.flexcomm, driver.common, driver.flexcomm_i2c, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="dma"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="flexcomm"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="i2c"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.flexcomm_i2s_dma.condition_id">
      <require condition="allOf.driver.lpc_dma, driver.flexcomm_i2s, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.lpc_dma, driver.flexcomm_i2s, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="dma"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="flexcomm_i2s"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.flexcomm_spi_dma.condition_id">
      <require condition="allOf.driver.lpc_dma, driver.flexcomm, driver.flexcomm_spi, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.lpc_dma, driver.flexcomm, driver.flexcomm_spi, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="dma"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="flexcomm"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="spi"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.flexcomm_usart_dma.condition_id">
      <require condition="allOf.driver.lpc_dma, driver.flexcomm, driver.flexcomm_usart, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.lpc_dma, driver.flexcomm, driver.flexcomm_usart, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="dma"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="flexcomm"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="usart"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.inputmux_connections.condition_id">
      <require condition="allOf.driver.common, device_id=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.common.condition_id">
      <require condition="allOf.driver.reset, driver.clock, device.MIMXRT685S_CMSIS, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.reset, driver.clock, device.MIMXRT685S_CMSIS, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="reset"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="clock"/>
      <require Cclass="Device" Cgroup="CMSIS" Csub="MIMXRT685S_header"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="utility.assert.condition_id">
      <require condition="allOf.utility.debug_console, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.utility.debug_console, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="debug_console"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="utility.assert_lite.condition_id">
      <require condition="allOf.utility.debug_console_lite, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.utility.debug_console_lite, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="debug_console_lite"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="utility.str.condition_id">
      <require condition="allOf.driver.common, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="utility.debug_console.condition_id">
      <require condition="allOf.component.serial_manager, driver.common, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.component.serial_manager, driver.common, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="serial_manager"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.cmsis_flexcomm_i2c.condition_id">
      <require condition="allOf.driver.flexcomm_i2c_dma, CMSIS_Driver_Include.I2C, RTE_Device, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.flexcomm_i2c_dma, CMSIS_Driver_Include.I2C, RTE_Device, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="i2c_dma"/>
      <require Cclass="CMSIS Driver" Cgroup="I2C" Capiversion="2.4.0"/>
      <require Cclass="Device" Cgroup="SDK Project Template" Csub="RTE_Device"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.cmsis_flexcomm_spi.condition_id">
      <require condition="allOf.driver.flexcomm_spi_dma, CMSIS_Driver_Include.SPI, RTE_Device, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.flexcomm_spi_dma, CMSIS_Driver_Include.SPI, RTE_Device, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="spi_dma"/>
      <require Cclass="CMSIS Driver" Cgroup="SPI" Capiversion="2.3.0"/>
      <require Cclass="Device" Cgroup="SDK Project Template" Csub="RTE_Device"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.cmsis_flexcomm_usart.condition_id">
      <require condition="allOf.driver.flexcomm_usart_dma, CMSIS_Driver_Include.USART, RTE_Device, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.flexcomm_usart_dma, CMSIS_Driver_Include.USART, RTE_Device, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="usart_dma"/>
      <require Cclass="CMSIS Driver" Cgroup="USART" Capiversion="2.4.0"/>
      <require Cclass="Device" Cgroup="SDK Project Template" Csub="RTE_Device"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.power_manager_core.condition_id">
      <require condition="allOf.driver.common, component.lists, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, component.lists, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="lists"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.power_manager_MIMXRT685S.condition_id">
      <require condition="allOf.component.power_manager_core, device_id=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.component.power_manager_core, device_id=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="power_manager_core"/>
      <require condition="device_id.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.audio_flexcomm_i2s_dma_adapter.condition_id">
      <require condition="allOf.driver.common, driver.flexcomm_i2s_dma, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, driver.flexcomm_i2s_dma, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="flexcomm_i2s_dma"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.button.condition_id">
      <require condition="allOf.driver.common, component.timer_manager, anyOf=component.lpc_gpio_adapter, component.rt_gpio_adapter, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, component.timer_manager, anyOf=component.lpc_gpio_adapter, component.rt_gpio_adapter, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="timer_manager"/>
      <require condition="anyOf.component.lpc_gpio_adapter, component.rt_gpio_adapter.internal_condition"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="anyOf.component.lpc_gpio_adapter, component.rt_gpio_adapter.internal_condition">
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="lpc_gpio_adapter"/>
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="rt_gpio_adapter"/>
    </condition>
    <condition id="driver.codec.condition_id">
      <require condition="allOf.driver.common, anyOf=component.wm8904_adapter, component.tfa9xxx_adapter, component.cs42888_adapter, component.cs42448_adapter, component.codec_adapters, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, anyOf=component.wm8904_adapter, component.tfa9xxx_adapter, component.cs42888_adapter, component.cs42448_adapter, component.codec_adapters, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require condition="anyOf.component.wm8904_adapter, component.tfa9xxx_adapter, component.cs42888_adapter, component.cs42448_adapter, component.codec_adapters.internal_condition"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="anyOf.component.wm8904_adapter, component.tfa9xxx_adapter, component.cs42888_adapter, component.cs42448_adapter, component.codec_adapters.internal_condition">
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="wm8904_adapter"/>
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="tfa9xxx_adapter"/>
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="cs42888_adapter"/>
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="cs42448_adapter"/>
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="codec_adapters"/>
    </condition>
    <condition id="component.codec_adapters.condition_id">
      <require condition="anyOf.allOf=driver.codec, component.wm8904_adapter, allOf=driver.codec, component.tfa9xxx_adapter, allOf=driver.codec, component.cs42888_adapter, allOf=driver.common, component.cs42448_adapter.internal_condition"/>
      <require condition="allOf.device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="anyOf.allOf=driver.codec, component.wm8904_adapter, allOf=driver.codec, component.tfa9xxx_adapter, allOf=driver.codec, component.cs42888_adapter, allOf=driver.common, component.cs42448_adapter.internal_condition">
      <accept condition="allOf.driver.codec, component.wm8904_adapter.internal_condition"/>
      <accept condition="allOf.driver.codec, component.tfa9xxx_adapter.internal_condition"/>
      <accept condition="allOf.driver.codec, component.cs42888_adapter.internal_condition"/>
      <accept condition="allOf.driver.common, component.cs42448_adapter.internal_condition"/>
    </condition>
    <condition id="allOf.driver.codec, component.wm8904_adapter.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="codec"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="wm8904_adapter"/>
    </condition>
    <condition id="allOf.driver.codec, component.tfa9xxx_adapter.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="codec"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="tfa9xxx_adapter"/>
    </condition>
    <condition id="allOf.driver.codec, component.cs42888_adapter.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="codec"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="cs42888_adapter"/>
    </condition>
    <condition id="allOf.driver.common, component.cs42448_adapter.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="cs42448_adapter"/>
    </condition>
    <condition id="component.wm8904_adapter.condition_id">
      <require condition="allOf.driver.wm8904, driver.codec, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.wm8904, driver.codec, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="wm8904"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="codec"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.cs42888_adapter.condition_id">
      <require condition="allOf.driver.cs42888, driver.codec, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.cs42888, driver.codec, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="cs42888"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="codec"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.cs42448_adapter.condition_id">
      <require condition="allOf.driver.cs42448, driver.codec, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.cs42448, driver.codec, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="cs42448"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="codec"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.tfa9xxx_adapter.condition_id">
      <require condition="allOf.driver.tfa9xxx, driver.codec, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.tfa9xxx, driver.codec, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="tfa9xxx"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="codec"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.codec_i2c.condition_id">
      <require condition="allOf.driver.common, anyOf=component.flexcomm_i2c_adapter, component.i3c_adapter, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, anyOf=component.flexcomm_i2c_adapter, component.i3c_adapter, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require condition="anyOf.component.flexcomm_i2c_adapter, component.i3c_adapter.internal_condition"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="anyOf.component.flexcomm_i2c_adapter, component.i3c_adapter.internal_condition">
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="flexcomm_i2c_adapter"/>
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="i3c_adapter"/>
    </condition>
    <condition id="component.lpc_crc_adapter.condition_id">
      <require condition="allOf.driver.common, driver.lpc_crc, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, driver.lpc_crc, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="lpc_crc"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.software_crc_adapter.condition_id">
      <require condition="allOf.driver.common, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.cs42448.condition_id">
      <require condition="allOf.driver.common, component.codec_i2c, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, component.codec_i2c, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="codec_i2c"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.cs42888.condition_id">
      <require condition="allOf.driver.common, component.codec_i2c, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.ft6x06.condition_id">
      <require condition="allOf.CMSIS_Driver_Include.I2C, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.CMSIS_Driver_Include.I2C, device=MIMXRT685S.internal_condition">
      <require Cclass="CMSIS Driver" Cgroup="I2C" Capiversion="2.4.0"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.fxos8700cq.condition_id">
      <require condition="allOf.driver.common, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.lpc_gpio_adapter.condition_id">
      <require condition="allOf.driver.lpc_gpio, driver.inputmux, driver.pint, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.lpc_gpio, driver.inputmux, driver.pint, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="gpio"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="inputmux"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="pint"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.rt_gpio_adapter.condition_id">
      <require condition="allOf.driver.lpc_gpio, board=evkmimxrt685, mimxrt685audevk, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.lpc_gpio, board=evkmimxrt685, mimxrt685audevk, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="gpio"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.flexcomm_i2c_adapter.condition_id">
      <require condition="allOf.driver.common, driver.flexcomm_i2c, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, driver.flexcomm_i2c, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="i2c"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.i3c_adapter.condition_id">
      <require condition="allOf.driver.common, driver.i3c, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, driver.i3c, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="i3c"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.i3c_bus.condition_id">
      <require condition="allOf.driver.common, component.lists, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.i3c_bus_adapter.condition_id">
      <require condition="allOf.driver.i3c, component.i3c_bus, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.i3c, component.i3c_bus, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="i3c"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="i3c_bus"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.ili9341.condition_id">
      <require condition="allOf.driver.common, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.flexspi_nor_flash_adapter_rt685evk.condition_id">
      <require condition="allOf.board=evkmimxrt685, driver.common, driver.flexspi, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.board=evkmimxrt685, driver.common, driver.flexspi, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="flexspi"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.led.condition_id">
      <require condition="allOf.driver.common, component.timer_manager, anyOf=component.lpc_gpio_adapter, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, component.timer_manager, anyOf=component.lpc_gpio_adapter, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="timer_manager"/>
      <require condition="anyOf.component.lpc_gpio_adapter.internal_condition"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="anyOf.component.lpc_gpio_adapter.internal_condition">
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="lpc_gpio_adapter"/>
    </condition>
    <condition id="component.lists.condition_id">
      <require condition="allOf.driver.common, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.log.condition_id">
      <require condition="allOf.driver.common, utility.str, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, utility.str, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="str"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.log.backend.debugconsole.condition_id">
      <require condition="allOf.driver.common, component.log, utility.debug_console, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, component.log, utility.debug_console, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="log"/>
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="debug_console"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.log.backend.debugconsole_lite.condition_id">
      <require condition="allOf.driver.common, component.log, utility.debug_console_lite, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, component.log, utility.debug_console_lite, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="log"/>
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="debug_console_lite"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.log.backend.ringbuffer.condition_id">
      <require condition="allOf.driver.common, component.log, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, component.log, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="log"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.mem_manager.condition_id">
      <require condition="allOf.driver.common, component.lists, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.mem_manager_light.condition_id">
      <require condition="allOf.driver.common, component.lists, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.messaging.condition_id">
      <require condition="allOf.driver.common, component.lists, component.mem_manager_light, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, component.lists, component.mem_manager_light, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="lists"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="mem_manager_light"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.mflash_file.condition_id">
      <require condition="anyOf.component.mflash.rt685, component.mflash.mimxrt685audevk.internal_condition"/>
      <require condition="allOf.device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="anyOf.component.mflash.rt685, component.mflash.mimxrt685audevk.internal_condition">
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="rt685"/>
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="mimxrt685audevk"/>
    </condition>
    <condition id="component.mflash_dummy.condition_id">
      <require condition="allOf.component.mflash_file, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.component.mflash_file, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="mflash_file"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.mflash.rt685.condition_id">
      <require condition="allOf.component.mflash.common, board=evkmimxrt685, driver.flexspi, driver.cache_cache64, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.component.mflash.common, board=evkmimxrt685, driver.flexspi, driver.cache_cache64, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="mflash_common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="flexspi"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="cache"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.mflash.mimxrt685audevk.condition_id">
      <require condition="allOf.component.mflash.common, board=mimxrt685audevk, driver.flexspi, driver.cache_cache64, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.component.mflash.common, board=mimxrt685audevk, driver.flexspi, driver.cache_cache64, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="mflash_common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="flexspi"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="cache"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.mma8652fc.condition_id">
      <require condition="allOf.driver.common, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.mpi_loader.condition_id">
      <require condition="allOf.driver.common, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.panic.condition_id">
      <require condition="allOf.driver.common, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.pwm_ctimer_adapter.condition_id">
      <require condition="allOf.driver.common, driver.ctimer, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, driver.ctimer, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="ctimer"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.reset_adapter.condition_id">
      <require condition="allOf.driver.common, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.trng_adapter.condition_id">
      <require condition="allOf.driver.common, driver.trng, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, driver.trng, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="trng"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.software_rng_adapter.condition_id">
      <require condition="allOf.driver.common, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.lpcrtc.condition_id">
      <require condition="allOf.driver.common, driver.lpc_rtc, device_id=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, driver.lpc_rtc, device_id=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="lpc_rtc"/>
      <require condition="device_id.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.serial_manager.condition_id">
      <require condition="allOf.driver.common, component.lists, anyOf=component.serial_manager_uart, component.serial_manager_virtual, component.serial_manager_swo, component.serial_manager_spi, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, component.lists, anyOf=component.serial_manager_uart, component.serial_manager_virtual, component.serial_manager_swo, component.serial_manager_spi, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="lists"/>
      <require condition="anyOf.component.serial_manager_uart, component.serial_manager_virtual, component.serial_manager_swo, component.serial_manager_spi.internal_condition"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="anyOf.component.serial_manager_uart, component.serial_manager_virtual, component.serial_manager_swo, component.serial_manager_spi.internal_condition">
      <accept Cclass="Device" Cgroup="SDK Utilities" Csub="serial_manager_uart"/>
      <accept Cclass="Device" Cgroup="SDK Utilities" Csub="serial_manager_virtual"/>
      <accept Cclass="Device" Cgroup="SDK Utilities" Csub="serial_manager_swo"/>
      <accept Cclass="Device" Cgroup="SDK Utilities" Csub="serial_manager_spi"/>
    </condition>
    <condition id="component.serial_manager_spi.condition_id">
      <require condition="allOf.component.serial_manager, anyOf=allOf=driver.flexcomm_spi, component.flexcomm_spi_adapter, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.component.serial_manager, anyOf=allOf=driver.flexcomm_spi, component.flexcomm_spi_adapter, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="serial_manager"/>
      <require condition="anyOf.allOf=driver.flexcomm_spi, component.flexcomm_spi_adapter.internal_condition"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="anyOf.allOf=driver.flexcomm_spi, component.flexcomm_spi_adapter.internal_condition">
      <accept condition="allOf.driver.flexcomm_spi, component.flexcomm_spi_adapter.internal_condition"/>
    </condition>
    <condition id="allOf.driver.flexcomm_spi, component.flexcomm_spi_adapter.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="spi"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="flexcomm_spi_adapter"/>
    </condition>
    <condition id="component.serial_manager_virtual.condition_id">
      <require condition="allOf.component.serial_manager, driver.common, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.serial_manager_swo.condition_id">
      <require condition="allOf.core=cm33, driver.common, component.serial_manager, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.core=cm33, driver.common, component.serial_manager, device=MIMXRT685S.internal_condition">
      <require condition="core.cm33.internal_condition"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="serial_manager"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="core.cm33.internal_condition">
      <accept Dcore="Cortex-M33"/>
    </condition>
    <condition id="utility.shell.condition_id">
      <require condition="allOf.utility.str, component.lists, driver.common, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.utility.str, component.lists, driver.common, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Utilities" Csub="str"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="lists"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.flexcomm_spi_adapter.condition_id">
      <require condition="allOf.driver.common, driver.flexcomm_spi, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, driver.flexcomm_spi, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="spi"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.sx1502.condition_id">
      <require condition="allOf.driver.common, anyOf=component.flexcomm_i2c_adapter, component.i3c_adapter, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.tfa9xxx.condition_id">
      <require condition="allOf.driver.common, component.codec_i2c, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.tfa9xxx_hal.condition_id">
      <require condition="allOf.driver.common, component.codec_i2c, driver.tfa9xxx, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, component.codec_i2c, driver.tfa9xxx, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="codec_i2c"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="tfa9xxx"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.ctimer_adapter.condition_id">
      <require condition="allOf.driver.common, driver.ctimer, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.mrt_adapter.condition_id">
      <require condition="allOf.driver.common, driver.mrt, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, driver.mrt, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="mrt"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.ostimer_adapter.condition_id">
      <require condition="allOf.driver.common, driver.ostimer, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, driver.ostimer, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="ostimer"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.timer_manager.condition_id">
      <require condition="allOf.driver.common, component.lists, anyOf=component.ctimer_adapter, component.mrt_adapter, component.ostimer_adapter, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, component.lists, anyOf=component.ctimer_adapter, component.mrt_adapter, component.ostimer_adapter, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="lists"/>
      <require condition="anyOf.component.ctimer_adapter, component.mrt_adapter, component.ostimer_adapter.internal_condition"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="anyOf.component.ctimer_adapter, component.mrt_adapter, component.ostimer_adapter.internal_condition">
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="ctimer_adapter"/>
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="mrt_adapter"/>
      <accept Cclass="Device" Cgroup="SDK Drivers" Csub="ostimer_adapter"/>
    </condition>
    <condition id="component.usart_adapter.condition_id">
      <require condition="allOf.driver.common, driver.flexcomm_usart, driver.flexcomm, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.common, driver.flexcomm_usart, driver.flexcomm, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="usart"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="flexcomm"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="component.usart_dma_adapter.condition_id">
      <require condition="allOf.component.usart_adapter, component.timer_manager, driver.flexcomm_usart_dma, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.component.usart_adapter, component.timer_manager, driver.flexcomm_usart_dma, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="usart_adapter"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="timer_manager"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="usart_dma"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.wm8904.condition_id">
      <require condition="allOf.driver.common, component.codec_i2c, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.acmp.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="allOf.device_id=MIMXRT685S, driver.common.internal_condition">
      <require condition="device_id.MIMXRT685S.internal_condition"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
    </condition>
    <condition id="driver.flexspi.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.lpadc.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.mu.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.otfad.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.sema42.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.usdhc.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.cache_cache64.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.casper.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.lpc_crc.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.ctimer.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.dmic.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.flexcomm.condition_id">
      <require condition="allOf.driver.common, device_id=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.fmeas.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.hashcrypt.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.flexcomm_i2c.condition_id">
      <require condition="allOf.driver.flexcomm, driver.common, device_id=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.flexcomm, driver.common, device_id=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="flexcomm"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require condition="device_id.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.flexcomm_i2s.condition_id">
      <require condition="allOf.driver.flexcomm, driver.common, device_id=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.i3c.condition_id">
      <require condition="allOf.driver.common, device_id=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.inputmux.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common, driver.inputmux_connections.internal_condition"/>
    </condition>
    <condition id="allOf.device_id=MIMXRT685S, driver.common, driver.inputmux_connections.internal_condition">
      <require condition="device_id.MIMXRT685S.internal_condition"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="inputmux_connections"/>
    </condition>
    <condition id="driver.lpc_dma.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.lpc_gpio.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.lpc_iopctl.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.mrt.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.ostimer.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.pint.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.powerquad.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.puf.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.reset.condition_id">
      <require condition="allOf.driver.common, device_id=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.lpc_rtc.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.sctimer.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.flexcomm_spi.condition_id">
      <require condition="allOf.driver.flexcomm, driver.common, device_id=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.trng.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.flexcomm_usart.condition_id">
      <require condition="allOf.driver.flexcomm, device_id=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.driver.flexcomm, device_id=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="flexcomm"/>
      <require condition="device_id.MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="driver.wwdt.condition_id">
      <require condition="allOf.device_id=MIMXRT685S, driver.common.internal_condition"/>
    </condition>
    <condition id="driver.flash_config.evkmimxrt685.condition_id">
      <require condition="allOf.board=evkmimxrt685, driver.common, device=MIMXRT685S.internal_condition"/>
    </condition>
    <condition id="allOf.board=evkmimxrt685, driver.common, device=MIMXRT685S.internal_condition">
      <require Cclass="Device" Cgroup="SDK Drivers" Csub="common"/>
      <require condition="device.MIMXRT685S.internal_condition"/>
    </condition>
  </conditions>
  <components>
    <component Cclass="Device" Cgroup="Startup" Csub="MIMXRT685S_startup" Cversion="1.1.0" condition="device.MIMXRT685S_startup.condition_id">
      <description>Device MIMXRT685S_startup</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/system_MIMXRT685S_cm33.c" projectpath="MIMXRT685S"/>
        <file category="header" name="devices/MIMXRT685S/system_MIMXRT685S_cm33.h" projectpath="MIMXRT685S"/>
        <file condition="allOf.toolchains=iar.condition_id" category="sourceAsm" name="devices/MIMXRT685S/iar/startup_MIMXRT685S_cm33.s" projectpath="MIMXRT685S/iar"/>
        <file condition="allOf.toolchains=armgcc.condition_id" category="sourceAsm" name="devices/MIMXRT685S/gcc/startup_MIMXRT685S_cm33.S" projectpath="MIMXRT685S/gcc"/>
        <file condition="allOf.toolchains=mdk.condition_id" category="sourceAsm" name="devices/MIMXRT685S/arm/startup_MIMXRT685S_cm33.S" projectpath="MIMXRT685S/arm"/>
        <file category="include" name="devices/MIMXRT685S/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Utilities" Csub="baremetal" Cversion="1.0.0" condition="middleware.baremetal.condition_id">
      <description>Middleware baremetal</description>
      <RTE_Components_h>
#ifndef SDK_OS_BAREMETAL
#define SDK_OS_BAREMETAL 
#endif
</RTE_Components_h>
      <files>
        <file category="doc" name="middleware/bm/readme.txt" projectpath="middleware/bm"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Utilities" Csub="cmake_toolchain" Cversion="1.0.0" condition="cmake_toolchain.condition_id">
      <description>Cmake_toolchain</description>
      <files>
        <file category="other" name="tools/cmake_toolchain_files/armgcc.cmake" projectpath="cmake_toolchain_files"/>
        <file category="other" name="tools/cmake_toolchain_files/xcc.cmake" projectpath="cmake_toolchain_files"/>
        <file category="other" name="tools/cmake_toolchain_files/xclang.cmake" projectpath="cmake_toolchain_files"/>
        <file category="other" name="tools/cmake_toolchain_files/armgcc_force_cpp.cmake" projectpath="cmake_toolchain_files"/>
        <file category="other" name="tools/cmake_toolchain_files/mcux_config.cmake" projectpath="cmake_toolchain_files"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Project Template" Csub="RTE_Device" Cversion="1.0.0" condition="RTE_Device.condition_id">
      <description>Rte_device</description>
      <files>
        <file category="header" attr="config" name="devices/MIMXRT685S/template/RTE_Device.h" version="1.0.0" projectpath="board"/>
        <file category="include" name="devices/MIMXRT685S/template/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Utilities" Csub="misc_utilities" Cversion="1.1.1" condition="utilities.misc_utilities.condition_id">
      <description>Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library.</description>
      <files>
        <file condition="allOf.toolchains=armgcc.condition_id" category="sourceC" name="devices/MIMXRT685S/utilities/fsl_sbrk.c" projectpath="utilities"/>
        <file condition="allOf.toolchains=armgcc.condition_id" category="sourceC" name="devices/MIMXRT685S/utilities/fsl_syscall_stub.c" projectpath="utilities"/>
        <file condition="allOf.toolchains=armgcc, cores=cm33.condition_id" category="sourceAsm" name="devices/MIMXRT685S/utilities/fsl_memcpy.S" projectpath="utilities"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="power_manager_docs" Cversion="2.0.0" condition="component.power_manager_docs.condition_id">
      <description>Power Manager component documentation</description>
      <files>
        <file category="other" name="components/power_manager/README.md" projectpath="component/power_manager"/>
        <file category="image" name="components/power_manager/images/memory_example.png" projectpath="component/power_manager/images"/>
        <file category="image" name="components/power_manager/images/SDK_PM_architecture.png" projectpath="component/power_manager/images"/>
        <file category="include" name="components/power_manager/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="icm42688p" Cversion="1.0.0" condition="driver.icm42688p.condition_id">
      <description>Driver icm42688p</description>
      <files>
        <file category="header" name="components/icm42688p/fsl_icm42688p.h" projectpath="icm42688p"/>
        <file category="sourceC" name="components/icm42688p/fsl_icm42688p.c" projectpath="icm42688p"/>
        <file category="include" name="components/icm42688p/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="mflash_common" Cversion="1.0.0" condition="component.mflash.common.condition_id">
      <description>mflash common</description>
      <files>
        <file category="header" name="components/flash/mflash/mflash_common.h" projectpath="flash/mflash"/>
        <file category="include" name="components/flash/mflash/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="tx_pwr_limits" Cversion="1.0.0" condition="component.wifi_bt_module.tx_pwr_limits.condition_id">
      <description>Wi-Fi module Tx power limits</description>
      <files>
        <file category="header" name="components/wifi_bt_module/AzureWave/tx_pwr_limits/wlan_txpwrlimit_cfg_WW.h" projectpath="component/wifi_bt_module/AzureWave/tx_pwr_limits"/>
        <file category="header" name="components/wifi_bt_module/AzureWave/tx_pwr_limits/wlan_txpwrlimit_cfg_WW_rw610.h" projectpath="component/wifi_bt_module/AzureWave/tx_pwr_limits"/>
        <file category="header" name="components/wifi_bt_module/Murata/tx_pwr_limits/wlan_txpwrlimit_cfg_murata_1XK_CA.h" projectpath="component/wifi_bt_module/Murata/tx_pwr_limits"/>
        <file category="header" name="components/wifi_bt_module/Murata/tx_pwr_limits/wlan_txpwrlimit_cfg_murata_1XK_EU.h" projectpath="component/wifi_bt_module/Murata/tx_pwr_limits"/>
        <file category="header" name="components/wifi_bt_module/Murata/tx_pwr_limits/wlan_txpwrlimit_cfg_murata_1XK_JP.h" projectpath="component/wifi_bt_module/Murata/tx_pwr_limits"/>
        <file category="header" name="components/wifi_bt_module/Murata/tx_pwr_limits/wlan_txpwrlimit_cfg_murata_1XK_US.h" projectpath="component/wifi_bt_module/Murata/tx_pwr_limits"/>
        <file category="header" name="components/wifi_bt_module/Murata/tx_pwr_limits/wlan_txpwrlimit_cfg_murata_1XK_WW.h" projectpath="component/wifi_bt_module/Murata/tx_pwr_limits"/>
        <file category="header" name="components/wifi_bt_module/Murata/tx_pwr_limits/wlan_txpwrlimit_cfg_murata_1ZM_CA.h" projectpath="component/wifi_bt_module/Murata/tx_pwr_limits"/>
        <file category="header" name="components/wifi_bt_module/Murata/tx_pwr_limits/wlan_txpwrlimit_cfg_murata_1ZM_EU.h" projectpath="component/wifi_bt_module/Murata/tx_pwr_limits"/>
        <file category="header" name="components/wifi_bt_module/Murata/tx_pwr_limits/wlan_txpwrlimit_cfg_murata_1ZM_JP.h" projectpath="component/wifi_bt_module/Murata/tx_pwr_limits"/>
        <file category="header" name="components/wifi_bt_module/Murata/tx_pwr_limits/wlan_txpwrlimit_cfg_murata_1ZM_US.h" projectpath="component/wifi_bt_module/Murata/tx_pwr_limits"/>
        <file category="header" name="components/wifi_bt_module/Murata/tx_pwr_limits/wlan_txpwrlimit_cfg_murata_1ZM_WW.h" projectpath="component/wifi_bt_module/Murata/tx_pwr_limits"/>
        <file category="header" name="components/wifi_bt_module/Murata/tx_pwr_limits/wlan_txpwrlimit_cfg_murata_2DS_CA.h" projectpath="component/wifi_bt_module/Murata/tx_pwr_limits"/>
        <file category="header" name="components/wifi_bt_module/Murata/tx_pwr_limits/wlan_txpwrlimit_cfg_murata_2DS_EU.h" projectpath="component/wifi_bt_module/Murata/tx_pwr_limits"/>
        <file category="header" name="components/wifi_bt_module/Murata/tx_pwr_limits/wlan_txpwrlimit_cfg_murata_2DS_JP.h" projectpath="component/wifi_bt_module/Murata/tx_pwr_limits"/>
        <file category="header" name="components/wifi_bt_module/Murata/tx_pwr_limits/wlan_txpwrlimit_cfg_murata_2DS_US.h" projectpath="component/wifi_bt_module/Murata/tx_pwr_limits"/>
        <file category="header" name="components/wifi_bt_module/Murata/tx_pwr_limits/wlan_txpwrlimit_cfg_murata_2DS_WW.h" projectpath="component/wifi_bt_module/Murata/tx_pwr_limits"/>
        <file category="include" name="components/wifi_bt_module/AzureWave/tx_pwr_limits/"/>
        <file category="include" name="components/wifi_bt_module/Murata/tx_pwr_limits/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="mimxrt685audevk_flash_config" Cversion="2.0.0" condition="driver.flash_config.mimxrt685audevk.condition_id">
      <description>flash config block</description>
      <RTE_Components_h>
#ifndef BOOT_HEADER_ENABLE
#define BOOT_HEADER_ENABLE 1
#endif
</RTE_Components_h>
      <files>
        <file category="sourceC" name="boards/mimxrt685audevk/flash_config/flash_config.c" projectpath="flash_config"/>
        <file category="header" name="boards/mimxrt685audevk/flash_config/flash_config.h" projectpath="flash_config"/>
        <file category="include" name="boards/mimxrt685audevk/flash_config/"/>
      </files>
    </component>
    <component Cclass="Board Support" Cgroup="SDK Project Template" Csub="project_template" Cvariant="MIMXRT685S" Cversion="1.0.0" condition="DEVICES_Project_Template.MIMXRT685S.condition_id" isDefaultVariant="1">
      <description>Devices_project_template MIMXRT685S</description>
      <files>
        <file category="header" attr="config" name="devices/MIMXRT685S/project_template/board.h" version="1.0.0" projectpath="board"/>
        <file category="sourceC" attr="config" name="devices/MIMXRT685S/project_template/board.c" version="1.0.0" projectpath="board"/>
        <file category="header" attr="config" name="devices/MIMXRT685S/project_template/clock_config.h" version="1.0.0" projectpath="board"/>
        <file category="sourceC" attr="config" name="devices/MIMXRT685S/project_template/clock_config.c" version="1.0.0" projectpath="board"/>
        <file category="header" attr="config" name="devices/MIMXRT685S/project_template/pin_mux.h" version="1.0.0" projectpath="board"/>
        <file category="sourceC" attr="config" name="devices/MIMXRT685S/project_template/pin_mux.c" version="1.0.0" projectpath="board"/>
        <file category="header" attr="config" name="devices/MIMXRT685S/project_template/peripherals.h" version="1.0.0" projectpath="board"/>
        <file category="sourceC" attr="config" name="devices/MIMXRT685S/project_template/peripherals.c" version="1.0.0" projectpath="board"/>
        <file category="include" name="devices/MIMXRT685S/project_template/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Utilities" Csub="MIMXRT685S_linker" Cversion="1.0.0" condition="device.MIMXRT685S_linker.condition_id">
      <description>Device MIMXRT685S_linker</description>
      <files>
        <file condition="allOf.toolchains=mdk, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/arm/MIMXRT685Sxxxx_cm33_ram.scf" version="1.0.0" projectpath="MIMXRT685S/arm"/>
        <file condition="allOf.toolchains=mdk, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/arm/MIMXRT685Sxxxx_cm33_flash.scf" version="1.0.0" projectpath="MIMXRT685S/arm"/>
        <file condition="allOf.toolchains=mdk, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/arm/MIMXRT685Sxxxx_cm33_ram_s.scf" version="1.0.0" projectpath="MIMXRT685S/arm"/>
        <file condition="allOf.toolchains=mdk, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/arm/MIMXRT685Sxxxx_cm33_flash_s.scf" version="1.0.0" projectpath="MIMXRT685S/arm"/>
        <file condition="allOf.toolchains=mdk, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/arm/MIMXRT685Sxxxx_cm33_ram_ns.scf" version="1.0.0" projectpath="MIMXRT685S/arm"/>
        <file condition="allOf.toolchains=mdk, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/arm/MIMXRT685Sxxxx_cm33_flash_ns.scf" version="1.0.0" projectpath="MIMXRT685S/arm"/>
        <file condition="allOf.toolchains=armgcc, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/gcc/MIMXRT685Sxxxx_cm33_ram.ld" version="1.0.0" projectpath="MIMXRT685S/gcc"/>
        <file condition="allOf.toolchains=armgcc, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/gcc/MIMXRT685Sxxxx_cm33_flash.ld" version="1.0.0" projectpath="MIMXRT685S/gcc"/>
        <file condition="allOf.toolchains=armgcc, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/gcc/MIMXRT685Sxxxx_cm33_ram_s.ld" version="1.0.0" projectpath="MIMXRT685S/gcc"/>
        <file condition="allOf.toolchains=armgcc, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/gcc/MIMXRT685Sxxxx_cm33_flash_s.ld" version="1.0.0" projectpath="MIMXRT685S/gcc"/>
        <file condition="allOf.toolchains=armgcc, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/gcc/MIMXRT685Sxxxx_cm33_ram_ns.ld" version="1.0.0" projectpath="MIMXRT685S/gcc"/>
        <file condition="allOf.toolchains=armgcc, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/gcc/MIMXRT685Sxxxx_cm33_flash_ns.ld" version="1.0.0" projectpath="MIMXRT685S/gcc"/>
        <file condition="allOf.toolchains=iar, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/iar/MIMXRT685Sxxxx_cm33_ram.icf" version="1.0.0" projectpath="MIMXRT685S/iar"/>
        <file condition="allOf.toolchains=iar, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/iar/MIMXRT685Sxxxx_cm33_flash.icf" version="1.0.0" projectpath="MIMXRT685S/iar"/>
        <file condition="allOf.toolchains=iar, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/iar/MIMXRT685Sxxxx_cm33_ram_s.icf" version="1.0.0" projectpath="MIMXRT685S/iar"/>
        <file condition="allOf.toolchains=iar, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/iar/MIMXRT685Sxxxx_cm33_flash_s.icf" version="1.0.0" projectpath="MIMXRT685S/iar"/>
        <file condition="allOf.toolchains=iar, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/iar/MIMXRT685Sxxxx_cm33_ram_ns.icf" version="1.0.0" projectpath="MIMXRT685S/iar"/>
        <file condition="allOf.toolchains=iar, cores=cm33, device_ids=MIMXRT685S.condition_id" category="linkerScript" attr="config" name="devices/MIMXRT685S/iar/MIMXRT685Sxxxx_cm33_flash_ns.icf" version="1.0.0" projectpath="MIMXRT685S/iar"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="iap" Cversion="2.1.2" condition="driver.iap.condition_id">
      <description>ROMIAP Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_iap.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_iap.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="CMSIS" Csub="MIMXRT685S_header" Cversion="1.0.0" condition="device.MIMXRT685S_CMSIS.condition_id">
      <description>Device MIMXRT685S_cmsis</description>
      <files>
        <file condition="allOf.cores=cm33, core_ids=cm33.condition_id" category="header" name="devices/MIMXRT685S/fsl_device_registers.h" projectpath="device"/>
        <file condition="allOf.cores=cm33, core_ids=cm33.condition_id" category="header" name="devices/MIMXRT685S/MIMXRT685S_cm33.h" projectpath="device"/>
        <file condition="allOf.cores=cm33, core_ids=cm33.condition_id" category="header" name="devices/MIMXRT685S/MIMXRT685S_cm33_features.h" projectpath="device"/>
        <file condition="allOf.cores=cm33.condition_id" category="include" name="devices/MIMXRT685S/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="pca9420" Cversion="1.0.0" condition="driver.pca9420.condition_id">
      <description>Driver pca9420</description>
      <RTE_Components_h>
#ifndef SDK_I2C_BASED_COMPONENT_USED
#define SDK_I2C_BASED_COMPONENT_USED 1
#endif
</RTE_Components_h>
      <files>
        <file category="header" name="components/pca9420/fsl_pca9420.h" projectpath="pmic_driver"/>
        <file category="sourceC" name="components/pca9420/fsl_pca9420.c" projectpath="pmic_driver"/>
        <file category="include" name="components/pca9420/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="power" Cversion="2.4.0" condition="driver.power.condition_id">
      <description>Power driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_power.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_power.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="utick" Cversion="2.0.5" condition="driver.utick.condition_id">
      <description>UTICK Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_utick.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_utick.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="dsp" Cversion="1.0.0" condition="driver.dsp.condition_id">
      <description>dsp Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_dsp.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_dsp.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="clock" Cversion="2.7.2" condition="driver.clock.condition_id">
      <description>Clock Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_clock.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_clock.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Utilities" Csub="serial_manager_uart" Cversion="1.0.0" condition="component.serial_manager_uart.condition_id">
      <description>Component serial_manager_uart</description>
      <RTE_Components_h>
#ifndef SERIAL_PORT_TYPE_UART
#define SERIAL_PORT_TYPE_UART 1
#endif
</RTE_Components_h>
      <files>
        <file category="header" name="components/serial_manager/fsl_component_serial_port_uart.h" projectpath="component/serial_manager"/>
        <file category="sourceC" name="components/serial_manager/fsl_component_serial_port_uart.c" projectpath="component/serial_manager"/>
        <file category="include" name="components/serial_manager/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Utilities" Csub="debug_console_lite" Cversion="1.0.0" condition="utility.debug_console_lite.condition_id">
      <description>Utility debug_console_lite</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/utilities/str/fsl_str.c" projectpath="utilities"/>
        <file category="header" name="devices/MIMXRT685S/utilities/str/fsl_str.h" projectpath="utilities"/>
        <file category="sourceC" name="devices/MIMXRT685S/utilities/debug_console_lite/fsl_debug_console.c" projectpath="utilities"/>
        <file category="header" name="devices/MIMXRT685S/utilities/debug_console_lite/fsl_debug_console.h" projectpath="utilities"/>
        <file category="include" name="devices/MIMXRT685S/utilities/str/"/>
        <file category="include" name="devices/MIMXRT685S/utilities/debug_console_lite/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="dmic_dma" Cversion="2.4.0" condition="driver.dmic_dma.condition_id">
      <description>DMIC DMA Driver</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_dmic_dma.c" projectpath="drivers"/>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_dmic_dma.h" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="flexspi_dma" Cversion="2.2.1" condition="driver.flexspi_dma.condition_id">
      <description>FLEXSPI DMA Driver</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_flexspi_dma.c" projectpath="drivers"/>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_flexspi_dma.h" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="i2c_dma" Cversion="2.3.1" condition="driver.flexcomm_i2c_dma.condition_id">
      <description>I2C Driver</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_i2c_dma.c" projectpath="drivers"/>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_i2c_dma.h" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="flexcomm_i2s_dma" Cversion="2.3.2" condition="driver.flexcomm_i2s_dma.condition_id">
      <description>I2S Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_i2s_dma.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_i2s_dma.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="spi_dma" Cversion="2.1.1" condition="driver.flexcomm_spi_dma.condition_id">
      <description>SPI Driver</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_spi_dma.c" projectpath="drivers"/>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_spi_dma.h" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="usart_dma" Cversion="2.6.0" condition="driver.flexcomm_usart_dma.condition_id">
      <description>USART Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_usart_dma.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_usart_dma.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="inputmux_connections" Cversion="2.0.1" condition="driver.inputmux_connections.condition_id">
      <description>Inputmux_connections Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_inputmux_connections.h" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="common" Cversion="2.4.0" condition="driver.common.condition_id">
      <description>COMMON Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_common.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_common.c" projectpath="drivers"/>
        <file condition="allOf.cores=cm33.condition_id" category="sourceC" name="devices/MIMXRT685S/drivers/fsl_common_arm.c" projectpath="drivers"/>
        <file condition="allOf.cores=cm33.condition_id" category="header" name="devices/MIMXRT685S/drivers/fsl_common_arm.h" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Utilities" Csub="assert" Cversion="1.0.0" condition="utility.assert.condition_id">
      <description>Utility assert</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/utilities/fsl_assert.c" projectpath="utilities"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Utilities" Csub="assert_lite" Cversion="1.0.0" condition="utility.assert_lite.condition_id">
      <description>Utility assert_lite</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/utilities/debug_console_lite/fsl_assert.c" projectpath="utilities"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Utilities" Csub="str" Cversion="1.0.0" condition="utility.str.condition_id">
      <description>Utility str</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/utilities/str/fsl_str.c" projectpath="utilities"/>
        <file category="header" name="devices/MIMXRT685S/utilities/str/fsl_str.h" projectpath="utilities"/>
        <file category="include" name="devices/MIMXRT685S/utilities/str/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Utilities" Csub="debug_console" Cversion="1.0.1" condition="utility.debug_console.condition_id">
      <description>Utility debug_console</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/utilities/str/fsl_str.c" projectpath="utilities"/>
        <file category="header" name="devices/MIMXRT685S/utilities/str/fsl_str.h" projectpath="utilities"/>
        <file category="sourceC" name="devices/MIMXRT685S/utilities/debug_console/fsl_debug_console.c" projectpath="utilities"/>
        <file category="header" name="devices/MIMXRT685S/utilities/debug_console/fsl_debug_console.h" projectpath="utilities"/>
        <file category="header" name="devices/MIMXRT685S/utilities/debug_console/fsl_debug_console_conf.h" projectpath="utilities"/>
        <file category="include" name="devices/MIMXRT685S/utilities/str/"/>
        <file category="include" name="devices/MIMXRT685S/utilities/debug_console/"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="I2C" Csub="flexcomm_i2c_cmsis" Cversion="2.3.0" Capiversion="2.3.0" condition="driver.cmsis_flexcomm_i2c.condition_id">
      <description>I2C CMSIS Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/cmsis_drivers/fsl_i2c_cmsis.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/cmsis_drivers/fsl_i2c_cmsis.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/cmsis_drivers/"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="SPI" Csub="flexcomm_spi_cmsis" Cversion="2.5.0" Capiversion="2.2.0" condition="driver.cmsis_flexcomm_spi.condition_id">
      <description>SPI CMSIS Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/cmsis_drivers/fsl_spi_cmsis.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/cmsis_drivers/fsl_spi_cmsis.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/cmsis_drivers/"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="USART" Csub="flexcomm_usart_cmsis" Cversion="2.4.0" Capiversion="2.3.0" condition="driver.cmsis_flexcomm_usart.condition_id">
      <description>USART CMSIS Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/cmsis_drivers/fsl_usart_cmsis.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/cmsis_drivers/fsl_usart_cmsis.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/cmsis_drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="power_manager_core" Cversion="2.0.0" condition="component.power_manager_core.condition_id">
      <description>Component power manager core level</description>
      <RTE_Components_h>
#ifndef GENERIC_LIST_LIGHT
#define GENERIC_LIST_LIGHT 1
#endif
</RTE_Components_h>
      <files>
        <file category="header" name="components/power_manager/core/fsl_pm_core.h" projectpath="component/power_manager"/>
        <file category="sourceC" name="components/power_manager/core/fsl_pm_core.c" projectpath="component/power_manager"/>
        <file category="header" name="components/power_manager/core/fsl_pm_config.h" projectpath="component/power_manager"/>
        <file category="include" name="components/power_manager/core/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="power_manager_MIMXRT685S" Cversion="2.0.0" condition="component.power_manager_MIMXRT685S.condition_id">
      <description>Component power manager device level</description>
      <files>
        <file category="header" name="components/power_manager/devices/MIMXRT685S/fsl_pm_device.h" projectpath="component/power_manager/devices/MIMXRT685S"/>
        <file category="sourceC" name="components/power_manager/devices/MIMXRT685S/fsl_pm_device.c" projectpath="component/power_manager/devices/MIMXRT685S"/>
        <file category="header" name="components/power_manager/devices/MIMXRT685S/fsl_pm_device_config.h" projectpath="component/power_manager/devices/MIMXRT685S"/>
        <file category="include" name="components/power_manager/devices/MIMXRT685S/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="audio_flexcomm_i2s_dma_adapter" Cversion="1.0.0" condition="component.audio_flexcomm_i2s_dma_adapter.condition_id">
      <description>Component flexcomm_i2s_dma_adapter</description>
      <files>
        <file category="header" name="components/audio/fsl_adapter_audio.h" projectpath="component/audio"/>
        <file category="sourceC" name="components/audio/fsl_adapter_flexcomm_i2s.c" projectpath="component/audio"/>
        <file category="include" name="components/audio/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="button" Cversion="1.0.0" condition="component.button.condition_id">
      <description>Component button</description>
      <files>
        <file category="header" name="components/button/fsl_component_button.h" projectpath="component/button"/>
        <file category="sourceC" name="components/button/fsl_component_button.c" projectpath="component/button"/>
        <file category="include" name="components/button/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="codec" Cversion="2.3.1" condition="driver.codec.condition_id">
      <description>Driver codec</description>
      <RTE_Components_h>
#ifndef SDK_I2C_BASED_COMPONENT_USED
#define SDK_I2C_BASED_COMPONENT_USED 1
#endif
</RTE_Components_h>
      <files>
        <file category="header" name="components/codec/fsl_codec_common.h" projectpath="codec"/>
        <file category="sourceC" name="components/codec/fsl_codec_common.c" projectpath="codec"/>
        <file category="include" name="components/codec/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="codec_adapters" Cversion="2.2.0" condition="component.codec_adapters.condition_id">
      <description>Component codec adapters for multi codec</description>
      <RTE_Components_h>
#ifndef CODEC_MULTI_ADAPTERS
#define CODEC_MULTI_ADAPTERS 1
#endif
</RTE_Components_h>
      <files>
        <file category="sourceC" name="components/codec/port/fsl_codec_adapter.c" projectpath="codec/port"/>
        <file category="include" name="components/codec/port/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="wm8904_adapter" Cversion="2.2.0" condition="component.wm8904_adapter.condition_id">
      <description>Component wm8904 adapter for single codec</description>
      <files>
        <file category="sourceC" name="components/codec/port/wm8904/fsl_codec_wm8904_adapter.c" projectpath="codec/port/wm8904"/>
        <file category="header" name="components/codec/port/wm8904/fsl_codec_wm8904_adapter.h" projectpath="codec/port/wm8904"/>
        <file category="header" name="components/codec/port/fsl_codec_adapter.h" projectpath="codec/port"/>
        <file category="include" name="components/codec/port/wm8904/"/>
        <file category="include" name="components/codec/port/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="cs42888_adapter" Cversion="2.2.1" condition="component.cs42888_adapter.condition_id">
      <description>Component cs42888 adapter for single codec</description>
      <files>
        <file category="sourceC" name="components/codec/port/cs42888/fsl_codec_cs42888_adapter.c" projectpath="codec/port/cs42888"/>
        <file category="header" name="components/codec/port/cs42888/fsl_codec_cs42888_adapter.h" projectpath="codec/port/cs42888"/>
        <file category="header" name="components/codec/port/fsl_codec_adapter.h" projectpath="codec/port"/>
        <file category="include" name="components/codec/port/cs42888/"/>
        <file category="include" name="components/codec/port/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="cs42448_adapter" Cversion="2.2.1" condition="component.cs42448_adapter.condition_id">
      <description>Component cs42448 adapter for single codec</description>
      <files>
        <file category="sourceC" name="components/codec/port/cs42448/fsl_codec_cs42448_adapter.c" projectpath="codec/port/cs42448"/>
        <file category="header" name="components/codec/port/cs42448/fsl_codec_cs42448_adapter.h" projectpath="codec/port/cs42448"/>
        <file category="header" name="components/codec/port/fsl_codec_adapter.h" projectpath="codec/port"/>
        <file category="include" name="components/codec/port/cs42448/"/>
        <file category="include" name="components/codec/port/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="tfa9xxx_adapter" Cversion="2.2.0" condition="component.tfa9xxx_adapter.condition_id">
      <description>Component tfa9xxx adapter for single codec</description>
      <files>
        <file category="sourceC" name="components/codec/port/tfa9xxx/fsl_codec_tfa9xxx_adapter.c" projectpath="codec/port/tfa9xxx"/>
        <file category="header" name="components/codec/port/tfa9xxx/fsl_codec_tfa9xxx_adapter.h" projectpath="codec/port/tfa9xxx"/>
        <file category="header" name="components/codec/port/fsl_codec_adapter.h" projectpath="codec/port"/>
        <file category="include" name="components/codec/port/tfa9xxx/"/>
        <file category="include" name="components/codec/port/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="codec_i2c" Cversion="2.1.0" condition="component.codec_i2c.condition_id">
      <description>Component codec_i2c</description>
      <RTE_Components_h>
#ifndef SDK_I2C_BASED_COMPONENT_USED
#define SDK_I2C_BASED_COMPONENT_USED 1
#endif
</RTE_Components_h>
      <files>
        <file category="header" name="components/codec/i2c/fsl_codec_i2c.h" projectpath="codec"/>
        <file category="sourceC" name="components/codec/i2c/fsl_codec_i2c.c" projectpath="codec"/>
        <file category="include" name="components/codec/i2c/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="lpc_crc_adapter" Cversion="1.0.0" condition="component.lpc_crc_adapter.condition_id">
      <description>Component lpc_crc_adapter</description>
      <files>
        <file category="header" name="components/crc/fsl_adapter_crc.h" projectpath="component/crc"/>
        <file category="sourceC" name="components/crc/fsl_adapter_lpc_crc.c" projectpath="component/crc"/>
        <file category="include" name="components/crc/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="software_crc_adapter" Cversion="1.0.0" condition="component.software_crc_adapter.condition_id">
      <description>Component software_crc_adapter</description>
      <files>
        <file category="header" name="components/crc/fsl_adapter_crc.h" projectpath="component/crc"/>
        <file category="sourceC" name="components/crc/fsl_adapter_software_crc.c" projectpath="component/crc"/>
        <file category="include" name="components/crc/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="cs42448" Cversion="2.0.1" condition="driver.cs42448.condition_id">
      <description>Driver cs42448</description>
      <RTE_Components_h>
#ifndef SDK_I2C_BASED_COMPONENT_USED
#define SDK_I2C_BASED_COMPONENT_USED 1
#endif
#ifndef CODEC_CS42448_ENABLE
#define CODEC_CS42448_ENABLE 
#endif
</RTE_Components_h>
      <files>
        <file category="header" name="components/codec/cs42448/fsl_cs42448.h" projectpath="codec"/>
        <file category="sourceC" name="components/codec/cs42448/fsl_cs42448.c" projectpath="codec"/>
        <file category="include" name="components/codec/cs42448/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="cs42888" Cversion="2.1.3" condition="driver.cs42888.condition_id">
      <description>Driver cs42888</description>
      <RTE_Components_h>
#ifndef SDK_I2C_BASED_COMPONENT_USED
#define SDK_I2C_BASED_COMPONENT_USED 1
#endif
#ifndef CODEC_CS42888_ENABLE
#define CODEC_CS42888_ENABLE 
#endif
</RTE_Components_h>
      <files>
        <file category="header" name="components/codec/cs42888/fsl_cs42888.h" projectpath="codec"/>
        <file category="sourceC" name="components/codec/cs42888/fsl_cs42888.c" projectpath="codec"/>
        <file category="include" name="components/codec/cs42888/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="ft6x06" Cversion="1.0.0" condition="driver.ft6x06.condition_id">
      <description>Driver ft6x06</description>
      <files>
        <file category="header" name="components/ft6x06/fsl_ft6x06.h" projectpath="touchpanel"/>
        <file category="sourceC" name="components/ft6x06/fsl_ft6x06.c" projectpath="touchpanel"/>
        <file category="include" name="components/ft6x06/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="fxos8700cq" Cversion="1.0.0" condition="driver.fxos8700cq.condition_id">
      <description>Driver fxos8700cq</description>
      <files>
        <file category="header" name="components/fxos8700cq/fsl_fxos.h" projectpath="accel"/>
        <file category="sourceC" name="components/fxos8700cq/fsl_fxos.c" projectpath="accel"/>
        <file category="include" name="components/fxos8700cq/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="lpc_gpio_adapter" Cversion="1.0.0" condition="component.lpc_gpio_adapter.condition_id">
      <description>Component lpc_gpio_adapter</description>
      <files>
        <file category="header" name="components/gpio/fsl_adapter_gpio.h" projectpath="component/gpio"/>
        <file category="sourceC" name="components/gpio/fsl_adapter_lpc_gpio.c" projectpath="component/gpio"/>
        <file category="include" name="components/gpio/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="rt_gpio_adapter" Cversion="1.0.0" condition="component.rt_gpio_adapter.condition_id">
      <description>Component rt_gpio_adapter</description>
      <files>
        <file category="header" name="components/gpio/fsl_adapter_gpio.h" projectpath="component/gpio"/>
        <file category="sourceC" name="components/gpio/fsl_adapter_rt_gpio.c" projectpath="component/gpio"/>
        <file category="include" name="components/gpio/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="flexcomm_i2c_adapter" Cversion="1.0.0" condition="component.flexcomm_i2c_adapter.condition_id">
      <description>Component flexcomm_i2c_adapter</description>
      <files>
        <file category="header" name="components/i2c/fsl_adapter_i2c.h" projectpath="component/i2c"/>
        <file category="sourceC" name="components/i2c/fsl_adapter_flexcomm_i2c.c" projectpath="component/i2c"/>
        <file category="include" name="components/i2c/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="i3c_adapter" Cversion="1.0.0" condition="component.i3c_adapter.condition_id">
      <description>Component i3c_adapter</description>
      <files>
        <file category="header" name="components/i2c/fsl_adapter_i2c.h" projectpath="component/i2c"/>
        <file category="sourceC" name="components/i2c/fsl_adapter_i3c.c" projectpath="component/i2c"/>
        <file category="include" name="components/i2c/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="i3c_bus" Cversion="1.0.1" condition="component.i3c_bus.condition_id">
      <description>Component i3c_bus</description>
      <files>
        <file category="header" name="components/i3c_bus/fsl_component_i3c.h" projectpath="component/i3c_bus"/>
        <file category="sourceC" name="components/i3c_bus/fsl_component_i3c.c" projectpath="component/i3c_bus"/>
        <file category="include" name="components/i3c_bus/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="i3c_bus_adapter" Cversion="1.0.2" condition="component.i3c_bus_adapter.condition_id">
      <description>Component i3c_bus_adapter</description>
      <files>
        <file category="header" name="components/i3c_bus/fsl_component_i3c_adapter.h" projectpath="component/i3c_bus"/>
        <file category="sourceC" name="components/i3c_bus/fsl_component_i3c_adapter.c" projectpath="component/i3c_bus"/>
        <file category="include" name="components/i3c_bus/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="ili9341" Cversion="1.0.2" condition="driver.ili9341.condition_id">
      <description>Driver ili9341</description>
      <files>
        <file category="header" name="components/ili9341/fsl_ili9341.h" projectpath="lcd"/>
        <file category="sourceC" name="components/ili9341/fsl_ili9341.c" projectpath="lcd"/>
        <file category="include" name="components/ili9341/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="adapter_rt685evk" Cversion="1.0.0" condition="component.flexspi_nor_flash_adapter_rt685evk.condition_id">
      <description>Component flexspi_nor_flash_adapter_rt685evk</description>
      <files>
        <file category="sourceC" name="components/internal_flash/octal_flash/fsl_adapter_flexspi_nor_flash.c" projectpath="component/internal_flash/octal_flash"/>
        <file category="header" name="components/internal_flash/fsl_adapter_flash.h" projectpath="component/internal_flash"/>
        <file category="include" name="components/internal_flash/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="led" Cversion="1.0.0" condition="component.led.condition_id">
      <description>Component led</description>
      <files>
        <file category="header" name="components/led/fsl_component_led.h" projectpath="component/led"/>
        <file category="sourceC" name="components/led/fsl_component_led.c" projectpath="component/led"/>
        <file category="include" name="components/led/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="lists" Cversion="1.0.0" condition="component.lists.condition_id">
      <description>Component lists</description>
      <files>
        <file category="header" name="components/lists/fsl_component_generic_list.h" projectpath="component/lists"/>
        <file category="sourceC" name="components/lists/fsl_component_generic_list.c" projectpath="component/lists"/>
        <file category="include" name="components/lists/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="log" Cversion="1.0.0" condition="component.log.condition_id">
      <description>Component log</description>
      <files>
        <file category="header" name="components/log/fsl_component_log.h" projectpath="component/log"/>
        <file category="header" name="components/log/fsl_component_log_config.h" projectpath="component/log"/>
        <file category="sourceC" name="components/log/fsl_component_log.c" projectpath="component/log"/>
        <file category="include" name="components/log/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="debugconsole" Cversion="1.0.0" condition="component.log.backend.debugconsole.condition_id">
      <description>Component log backend debug console</description>
      <files>
        <file category="sourceC" name="components/log/fsl_component_log_backend_debugconsole.c" projectpath="component/log"/>
        <file category="header" name="components/log/fsl_component_log_backend_debugconsole.h" projectpath="component/log"/>
        <file category="include" name="components/log/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="debugconsole_lite" Cversion="1.0.0" condition="component.log.backend.debugconsole_lite.condition_id">
      <description>Component log backend debug console lite</description>
      <files>
        <file category="sourceC" name="components/log/fsl_component_log_backend_debugconsole.c" projectpath="component/log"/>
        <file category="header" name="components/log/fsl_component_log_backend_debugconsole.h" projectpath="component/log"/>
        <file category="include" name="components/log/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="ringbuffer" Cversion="1.0.0" condition="component.log.backend.ringbuffer.condition_id">
      <description>Component log backend ring buffer</description>
      <files>
        <file category="sourceC" name="components/log/fsl_component_log_backend_ringbuffer.c" projectpath="component/log"/>
        <file category="header" name="components/log/fsl_component_log_backend_ringbuffer.h" projectpath="component/log"/>
        <file category="include" name="components/log/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="mem_manager" Cversion="1.0.0" condition="component.mem_manager.condition_id">
      <description>Component mem_manager</description>
      <files>
        <file category="header" name="components/mem_manager/fsl_component_mem_manager.h" projectpath="component/mem_manager"/>
        <file category="sourceC" name="components/mem_manager/fsl_component_mem_manager.c" projectpath="component/mem_manager"/>
        <file category="include" name="components/mem_manager/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="mem_manager_light" Cversion="1.0.0" condition="component.mem_manager_light.condition_id">
      <description>Component mem_manager_light</description>
      <files>
        <file category="header" name="components/mem_manager/fsl_component_mem_manager.h" projectpath="component/mem_manager"/>
        <file category="sourceC" name="components/mem_manager/fsl_component_mem_manager_light.c" projectpath="component/mem_manager"/>
        <file category="include" name="components/mem_manager/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="messaging" Cversion="1.0.0" condition="component.messaging.condition_id">
      <description>Component messaging</description>
      <files>
        <file category="header" name="components/messaging/fsl_component_messaging.h" projectpath="component/messaging"/>
        <file category="sourceC" name="components/messaging/fsl_component_messaging.c" projectpath="component/messaging"/>
        <file category="include" name="components/messaging/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="mflash_file" Cversion="1.0.0" condition="component.mflash_file.condition_id">
      <description>mflash file</description>
      <files>
        <file category="header" name="components/flash/mflash/mflash_file.h" projectpath="flash/mflash"/>
        <file category="sourceC" name="components/flash/mflash/mflash_file.c" projectpath="flash/mflash"/>
        <file category="doc" name="components/flash/mflash/readme.txt" projectpath="flash/mflash"/>
        <file category="include" name="components/flash/mflash/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="mflash_dummy" Cversion="1.0.0" condition="component.mflash_dummy.condition_id">
      <description>dummy file for overwriting mflash when dowloading</description>
      <files>
        <file category="sourceC" name="components/flash/mflash/mflash_dummy.c" projectpath="flash/mflash"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="rt685" Cversion="1.0.0" condition="component.mflash.rt685.condition_id">
      <description>mflash rt685</description>
      <RTE_Components_h>
#ifndef MFLASH_FILE_BASEADDR
#define MFLASH_FILE_BASEADDR 7340032
#endif
</RTE_Components_h>
      <files>
        <file category="header" name="components/flash/mflash/mimxrt685/mflash_drv.h" projectpath="flash/mflash/mimxrt685"/>
        <file category="sourceC" name="components/flash/mflash/mimxrt685/mflash_drv.c" projectpath="flash/mflash/mimxrt685"/>
        <file category="include" name="components/flash/mflash/mimxrt685/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="mimxrt685audevk" Cversion="1.0.0" condition="component.mflash.mimxrt685audevk.condition_id">
      <description>mflash mimxrt685audevk</description>
      <RTE_Components_h>
#ifndef MFLASH_FILE_BASEADDR
#define MFLASH_FILE_BASEADDR 7340032
#endif
</RTE_Components_h>
      <files>
        <file category="header" name="components/flash/mflash/mimxrt685audevk/mflash_drv.h" projectpath="flash/mflash/mimxrt685audevk"/>
        <file category="sourceC" name="components/flash/mflash/mimxrt685audevk/mflash_drv.c" projectpath="flash/mflash/mimxrt685audevk"/>
        <file category="include" name="components/flash/mflash/mimxrt685audevk/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="mma8652fc" Cversion="1.0.0" condition="driver.mma8652fc.condition_id">
      <description>Driver mma8652fc</description>
      <files>
        <file category="header" name="components/mma8652fc/fsl_mma.h" projectpath="accel"/>
        <file category="sourceC" name="components/mma8652fc/fsl_mma.c" projectpath="accel"/>
        <file category="include" name="components/mma8652fc/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="mpi_loader" Cversion="1.0.0" condition="driver.mpi_loader.condition_id">
      <description>Driver mpi_loader</description>
      <files>
        <file category="header" name="components/mpi_loader/fsl_mpi_loader.h" projectpath="mpi_loader"/>
        <file category="sourceC" name="components/mpi_loader/fsl_mpi_loader.c" projectpath="mpi_loader"/>
        <file category="include" name="components/mpi_loader/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="panic" Cversion="1.0.0" condition="component.panic.condition_id">
      <description>Component panic</description>
      <files>
        <file category="header" name="components/panic/fsl_component_panic.h" projectpath="component/panic"/>
        <file category="sourceC" name="components/panic/fsl_component_panic.c" projectpath="component/panic"/>
        <file category="include" name="components/panic/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="pwm_ctimer_adapter" Cversion="1.0.0" condition="component.pwm_ctimer_adapter.condition_id">
      <description>Component pwm_ctimer_adapter</description>
      <files>
        <file category="header" name="components/pwm/fsl_adapter_pwm.h" projectpath="component/pwm"/>
        <file category="sourceC" name="components/pwm/fsl_adapter_pwm_ctimer.c" projectpath="component/pwm"/>
        <file category="include" name="components/pwm/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="reset_adapter" Cversion="1.0.0" condition="component.reset_adapter.condition_id">
      <description>Component reset_adapter</description>
      <files>
        <file category="header" name="components/reset/fsl_adapter_reset.h" projectpath="component/reset"/>
        <file category="sourceC" name="components/reset/fsl_adapter_reset.c" projectpath="component/reset"/>
        <file category="include" name="components/reset/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="trng_adapter" Cversion="1.0.0" condition="component.trng_adapter.condition_id">
      <description>Component trng_adapter</description>
      <files>
        <file category="header" name="components/rng/fsl_adapter_rng.h" projectpath="component/rng"/>
        <file category="sourceC" name="components/rng/fsl_adapter_trng.c" projectpath="component/rng"/>
        <file category="include" name="components/rng/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="software_rng_adapter" Cversion="1.0.0" condition="component.software_rng_adapter.condition_id">
      <description>Component software_rng_adapter</description>
      <files>
        <file category="header" name="components/rng/fsl_adapter_rng.h" projectpath="component/rng"/>
        <file category="sourceC" name="components/rng/fsl_adapter_software_rng.c" projectpath="component/rng"/>
        <file category="include" name="components/rng/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="lpcrtc" Cversion="1.0.0" condition="component.lpcrtc.condition_id">
      <description>Component lpcrtc</description>
      <RTE_Components_h>
#ifndef RTC_LEGACY_FUNCTION_PROTOTYPE
#define RTC_LEGACY_FUNCTION_PROTOTYPE 1
#endif
</RTE_Components_h>
      <files>
        <file category="header" name="components/rtc/fsl_adapter_rtc.h" projectpath="component/rtc"/>
        <file category="sourceC" name="components/rtc/fsl_adapter_lpcrtc.c" projectpath="component/rtc"/>
        <file category="include" name="components/rtc/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Utilities" Csub="serial_manager" Cversion="1.0.1" condition="component.serial_manager.condition_id">
      <description>Component serial_manager</description>
      <files>
        <file category="header" name="components/serial_manager/fsl_component_serial_manager.h" projectpath="component/serial_manager"/>
        <file category="header" name="components/serial_manager/fsl_component_serial_port_internal.h" projectpath="component/serial_manager"/>
        <file category="sourceC" name="components/serial_manager/fsl_component_serial_manager.c" projectpath="component/serial_manager"/>
        <file category="include" name="components/serial_manager/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Utilities" Csub="serial_manager_spi" Cversion="1.0.0" condition="component.serial_manager_spi.condition_id">
      <description>Component serial_manager_spi</description>
      <RTE_Components_h>
#ifndef SERIAL_PORT_TYPE_SPI
#define SERIAL_PORT_TYPE_SPI 1
#endif
#ifndef SERIAL_PORT_TYPE_SPI_MASTER
#define SERIAL_PORT_TYPE_SPI_MASTER 1
#endif
#ifndef SERIAL_PORT_TYPE_SPI_SLAVE
#define SERIAL_PORT_TYPE_SPI_SLAVE 1
#endif
#ifndef SERIAL_MANAGER_NON_BLOCKING_MODE
#define SERIAL_MANAGER_NON_BLOCKING_MODE 1
#endif
</RTE_Components_h>
      <files>
        <file category="header" name="components/serial_manager/fsl_component_serial_port_spi.h" projectpath="component/serial_manager"/>
        <file category="sourceC" name="components/serial_manager/fsl_component_serial_port_spi.c" projectpath="component/serial_manager"/>
        <file category="include" name="components/serial_manager/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Utilities" Csub="serial_manager_virtual" Cversion="1.0.0" condition="component.serial_manager_virtual.condition_id">
      <description>Component serial_manager_virtual</description>
      <RTE_Components_h>
#ifndef SERIAL_PORT_TYPE_VIRTUAL
#define SERIAL_PORT_TYPE_VIRTUAL 1
#endif
#ifndef DEBUG_CONSOLE_TRANSFER_NON_BLOCKING
#define DEBUG_CONSOLE_TRANSFER_NON_BLOCKING 
#endif
</RTE_Components_h>
      <files>
        <file category="header" name="components/serial_manager/fsl_component_serial_port_virtual.h" projectpath="component/serial_manager"/>
        <file category="sourceC" name="components/serial_manager/fsl_component_serial_port_virtual.c" projectpath="component/serial_manager"/>
        <file category="include" name="components/serial_manager/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Utilities" Csub="serial_manager_swo" Cversion="1.0.0" condition="component.serial_manager_swo.condition_id">
      <description>Component serial_manager_swo</description>
      <RTE_Components_h>
#ifndef SERIAL_PORT_TYPE_SWO
#define SERIAL_PORT_TYPE_SWO 1
#endif
</RTE_Components_h>
      <files>
        <file category="header" name="components/serial_manager/fsl_component_serial_port_swo.h" projectpath="component/serial_manager"/>
        <file category="sourceC" name="components/serial_manager/fsl_component_serial_port_swo.c" projectpath="component/serial_manager"/>
        <file category="include" name="components/serial_manager/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Utilities" Csub="shell" Cversion="1.0.0" condition="utility.shell.condition_id">
      <description>Utility shell</description>
      <RTE_Components_h>
#ifndef DEBUG_CONSOLE_RX_ENABLE
#define DEBUG_CONSOLE_RX_ENABLE 0
#endif
</RTE_Components_h>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/utilities/fsl_shell.c" projectpath="utilities"/>
        <file category="header" name="devices/MIMXRT685S/utilities/fsl_shell.h" projectpath="utilities"/>
        <file category="include" name="devices/MIMXRT685S/utilities/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="flexcomm_spi_adapter" Cversion="1.0.0" condition="component.flexcomm_spi_adapter.condition_id">
      <description>Component flexcomm_spi_adapter</description>
      <files>
        <file category="header" name="components/spi/fsl_adapter_spi.h" projectpath="component/spi"/>
        <file category="sourceC" name="components/spi/fsl_adapter_flexcomm_spi.c" projectpath="component/spi"/>
        <file category="include" name="components/spi/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="sx1502" Cversion="2.0.0" condition="driver.sx1502.condition_id">
      <description>Driver sx1502</description>
      <files>
        <file category="header" name="components/sx1502/fsl_sx1502.h" projectpath="component/sx1502"/>
        <file category="sourceC" name="components/sx1502/fsl_sx1502.c" projectpath="component/sx1502"/>
        <file category="include" name="components/sx1502/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="tfa9xxx" Cversion="2.1.0" condition="driver.tfa9xxx.condition_id">
      <description>Driver tfa9xxx</description>
      <RTE_Components_h>
#ifndef SDK_I2C_BASED_COMPONENT_USED
#define SDK_I2C_BASED_COMPONENT_USED 1
#endif
#ifndef BOARD_USE_CODEC
#define BOARD_USE_CODEC 1
#endif
#ifndef CODEC_TFA9XXX_ENABLE
#define CODEC_TFA9XXX_ENABLE 
#endif
</RTE_Components_h>
      <files>
        <file category="header" name="components/codec/tfa9xxx/tfa_config_TFA9892N1.h" projectpath="codec/tfa9xxx"/>
        <file category="header" name="components/codec/tfa9xxx/tfa_config_TFA9894N1.h" projectpath="codec/tfa9xxx"/>
        <file category="header" name="components/codec/tfa9xxx/tfa_config_TFA9894N2.h" projectpath="codec/tfa9xxx"/>
        <file category="sourceC" name="components/codec/tfa9xxx/fsl_tfa9xxx.c" projectpath="codec/tfa9xxx"/>
        <file category="header" name="components/codec/tfa9xxx/fsl_tfa9xxx.h" projectpath="codec/tfa9xxx"/>
        <file category="sourceC" name="components/codec/tfa9xxx/fsl_tfa9xxx_IMX.c" projectpath="codec/tfa9xxx"/>
        <file category="other" name="components/codec/tfa9xxx/README.md" projectpath="codec/tfa9xxx"/>
        <file category="header" name="components/codec/tfa9xxx/vas_tfa_drv/config.h" projectpath="codec/tfa9xxx/vas_tfa_drv"/>
        <file category="sourceC" name="components/codec/tfa9xxx/vas_tfa_drv/tfa2_container.c" projectpath="codec/tfa9xxx/vas_tfa_drv"/>
        <file category="header" name="components/codec/tfa9xxx/vas_tfa_drv/tfa2_container.h" projectpath="codec/tfa9xxx/vas_tfa_drv"/>
        <file category="sourceC" name="components/codec/tfa9xxx/vas_tfa_drv/tfa2_dev.c" projectpath="codec/tfa9xxx/vas_tfa_drv"/>
        <file category="header" name="components/codec/tfa9xxx/vas_tfa_drv/tfa2_dev.h" projectpath="codec/tfa9xxx/vas_tfa_drv"/>
        <file category="header" name="components/codec/tfa9xxx/vas_tfa_drv/tfa2_dsp_fw.h" projectpath="codec/tfa9xxx/vas_tfa_drv"/>
        <file category="sourceC" name="components/codec/tfa9xxx/vas_tfa_drv/tfa2_haptic.c" projectpath="codec/tfa9xxx/vas_tfa_drv"/>
        <file category="header" name="components/codec/tfa9xxx/vas_tfa_drv/tfa2_haptic.h" projectpath="codec/tfa9xxx/vas_tfa_drv"/>
        <file category="sourceC" name="components/codec/tfa9xxx/vas_tfa_drv/tfa2_init.c" projectpath="codec/tfa9xxx/vas_tfa_drv"/>
        <file category="header" name="components/codec/tfa9xxx/vas_tfa_drv/tfa9xxx_parameters.h" projectpath="codec/tfa9xxx/vas_tfa_drv"/>
        <file category="sourceC" name="components/codec/tfa9xxx/vas_tfa_drv/tfa_container_crc32.c" projectpath="codec/tfa9xxx/vas_tfa_drv"/>
        <file category="header" name="components/codec/tfa9xxx/vas_tfa_drv/tfa_haptic_fw_defs.h" projectpath="codec/tfa9xxx/vas_tfa_drv"/>
        <file category="include" name="components/codec/tfa9xxx/"/>
        <file category="include" name="components/codec/tfa9xxx/vas_tfa_drv/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="tfa9xxx_hal" Cversion="2.1.0" condition="driver.tfa9xxx_hal.condition_id">
      <description>Driver tfa9xxx_hal</description>
      <files>
        <file category="sourceC" name="components/codec/tfa9xxx/tfa_device_hal.c" projectpath="codec/tfa9xxx"/>
        <file category="header" name="components/codec/tfa9xxx/tfa_device_hal.h" projectpath="codec/tfa9xxx"/>
        <file category="include" name="components/codec/tfa9xxx/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="ctimer_adapter" Cversion="1.0.0" condition="component.ctimer_adapter.condition_id">
      <description>Component ctimer_adapter</description>
      <files>
        <file category="header" name="components/timer/fsl_adapter_timer.h" projectpath="component/timer"/>
        <file category="sourceC" name="components/timer/fsl_adapter_ctimer.c" projectpath="component/timer"/>
        <file category="include" name="components/timer/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="mrt_adapter" Cversion="1.0.0" condition="component.mrt_adapter.condition_id">
      <description>Component mrt_adapter</description>
      <files>
        <file category="header" name="components/timer/fsl_adapter_timer.h" projectpath="component/timer"/>
        <file category="sourceC" name="components/timer/fsl_adapter_mrt.c" projectpath="component/timer"/>
        <file category="include" name="components/timer/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="ostimer_adapter" Cversion="1.0.0" condition="component.ostimer_adapter.condition_id">
      <description>Component ostimer_adapter</description>
      <files>
        <file category="header" name="components/timer/fsl_adapter_timer.h" projectpath="component/timer"/>
        <file category="sourceC" name="components/timer/fsl_adapter_ostimer.c" projectpath="component/timer"/>
        <file category="include" name="components/timer/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="timer_manager" Cversion="1.0.0" condition="component.timer_manager.condition_id">
      <description>Component timer_manager</description>
      <files>
        <file category="header" name="components/timer_manager/fsl_component_timer_manager.h" projectpath="component/timer_manager"/>
        <file category="sourceC" name="components/timer_manager/fsl_component_timer_manager.c" projectpath="component/timer_manager"/>
        <file category="include" name="components/timer_manager/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="usart_adapter" Cversion="1.0.0" condition="component.usart_adapter.condition_id">
      <description>Component usart_adapter</description>
      <files>
        <file category="header" name="components/uart/fsl_adapter_uart.h" projectpath="component/uart"/>
        <file category="sourceC" name="components/uart/fsl_adapter_usart.c" projectpath="component/uart"/>
        <file category="include" name="components/uart/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="usart_dma_adapter" Cversion="1.0.0" condition="component.usart_dma_adapter.condition_id">
      <description>Component usart_dma_adapter</description>
      <RTE_Components_h>
#ifndef HAL_UART_DMA_ENABLE
#define HAL_UART_DMA_ENABLE 1
#endif
</RTE_Components_h>
      <files>
        <file category="header" name="components/uart/fsl_adapter_uart.h" projectpath="component/uart"/>
        <file category="sourceC" name="components/uart/fsl_adapter_usart.c" projectpath="component/uart"/>
        <file category="include" name="components/uart/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="wm8904" Cversion="2.5.1" condition="driver.wm8904.condition_id">
      <description>Driver wm8904</description>
      <RTE_Components_h>
#ifndef SDK_I2C_BASED_COMPONENT_USED
#define SDK_I2C_BASED_COMPONENT_USED 1
#endif
#ifndef BOARD_USE_CODEC
#define BOARD_USE_CODEC 1
#endif
#ifndef CODEC_WM8904_ENABLE
#define CODEC_WM8904_ENABLE 
#endif
</RTE_Components_h>
      <files>
        <file category="header" name="components/codec/wm8904/fsl_wm8904.h" projectpath="codec"/>
        <file category="sourceC" name="components/codec/wm8904/fsl_wm8904.c" projectpath="codec"/>
        <file category="include" name="components/codec/wm8904/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="acmp" Cversion="2.0.6" condition="driver.acmp.condition_id">
      <description>ACMP Driver</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_acmp.c" projectpath="drivers"/>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_acmp.h" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="flexspi" Cversion="2.5.0" condition="driver.flexspi.condition_id">
      <description>FLEXSPI Driver</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_flexspi.c" projectpath="drivers"/>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_flexspi.h" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="lpadc" Cversion="2.6.2" condition="driver.lpadc.condition_id">
      <description>LPADC Driver</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_lpadc.c" projectpath="drivers"/>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_lpadc.h" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="mu" Cversion="2.1.2" condition="driver.mu.condition_id">
      <description>MU Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_mu.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_mu.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="otfad" Cversion="2.1.4" condition="driver.otfad.condition_id">
      <description>OTFAD Driver</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_otfad.c" projectpath="drivers"/>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_otfad.h" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="sema42" Cversion="2.0.3" condition="driver.sema42.condition_id">
      <description>SEMA42 Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_sema42.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_sema42.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="sdhc" Cversion="2.8.2" condition="driver.usdhc.condition_id">
      <description>USDHC Driver</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_usdhc.c" projectpath="drivers"/>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_usdhc.h" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="cache" Cversion="2.0.6" condition="driver.cache_cache64.condition_id">
      <description>CACHE Driver</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_cache.c" projectpath="drivers"/>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_cache.h" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="casper" Cversion="2.2.4" condition="driver.casper.condition_id">
      <description>CASPER Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_casper.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_casper.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="lpc_crc" Cversion="2.1.1" condition="driver.lpc_crc.condition_id">
      <description>CRC Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_crc.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_crc.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="ctimer" Cversion="2.3.1" condition="driver.ctimer.condition_id">
      <description>CTimer Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_ctimer.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_ctimer.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="dmic" Cversion="2.3.1" condition="driver.dmic.condition_id">
      <description>DMIC Driver</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_dmic.c" projectpath="drivers"/>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_dmic.h" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="flexcomm" Cversion="2.0.2" condition="driver.flexcomm.condition_id">
      <description>FLEXCOMM Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_flexcomm.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_flexcomm.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="fmeas" Cversion="2.1.1" condition="driver.fmeas.condition_id">
      <description>FMEAS Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_fmeas.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_fmeas.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="hashcrypt" Cversion="2.2.11" condition="driver.hashcrypt.condition_id">
      <description>Hashcrypt Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_hashcrypt.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_hashcrypt.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="i2c" Cversion="2.3.3" condition="driver.flexcomm_i2c.condition_id">
      <description>I2C Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_i2c.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_i2c.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="flexcomm_i2s" Cversion="2.3.2" condition="driver.flexcomm_i2s.condition_id">
      <description>I2S Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_i2s.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_i2s.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="i3c" Cversion="2.10.3" condition="driver.i3c.condition_id">
      <description>I3C Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_i3c.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_i3c.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="inputmux" Cversion="2.0.5" condition="driver.inputmux.condition_id">
      <description>INPUTMUX Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_inputmux.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_inputmux.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="dma" Cversion="2.5.0" condition="driver.lpc_dma.condition_id">
      <description>DMA Driver</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_dma.c" projectpath="drivers"/>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_dma.h" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="gpio" Cversion="2.1.7" condition="driver.lpc_gpio.condition_id">
      <description>GPIO Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_gpio.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_gpio.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="iopctl" Cversion="2.0.0" condition="driver.lpc_iopctl.condition_id">
      <description>iopctl Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_iopctl.h" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="mrt" Cversion="2.0.4" condition="driver.mrt.condition_id">
      <description>MRT Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_mrt.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_mrt.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="ostimer" Cversion="2.2.0" condition="driver.ostimer.condition_id">
      <description>OSTimer Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_ostimer.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_ostimer.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="pint" Cversion="2.1.11" condition="driver.pint.condition_id">
      <description>PINT Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_pint.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_pint.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="powerquad" Cversion="2.1.0" condition="driver.powerquad.condition_id">
      <description>POWERQUAD Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_powerquad_data.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_powerquad_data.c" projectpath="drivers"/>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_powerquad.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_powerquad_basic.c" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_powerquad_math.c" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_powerquad_matrix.c" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_powerquad_filter.c" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_powerquad_transform.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="PUF" Cversion="2.1.6" condition="driver.puf.condition_id">
      <description>PUF Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_puf.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_puf.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="reset" Cversion="2.1.2" condition="driver.reset.condition_id">
      <description>Reset Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_reset.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_reset.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="lpc_rtc" Cversion="2.1.3" condition="driver.lpc_rtc.condition_id">
      <description>RTC Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_rtc.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_rtc.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="sctimer" Cversion="2.4.9" condition="driver.sctimer.condition_id">
      <description>SCT Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_sctimer.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_sctimer.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="spi" Cversion="2.3.1" condition="driver.flexcomm_spi.condition_id">
      <description>SPI Driver</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_spi.c" projectpath="drivers"/>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_spi.h" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="trng" Cversion="2.0.15" condition="driver.trng.condition_id">
      <description>TRNG Driver</description>
      <files>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_trng.c" projectpath="drivers"/>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_trng.h" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="usart" Cversion="2.8.2" condition="driver.flexcomm_usart.condition_id">
      <description>USART Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_usart.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_usart.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="wwdt" Cversion="2.1.9" condition="driver.wwdt.condition_id">
      <description>WWDT Driver</description>
      <files>
        <file category="header" name="devices/MIMXRT685S/drivers/fsl_wwdt.h" projectpath="drivers"/>
        <file category="sourceC" name="devices/MIMXRT685S/drivers/fsl_wwdt.c" projectpath="drivers"/>
        <file category="include" name="devices/MIMXRT685S/drivers/"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="SDK Drivers" Csub="evkmimxrt685_flash_config" Cversion="2.0.0" condition="driver.flash_config.evkmimxrt685.condition_id">
      <description>flash config block</description>
      <RTE_Components_h>
#ifndef BOOT_HEADER_ENABLE
#define BOOT_HEADER_ENABLE 1
#endif
</RTE_Components_h>
      <files>
        <file category="sourceC" name="boards/evkmimxrt685/flash_config/flash_config.c" projectpath="flash_config"/>
        <file category="header" name="boards/evkmimxrt685/flash_config/flash_config.h" projectpath="flash_config"/>
        <file category="include" name="boards/evkmimxrt685/flash_config/"/>
      </files>
    </component>
  </components>
</package>
