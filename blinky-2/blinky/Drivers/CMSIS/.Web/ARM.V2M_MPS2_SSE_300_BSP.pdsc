<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2020 ARM Limited

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 -->
 <package schemaVersion="1.2" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
  <vendor>ARM</vendor>
  <url>http://www.keil.com/pack/</url>
  <name>V2M_MPS2_SSE_300_BSP</name>
  <description>
  ARM V2M-MPS2 Board Support PACK for CoreLink SSE-300 - TrustZone enabled subsystem for embedded.
  </description>
  <releases>
    <release version="1.0.1" date="2021-10-28" deprecated="2021-10-28">
    Deprecation of MPS2 Board Support Pack for CoreLink SSE-300.
    </release>
    <release version="1.0.0" date="2020-06-19">
    First version of MPS2 Board Support Pack for CoreLink SSE-300 - TrustZone enabled subsystem including device definition.
    </release>
  </releases>
  <keywords>
    <!-- keywords for indexing -->
    <keyword>ARM</keyword>
    <keyword>Device Support</keyword>
    <keyword>Device Family Package ARM CMSDK</keyword>
    <keyword>Board Support Package for V2M-MPS2</keyword>
    <keyword>SSE-300-MPS2</keyword>
    <keyword>SSE-300</keyword>
    <keyword>Corstone-300</keyword>
  </keywords>
  <devices>
    <!-- ****************************** ARM MPS2 SSE-300 Cortex-M55  *********************** -->
    <family Dfamily="ARM Cortex M55" Dvendor="ARM:82">
      <description>
      SSE-300 for MPS2 (TrustZone enabled subsystem).
      </description>
      <book name="Documents/corstone_sse300_example_subsystem_trm_101773_0000_01_en.pdf" title ="ArmÂ® SSE-300 - Technical Reference Manual"/>
      <book name="Documents/SSE_300_Pack_User_Guide.pdf" title ="SSE-300 Pack User Guide"/>

      <!-- ITCM -->
      <memory name="IROM1" access="rwxs" start="0x10000000" size="0x00040000" startup="1" default="1"/>
      <memory name="IROM2" access="rwxn" start="0x00000000" size="0x00040000" startup="0" default="1" alias="IROM1"/>
      <!-- SSRAM2 -->
      <memory name="ROM1" access="rwxs" start="0x38000000" size="0x00200000" startup="0" default="1"/>
      <memory name="ROM2" access="rwxn" start="0x28000000" size="0x00200000" startup="0" default="1" alias="ROM1"/>
      <!-- SSRAM3 -->
      <memory name="ROM3" access="rwxs" start="0x38200000" size="0x00200000" startup="0" default="1"/>
      <memory name="ROM4" access="rwxn" start="0x28200000" size="0x00200000" startup="0" default="1" alias="ROM3"/>
      <!-- DTCM -->
      <memory name="IRAM1" access="rwxs" start="0x30000000" size="0x00040000" startup="0" default="1"/>
      <memory name="IRAM2" access="rwxn" start="0x20000000" size="0x00040000" startup="0" default="1" alias="IRAM1"/>
      <!-- VM0 -->
      <memory name="IRAM3" access="rwxs" start="0x31000000" size="0x00040000" startup="0" default="1"/>
      <memory name="IRAM4" access="rwxn" start="0x21000000" size="0x00040000" startup="0" default="1" alias="IRAM3"/>
      <!-- VM1 -->
      <memory name="IRAM5" access="rwxs" start="0x31040000" size="0x00040000" startup="0" default="1"/>
      <memory name="IRAM6" access="rwxn" start="0x21040000" size="0x00040000" startup="0" default="1" alias="IRAM5"/>

      <debugvars configfile="Device/Debug/CM55.dbgconf">
        // Debug Authentication Variables
        __var DAuthFixed  = 0x1;     // 1 - Use fixed authentication, 0 - Ask for user input
        __var DAuthConfig = 0xF;     // Authentication Value (Security Control Block)
        // Bit 0 - Invasive Debug (Hardwired to 1)
        // Bit 1 - Non-Invasive Debug (Hardwired to 1)
        // Bit 2 - Invasive Secure Debug
        // Bit 3 - Non-Invasive Secure Debug
      </debugvars>

      <sequences>
        <!-- Local processor reset not avaialable in ARMv8-M -->
        <sequence name="ResetProcessor" disable="true"/>

        <sequence name="DebugDeviceUnlock">
          <block>
            __var DAuthUserInput  = 0;
            __var DAUTHSTATUS_Val = 0;
            __var DHCSR_Val       = 0;
            __var SecureDebugEna   = 0;
            __var SecureDebugAvail = 0;
            __var DAuthVal         = 0;
            __var SECDBGSTAT_Val   = 0;
            __var SECDBGSET_Val    = 0;
            __var SECDBGCLR_Val    = 0;
            __var RESET_MASK       = 0;

            DAUTHSTATUS_Val  = Read32(0xE000EFB8);    // struct CoreDebug_Type of v8m/v8.1m
            DHCSR_Val        = Read32(0xE000EDF0);    // struct CoreDebug_Type of v8m/v8.1m
            SecureDebugAvail = (DAUTHSTATUS_Val &amp; 0x00000020) ? 1 : 0;  // SID: Secure Invasive Debug Implemented

            RESET_MASK  = Read32(0x58021104);  // SSE-300 System Control Element - System Control register block - RESET_MASK register
            RESET_MASK |= (1 &lt;&lt; 4) | (1 &lt;&lt; 6);   // RESET_MASK: Enable SYSRESETREQ0_EN and LOCKUP0_EN
            Write32(0x58021104, RESET_MASK);
          </block>

          <control if="SecureDebugAvail" info="Configure Debug Authentication if Security Extensions available">
            <block>
              SecureDebugEna = ((DHCSR_Val &amp; 0x00100000) || ((DAUTHSTATUS_Val &amp; 0x00000030) == 0x00000030)) ? 1 : 0;
            </block>

            <control if="DAuthFixed">
              <block>
                // Debug Authentication as per Debug Configuration File
                DAuthVal = DAuthConfig;
              </block>
            </control>
            <control if="DAuthFixed == 0">
              <block>
                DAuthUserInput = Query(1, "Enable Secure Debug?", 3);
              </block>
              <control if="DAuthUserInput == 3">
                <block>
                  // Enable Secure Debug
                  DAuthVal = 0xF;
                </block>
              </control>
              <control if="DAuthUserInput != 3">
                <block>
                  // Disable Secure Debug
                  DAuthVal = 0x3;
                </block>
              </control>
            </control>

            <control if="SecureDebugEna">
              <block>
                // Read Secure Debug Authentication Status
                SECDBGSTAT_Val = Read32(0x58021000); // SSE-300 System Control Element - System Control register block - SECDBGSTAT register

                // Assemble SECDBGSET and SECDBGCLR Values
                SECDBGSET_Val  = 0x000000AA;                                // Use internal signals:
                                                                            // DBGEN_SEL_SET   - 1,
                                                                            // NIDEN_SEL_SET   - 1,
                                                                            // SPIDEN_SEL_SET  - 1,
                                                                            // SPNIDEN_SEL_SET - 1

                SECDBGSET_Val |=  DAuthVal &amp; 0x1;                       // DBGEN_I_SET
                SECDBGSET_Val |= (DAuthVal &amp; 0x2) &lt;&lt; 1;           // NIDEN_I_SET
                SECDBGSET_Val |= (DAuthVal &amp; 0x4) &lt;&lt; 2;           // SPIDEN_I_SET
                SECDBGSET_Val |= (DAuthVal &amp; 0x8) &lt;&lt; 3;           // SPNIDEN_I_SET

                SECDBGCLR_Val |=   (DAuthVal ^ 0x1) &amp; 0x1;              // DBGEN_I_SET
                SECDBGCLR_Val |= (((DAuthVal ^ 0x2) &amp; 0x2) &lt;&lt; 1); // NIDEN_I_SET
                SECDBGCLR_Val |= (((DAuthVal ^ 0x4) &amp; 0x4) &lt;&lt; 2); // SPIDEN_I_SET
                SECDBGCLR_Val |= (((DAuthVal ^ 0x8) &amp; 0x8) &lt;&lt; 3); // SPNIDEN_I_SET

                // Write Secure Debug Authentication Set Register
                Write32(0x58021004, SECDBGSET_Val); // SSE-300 System Control Element - System Control register block - SECDBGSTAT register

                // Write Secure Debug Authentication Clear Register
                Write32(0x58021008, SECDBGCLR_Val); // SSE-300 System Control Element - System Control register block - SECDBGSTAT register
              </block>
            </control>
            <control if="SecureDebugEna == 0">
              <control if="DAuthVal &amp; 0x4">
                <block>
                  Query(0, "Cannot configure Debug Authentication, secure debug disabled! Please reboot Board!", 1);
                </block>
              </control>
            </control>

          </control>
        </sequence>
      </sequences>


      <device Dname="SSE-300-MPS2">
        <processor Dcore="Cortex-M55" DcoreVersion="r0p0" Dfpu="FPU" Dmpu="MPU" Ddsp="DSP" Dtz="TZ" Dendian="Configurable" Dclock="25000000" />
        <debug svd="SVD/SSE300.svd" __dp="0" __ap="1"/>
        <compile header="Board/Platform/platform_description.h"/>
      </device>

    </family>
  </devices>

  <conditions>
    <condition id="ARMCC">
      <require Tcompiler="ARMCC" Toptions="AC6"/>
    </condition>

    <condition id="SSE-300-MPS2 Device">
      <description>ARM SSE-300 device and CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="SSE-300-MPS2"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
      <require Cclass="Device" Cgroup="Startup"/>
      <require condition="ARMCC"/>
    </condition>

    <condition id="SSE-300-MPS2 USART">
      <description>SSE-300-MPS2 USART Device</description>
      <require condition="SSE-300-MPS2 Device"/>
      <require Cclass="Native Driver" Cgroup="UART"/>
    </condition>

    <condition id="SSE-300-MPS2 SPI">
      <description>SSE-300-MPS2 SPI Device</description>
      <require condition="SSE-300-MPS2 Device"/>
      <require Cclass="Native Driver" Cgroup="SPI"/>
    </condition>

    <condition id="SSE-300-MPS2 MPC">
      <description>SSE-300-MPS2 MPC Device</description>
      <require condition="SSE-300-MPS2 Device"/>
      <require Cclass="Native Driver" Cgroup="MPC"/>
    </condition>

    <condition id="SSE-300-MPS2 PPC">
      <description>SSE-300-MPS2 PPC Device</description>
      <require condition="SSE-300-MPS2 Device"/>
      <require Cclass="Native Driver" Cgroup="PPC"/>
    </condition>

  </conditions>

  <components>

    <!-- SSE-300 Startup -->
    <component Cclass="Device" Cgroup="Startup" Cversion="1.0.0" condition="SSE-300-MPS2 Device">
      <description>Secure System and Startup for ARM SSE-300-MPS2 device</description>
      <files>
        <!-- device include path -->
        <file category="include" name="Device/Include/"/>
        <file category="include" name="Native_Driver/"/>
        <file category="include" name="CMSIS_Driver/Include/"/>
        <file category="include" name="Board/Platform/"/>
        <!-- Header -->
        <file category="header" name="Device/Include/region_defs.h" attr="config" version="1.0.0"/>
        <file category="header" name="Device/Include/region_limits.h" attr="config" version="1.0.0"/>
        <!-- startup / system file -->
        <file category="linkerScript" name="Device/Source/armclang/fvp_sse300_mps2_s.sct" attr="config" version="1.0.0" condition="ARMCC"/>
        <file category="source" name="Device/Source/startup_fvp_sse300_mps2.c" attr="config" version="1.0.0"/>
        <file category="source" name="Device/Source/system_core_init.c" attr="config" version="1.0.0"/>
        <!-- board definitions -->
        <file category="header" name="Board/Device_Definition/device_definition.h"/>
        <file category="source" name="Board/Device_Definition/device_definition.c"/>
        <!-- device configuration -->
        <file category="header" name="Board/Device_Definition/device_cfg.h" attr="config" version="1.0.0"/>
        <file category="header" name="CMSIS_Driver/Config/cmsis_driver_config.h" attr="config" version="1.0.0"/>
         <file category="header" name="CMSIS_Driver/Config/RTE_Device.h" attr="config" version="1.0.0"/>
      </files>
    </component>

    <component Cclass="Native Driver" Cgroup="UART" Cversion="1.0.0" condition="SSE-300-MPS2 Device">
      <description>Native UART driver for SSE-300</description>
      <files>
        <file category="source" name="Native_Driver/uart_cmsdk_drv.c"/>
        <file category="header" name="Native_Driver/uart_cmsdk_drv.h"/>
      </files>
    </component>

    <component Cclass="Native Driver" Cgroup="IO" Cversion="1.0.0" condition="SSE-300-MPS2 Device">
      <description>Native IO driver for SSE-300</description>
      <files>
        <file category="source" name="Native_Driver/arm_mps2_io_drv.c"/>
        <file category="header" name="Native_Driver/arm_mps2_io_drv.h"/>
      </files>
    </component>

    <component Cclass="Native Driver" Cgroup="SysTimer" Cversion="1.0.0" condition="SSE-300-MPS2 Device">
      <description>Native SysTimer driver for SSE-300</description>
      <files>
        <file category="source" name="Native_Driver/systimer_armv8-m_drv.c"/>
        <file category="header" name="Native_Driver/systimer_armv8-m_drv.h"/>
      </files>
    </component>

    <component Cclass="Native Driver" Cgroup="MPC" Cversion="1.0.0" condition="SSE-300-MPS2 Device">
      <description>Native MPC driver for SSE-300</description>
      <files>
        <file category="source" name="Native_Driver/mpc_sie_drv.c"/>
        <file category="header" name="Native_Driver/mpc_sie_drv.h"/>
      </files>
    </component>

    <component Cclass="Native Driver" Cgroup="PPC" Cversion="1.0.0" condition="SSE-300-MPS2 Device">
      <description>Native PPC driver for SSE-300</description>
      <files>
        <file category="source" name="Native_Driver/ppc_sse300_drv.c"/>
        <file category="header" name="Native_Driver/ppc_sse300_drv.h"/>
      </files>
    </component>

    <component Cclass="Native Driver" Cgroup="GPIO" Cversion="1.0.0" condition="SSE-300-MPS2 Device">
      <description>Native GPIO driver for SSE-300</description>
      <files>
        <file category="source" name="Native_Driver/gpio_cmsdk_drv.c"/>
        <file category="header" name="Native_Driver/gpio_cmsdk_drv.h"/>
      </files>
    </component>

    <component Cclass="Native Driver" Cgroup="SPI" Cversion="1.0.0" condition="SSE-300-MPS2 Device">
      <description>Native SPI driver for SSE-300</description>
      <files>
        <file category="source" name="Native_Driver/spi_pl022_drv.c"/>
        <file category="header" name="Native_Driver/spi_pl022_drv.h"/>
      </files>
    </component>

    <component Cclass="Native Driver" Cgroup="Watch Dog" Cversion="1.0.0" condition="SSE-300-MPS2 Device">
      <description>Native SPI driver for SSE-300</description>
      <files>
        <file category="source" name="Native_Driver/syswdog_armv8-m_drv.c"/>
        <file category="header" name="Native_Driver/syswdog_armv8-m_drv.h"/>
      </files>
    </component>

    <component Cclass="CMSIS Driver" Cgroup="USART" Cversion="1.0.0" Capiversion="2.2.0" condition="SSE-300-MPS2 USART">
      <description>USART driver for SSE-300</description>
      <files>
        <file category="include" name="CMSIS_Driver/Config/"/>
        <file category="source" name="CMSIS_Driver/Driver_USART.c"/>
      </files>
    </component>

    <component Cclass="CMSIS Driver" Cgroup="SPI" Cversion="1.0.0" Capiversion="2.2.0" condition="SSE-300-MPS2 SPI">
      <description>SPI driver for SSE-300</description>
      <files>
        <file category="include" name="CMSIS_Driver/Config/"/>
        <file category="source" name="CMSIS_Driver/Driver_SPI.c"/>
      </files>
    </component>

    <component Cclass="CMSIS Driver" Cgroup="MPC" Cversion="1.0.0" condition="SSE-300-MPS2 MPC">
      <description>MPC driver for SSE-300</description>
      <files>
        <file category="include" name="CMSIS_Driver/Config/"/>
        <file category="header" name="CMSIS_Driver/Driver_MPC.h"/>
        <file category="source" name="CMSIS_Driver/Driver_MPC.c"/>
      </files>
    </component>

    <component Cclass="CMSIS Driver" Cgroup="PPC" Cversion="1.0.0" condition="SSE-300-MPS2 PPC">
      <description>PPC driver for SSE-300</description>
      <files>
        <file category="include" name="CMSIS_Driver/Config/"/>
        <file category="header" name="CMSIS_Driver/Driver_SSE300_PPC.h"/>
        <file category="source" name="CMSIS_Driver/Driver_SSE300_PPC.c"/>
      </files>
    </component>

  </components>

  <boards>
    <board name="V2M-MPS2-SSE-300-FVP" vendor="ARM">
      <description>ARM Versatile Express Cortex-M Prototyping System Board</description>
      <book category="overview" name="https://developer.arm.com/tools-and-software/open-source-software/arm-platforms-software/arm-ecosystem-fvps" title="Corstone-300 Ecosystem FVP (web page)"/>
      <mountedDevice Dfamily="ARM Cortex M55" Dvendor="ARM:82" Dname="SSE-300-MPS2"/>
      <feature type="XTAL"      n="25000000"/>
    </board>
  </boards>

  <examples>
    <example name="Blinky" doc="Abstract.txt" folder="Examples/Blinky">
      <description>Blinky example for SSE300 FVP.</description>
      <board name="V2M-MPS2-SSE-300-FVP" vendor="ARM"/>
        <project>
          <environment name="uv" load="Blinky.uvprojx"/>
        </project>
        <attributes>
          <category>Getting Started</category>
        </attributes>
    </example>
  </examples>

 </package>
